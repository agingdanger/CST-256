<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:PHPProfile="http:///schemas/PHPProfile/NS/0" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ZENDStyle="http:///schemas/ZENDStyle/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/PHPProfile/NS/0 pathmap://PHP_PROFILES/PHP.profile.uml#PHPProfile-Annotation-PHPProfile http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile http:///schemas/ZENDStyle/NS/0 pathmap://ZEND_PROFILES/Zend.profile.uml#ZENDStyle-Annotation-ZENDStyle">
  <uml:Model xmi:id="_gxTEYFkwEeqFbcy13qxfSA" name="MilestoneOne">
    <eAnnotations xmi:id="_uU3XEFkwEeqFbcy13qxfSA" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_uU3-IFkwEeqFbcy13qxfSA" source="codegen">
        <details xmi:id="_uU3-IVkwEeqFbcy13qxfSA" key="codegenDirectory" value="/MilestoneOne"/>
        <details xmi:id="_un618FkwEeqFbcy13qxfSA" key="AssociatedSourceCode" value="/MilestoneOne/app/Model/Education.php;3674048661/1;/MilestoneOne/app/Model/Job.php;3122046453/1;/MilestoneOne/app/Model/JobHistory.php;3055125580/1;/MilestoneOne/app/Model/Skill.php;1773224804/1;/MilestoneOne/app/Model/User.php;2720437088/1;/MilestoneOne/app/Model/userAttempt.php;905004815/1;/MilestoneOne/app/Model/userCredentials.php;1600899745/1;/MilestoneOne/app/Services/Business/AdminBusinessService.php;378309191/1;/MilestoneOne/app/Services/Business/PortfolioBusinessService.php;2436681649/1;/MilestoneOne/app/Services/Business/SecurityService.php;784830597/1;/MilestoneOne/app/Services/Business/UserBusinessService.php;3612817926/1;/MilestoneOne/app/Services/Data/AdminDataService.php;1850369955/1;/MilestoneOne/app/Services/Data/JobDataService.php;3454264540/1;/MilestoneOne/app/Services/Data/PortfolioDataService.php;1797736025/1;/MilestoneOne/app/Services/Data/UserDataService.php;1268057556/1;/MilestoneOne/app/Services/Utility/DatabaseException.php;1012390898/1;/MilestoneOne/app/Services/Utility/db_connector.php;2437879908/1;/MilestoneOne/app/Http/Controllers/AdminController.php;2665205075/1;/MilestoneOne/app/Http/Controllers/PortfolioController.php;271283016/1;/MilestoneOne/app/Http/Controllers/UserController.php;2248319591/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_y_i9gFkwEeqFbcy13qxfSA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_y_jkkFkwEeqFbcy13qxfSA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_y_jkkVkwEeqFbcy13qxfSA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_y_jkklkwEeqFbcy13qxfSA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_y_jkk1kwEeqFbcy13qxfSA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_y_jklFkwEeqFbcy13qxfSA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_y_jklVkwEeqFbcy13qxfSA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_y_jkllkwEeqFbcy13qxfSA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_y_kLoFkwEeqFbcy13qxfSA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_uTgFIFkwEeqFbcy13qxfSA" name="App">
      <packagedElement xmi:type="uml:Package" xmi:id="_uTyZAFkwEeqFbcy13qxfSA" name="Model">
        <packagedElement xmi:type="uml:Class" xmi:id="_uUyekFkwEeqFbcy13qxfSA" name="Education">
          <ownedAttribute xmi:id="_uWcEYFkwEeqFbcy13qxfSA" name="id" visibility="private"/>
          <ownedAttribute xmi:id="_uWdSgVkwEeqFbcy13qxfSA" name="name"/>
          <ownedAttribute xmi:id="_uWegoFkwEeqFbcy13qxfSA" name="years" visibility="private"/>
          <ownedAttribute xmi:id="_uWfHsFkwEeqFbcy13qxfSA" name="major"/>
          <ownedAttribute xmi:id="_uWfHsVkwEeqFbcy13qxfSA" name="minor" visibility="private"/>
          <ownedAttribute xmi:id="_uWgV0FkwEeqFbcy13qxfSA" name="startyear"/>
          <ownedAttribute xmi:id="_uWgV0VkwEeqFbcy13qxfSA" name="endyear" visibility="private"/>
          <ownedAttribute xmi:id="_uWg84VkwEeqFbcy13qxfSA" name="userID"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uW9o0FkwEeqFbcy13qxfSA" name="__construct" specification="_uV4DsFkwEeqFbcy13qxfSA">
            <ownedParameter xmi:id="_uW9o0VkwEeqFbcy13qxfSA" name="id"/>
            <ownedParameter xmi:id="_uW9o0lkwEeqFbcy13qxfSA" name="name"/>
            <ownedParameter xmi:id="_uW9o01kwEeqFbcy13qxfSA" name="years"/>
            <ownedParameter xmi:id="_uW9o1FkwEeqFbcy13qxfSA" name="major"/>
            <ownedParameter xmi:id="_uW9o1VkwEeqFbcy13qxfSA" name="minor"/>
            <ownedParameter xmi:id="_uW9o1lkwEeqFbcy13qxfSA" name="startyear"/>
            <ownedParameter xmi:id="_uW9o11kwEeqFbcy13qxfSA" name="endyear"/>
            <ownedParameter xmi:id="_uW9o2FkwEeqFbcy13qxfSA" name="userID"/>
            <language>PHP</language>
            <body>$this->id = $id;&#xD;
     $this->name = $name;&#xD;
     $this->years = $years;&#xD;
     $this->major = $major;&#xD;
     $this->minor = $minor;&#xD;
     $this->startyear = $startyear;&#xD;
     $this->endyear = $endyear;&#xD;
     $this->userID = $userID;&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uXDIYFkwEeqFbcy13qxfSA" name="getId" specification="_uU-EwVkwEeqFbcy13qxfSA">
            <language>PHP</language>
            <body>return $this->id;&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uXDIYVkwEeqFbcy13qxfSA" name="getYears" specification="_uU-r0VkwEeqFbcy13qxfSA">
            <language>PHP</language>
            <body>return $this->years;&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uXDvcFkwEeqFbcy13qxfSA" name="getMinor" specification="_uU_58VkwEeqFbcy13qxfSA">
            <language>PHP</language>
            <body>return $this->minor;&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uXDvcVkwEeqFbcy13qxfSA" name="getEndyear" specification="_uVBIEFkwEeqFbcy13qxfSA">
            <language>PHP</language>
            <body>return $this->endyear;&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uXEWgFkwEeqFbcy13qxfSA" name="setId" specification="_uV6f8FkwEeqFbcy13qxfSA">
            <ownedParameter xmi:id="_uXEWgVkwEeqFbcy13qxfSA" name="id"/>
            <language>PHP</language>
            <body>$this->id = $id;&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uXEWglkwEeqFbcy13qxfSA" name="setYears" specification="_uV7uEFkwEeqFbcy13qxfSA">
            <ownedParameter xmi:id="_uXEWg1kwEeqFbcy13qxfSA" name="years"/>
            <language>PHP</language>
            <body>$this->years = $years;&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uXE9kFkwEeqFbcy13qxfSA" name="setMinor" specification="_uV88MFkwEeqFbcy13qxfSA">
            <ownedParameter xmi:id="_uXE9kVkwEeqFbcy13qxfSA" name="minor"/>
            <language>PHP</language>
            <body>$this->minor = $minor;&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uXE9klkwEeqFbcy13qxfSA" name="setEndyear" specification="_uV-KUFkwEeqFbcy13qxfSA">
            <ownedParameter xmi:id="_uXE9k1kwEeqFbcy13qxfSA" name="endyear"/>
            <language>PHP</language>
            <body>$this->endyear = $endyear;&#xD;
 </body>
          </ownedBehavior>
          <ownedOperation xmi:id="_uU-EwVkwEeqFbcy13qxfSA" name="getId" method="_uXDIYFkwEeqFbcy13qxfSA">
            <ownedComment xmi:id="_uXQjwFkwEeqFbcy13qxfSA">
              <body>*&#xD;
     * @return mixed</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_uU-r0VkwEeqFbcy13qxfSA" name="getYears" method="_uXDIYVkwEeqFbcy13qxfSA">
            <ownedComment xmi:id="_uXQjwVkwEeqFbcy13qxfSA">
              <body>*&#xD;
     * @return mixed</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_uU_58VkwEeqFbcy13qxfSA" name="getMinor" method="_uXDvcFkwEeqFbcy13qxfSA">
            <ownedComment xmi:id="_uXQjwlkwEeqFbcy13qxfSA">
              <body>*&#xD;
     * @return mixed</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_uVBIEFkwEeqFbcy13qxfSA" name="getEndyear" method="_uXDvcVkwEeqFbcy13qxfSA">
            <ownedComment xmi:id="_uXQjw1kwEeqFbcy13qxfSA">
              <body>*&#xD;
     * @return mixed</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_uV4DsFkwEeqFbcy13qxfSA" name="__construct" method="_uW9o0FkwEeqFbcy13qxfSA">
            <ownedParameter xmi:id="_uV4DsVkwEeqFbcy13qxfSA" name="id"/>
            <ownedParameter xmi:id="_uV4qwFkwEeqFbcy13qxfSA" name="name"/>
            <ownedParameter xmi:id="_uV4qwVkwEeqFbcy13qxfSA" name="years"/>
            <ownedParameter xmi:id="_uV4qwlkwEeqFbcy13qxfSA" name="major"/>
            <ownedParameter xmi:id="_uV4qw1kwEeqFbcy13qxfSA" name="minor"/>
            <ownedParameter xmi:id="_uV4qxFkwEeqFbcy13qxfSA" name="startyear"/>
            <ownedParameter xmi:id="_uV5R0FkwEeqFbcy13qxfSA" name="endyear"/>
            <ownedParameter xmi:id="_uV5R0VkwEeqFbcy13qxfSA" name="userID"/>
          </ownedOperation>
          <ownedOperation xmi:id="_uV6f8FkwEeqFbcy13qxfSA" name="setId" method="_uXEWgFkwEeqFbcy13qxfSA">
            <ownedComment xmi:id="_uXQjxFkwEeqFbcy13qxfSA">
              <body>*&#xD;
     * @param mixed $id</body>
            </ownedComment>
            <ownedParameter xmi:id="_uV7HAFkwEeqFbcy13qxfSA" name="id"/>
          </ownedOperation>
          <ownedOperation xmi:id="_uV7uEFkwEeqFbcy13qxfSA" name="setYears" method="_uXEWglkwEeqFbcy13qxfSA">
            <ownedComment xmi:id="_uXQjxVkwEeqFbcy13qxfSA">
              <body>*&#xD;
     * @param mixed $years</body>
            </ownedComment>
            <ownedParameter xmi:id="_uV7uEVkwEeqFbcy13qxfSA" name="years"/>
          </ownedOperation>
          <ownedOperation xmi:id="_uV88MFkwEeqFbcy13qxfSA" name="setMinor" method="_uXE9kFkwEeqFbcy13qxfSA">
            <ownedComment xmi:id="_uXQjxlkwEeqFbcy13qxfSA">
              <body>*&#xD;
     * @param mixed $minor</body>
            </ownedComment>
            <ownedParameter xmi:id="_uV88MVkwEeqFbcy13qxfSA" name="minor"/>
          </ownedOperation>
          <ownedOperation xmi:id="_uV-KUFkwEeqFbcy13qxfSA" name="setEndyear" method="_uXE9klkwEeqFbcy13qxfSA">
            <ownedComment xmi:id="_uXRK0FkwEeqFbcy13qxfSA">
              <body>*&#xD;
     * @param mixed $endyear</body>
            </ownedComment>
            <ownedParameter xmi:id="_uV-KUVkwEeqFbcy13qxfSA" name="endyear"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_uVGnoFkwEeqFbcy13qxfSA" name="Job">
          <ownedAttribute xmi:id="_uWiLAFkwEeqFbcy13qxfSA" name="id" visibility="private"/>
          <ownedAttribute xmi:id="_uWiyEVkwEeqFbcy13qxfSA" name="name" visibility="private"/>
          <ownedAttribute xmi:id="_uWjZIVkwEeqFbcy13qxfSA" name="description" visibility="private"/>
          <ownedAttribute xmi:id="_uWkAMVkwEeqFbcy13qxfSA" name="company" visibility="private"/>
          <ownedAttribute xmi:id="_uWknQVkwEeqFbcy13qxfSA" name="requirements" visibility="private"/>
          <ownedAttribute xmi:id="_uWlOUVkwEeqFbcy13qxfSA" name="skills" visibility="private"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uXFkoFkwEeqFbcy13qxfSA" name="__construct" specification="_uV__gFkwEeqFbcy13qxfSA">
            <ownedParameter xmi:id="_uXFkoVkwEeqFbcy13qxfSA" name="id"/>
            <ownedParameter xmi:id="_uXFkolkwEeqFbcy13qxfSA" name="name"/>
            <ownedParameter xmi:id="_uXFko1kwEeqFbcy13qxfSA" name="description"/>
            <ownedParameter xmi:id="_uXFkpFkwEeqFbcy13qxfSA" name="company"/>
            <ownedParameter xmi:id="_uXFkpVkwEeqFbcy13qxfSA" name="requirements"/>
            <ownedParameter xmi:id="_uXFkplkwEeqFbcy13qxfSA" name="skills"/>
            <language>PHP</language>
            <body>$this->id = $id; &#xD;
     $this->name = $name;&#xD;
     $this->description = $description;&#xD;
     $this->company = $company; &#xD;
     $this->requirements = $requirements;&#xD;
     $this->skills = $skills;&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uXGLsFkwEeqFbcy13qxfSA" name="getId" specification="_uVIc0FkwEeqFbcy13qxfSA">
            <language>PHP</language>
            <body>return $this->id;&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uXGLsVkwEeqFbcy13qxfSA" name="getName" specification="_uVJD4VkwEeqFbcy13qxfSA">
            <language>PHP</language>
            <body>return $this->name;&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uXGywFkwEeqFbcy13qxfSA" name="getDescription" specification="_uVJq8VkwEeqFbcy13qxfSA">
            <language>PHP</language>
            <body>return $this->description;&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uXGywVkwEeqFbcy13qxfSA" name="getCompany" specification="_uVKSAVkwEeqFbcy13qxfSA">
            <language>PHP</language>
            <body>return $this->company;&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uXHZ0FkwEeqFbcy13qxfSA" name="getRequirements" specification="_uVLgIFkwEeqFbcy13qxfSA">
            <language>PHP</language>
            <body>return $this->requirements;&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uXHZ0VkwEeqFbcy13qxfSA" name="getSkills" specification="_uVMHMVkwEeqFbcy13qxfSA">
            <language>PHP</language>
            <body>return $this->skills;&#xD;
 </body>
          </ownedBehavior>
          <ownedOperation xmi:id="_uVIc0FkwEeqFbcy13qxfSA" name="getId" method="_uXGLsFkwEeqFbcy13qxfSA">
            <ownedComment xmi:id="_uXRK0VkwEeqFbcy13qxfSA">
              <body>*&#xD;
     * @return $id</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_uVJD4VkwEeqFbcy13qxfSA" name="getName" method="_uXGLsVkwEeqFbcy13qxfSA">
            <ownedComment xmi:id="_uXRK0lkwEeqFbcy13qxfSA">
              <body>*&#xD;
     * @return JobName</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_uVJq8VkwEeqFbcy13qxfSA" name="getDescription" method="_uXGywFkwEeqFbcy13qxfSA">
            <ownedComment xmi:id="_uXRx4FkwEeqFbcy13qxfSA">
              <body>*&#xD;
     * @return $description</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_uVKSAVkwEeqFbcy13qxfSA" name="getCompany" method="_uXGywVkwEeqFbcy13qxfSA">
            <ownedComment xmi:id="_uXRx4VkwEeqFbcy13qxfSA">
              <body>*&#xD;
     * @return $company</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_uVLgIFkwEeqFbcy13qxfSA" name="getRequirements" method="_uXHZ0FkwEeqFbcy13qxfSA">
            <ownedComment xmi:id="_uXRx4lkwEeqFbcy13qxfSA">
              <body>*&#xD;
     * @return $requirements</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_uVMHMVkwEeqFbcy13qxfSA" name="getSkills" method="_uXHZ0VkwEeqFbcy13qxfSA">
            <ownedComment xmi:id="_uXRx41kwEeqFbcy13qxfSA">
              <body>*&#xD;
     * @return $skills</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_uV__gFkwEeqFbcy13qxfSA" name="__construct" method="_uXFkoFkwEeqFbcy13qxfSA">
            <ownedParameter xmi:id="_uWAmkFkwEeqFbcy13qxfSA" name="id"/>
            <ownedParameter xmi:id="_uWAmkVkwEeqFbcy13qxfSA" name="name"/>
            <ownedParameter xmi:id="_uWAmklkwEeqFbcy13qxfSA" name="description"/>
            <ownedParameter xmi:id="_uWAmk1kwEeqFbcy13qxfSA" name="company"/>
            <ownedParameter xmi:id="_uWBNoFkwEeqFbcy13qxfSA" name="requirements"/>
            <ownedParameter xmi:id="_uWBNoVkwEeqFbcy13qxfSA" name="skills"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_uVPKgFkwEeqFbcy13qxfSA" name="JobHistory">
          <ownedAttribute xmi:id="_uWmccFkwEeqFbcy13qxfSA" name="id" visibility="private"/>
          <ownedAttribute xmi:id="_uWnDgVkwEeqFbcy13qxfSA" name="name"/>
          <ownedAttribute xmi:id="_uWnqkFkwEeqFbcy13qxfSA" name="position"/>
          <ownedAttribute xmi:id="_uWnqkVkwEeqFbcy13qxfSA" name="description" visibility="private"/>
          <ownedAttribute xmi:id="_uWoRoVkwEeqFbcy13qxfSA" name="awards">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uWoRolkwEeqFbcy13qxfSA" value="*"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_uWo4sFkwEeqFbcy13qxfSA" name="startDate" visibility="private"/>
          <ownedAttribute xmi:id="_uWpfwVkwEeqFbcy13qxfSA" name="endDate"/>
          <ownedAttribute xmi:id="_uWpfwlkwEeqFbcy13qxfSA" name="userID" visibility="private"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uXIA4FkwEeqFbcy13qxfSA" name="__construct" specification="_uWDC0FkwEeqFbcy13qxfSA">
            <ownedParameter xmi:id="_uXIA4VkwEeqFbcy13qxfSA" name="id"/>
            <ownedParameter xmi:id="_uXIA4lkwEeqFbcy13qxfSA" name="name"/>
            <ownedParameter xmi:id="_uXIA41kwEeqFbcy13qxfSA" name="position"/>
            <ownedParameter xmi:id="_uXIA5FkwEeqFbcy13qxfSA" name="description"/>
            <ownedParameter xmi:id="_uXIA5VkwEeqFbcy13qxfSA" name="awards"/>
            <ownedParameter xmi:id="_uXIA5lkwEeqFbcy13qxfSA" name="startDate"/>
            <ownedParameter xmi:id="_uXIA51kwEeqFbcy13qxfSA" name="endDate"/>
            <ownedParameter xmi:id="_uXIA6FkwEeqFbcy13qxfSA" name="userID"/>
            <language>PHP</language>
            <body>$this->id = $id;&#xD;
     $this->name = $name;&#xD;
     $this->position = $position;&#xD;
     $this->description = $description;&#xD;
     $this->awards = $awards;&#xD;
     $this->startDate = $startDate;&#xD;
     $this->endDate = $endDate;&#xD;
     $this->userID = $userID;&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uXIn8FkwEeqFbcy13qxfSA" name="getId" specification="_uVRmwFkwEeqFbcy13qxfSA">
            <language>PHP</language>
            <body>return $this->id;&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uXIn8VkwEeqFbcy13qxfSA" name="getDescription" specification="_uVSN0VkwEeqFbcy13qxfSA">
            <language>PHP</language>
            <body>return $this->description;&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uXJPAFkwEeqFbcy13qxfSA" name="getStartDate" specification="_uVS04VkwEeqFbcy13qxfSA">
            <language>PHP</language>
            <body>return $this->startDate;&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uXJPAVkwEeqFbcy13qxfSA" name="setId" specification="_uWE4AVkwEeqFbcy13qxfSA">
            <ownedParameter xmi:id="_uXJPAlkwEeqFbcy13qxfSA" name="id"/>
            <language>PHP</language>
            <body>$this->id = $id;&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uXJPA1kwEeqFbcy13qxfSA" name="setDescription" specification="_uWGGIFkwEeqFbcy13qxfSA">
            <ownedParameter xmi:id="_uXJPBFkwEeqFbcy13qxfSA" name="description"/>
            <language>PHP</language>
            <body>$this->description = $description;&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uXJ2EFkwEeqFbcy13qxfSA" name="setStartDate" specification="_uWGtMFkwEeqFbcy13qxfSA">
            <ownedParameter xmi:id="_uXJ2EVkwEeqFbcy13qxfSA" name="startDate"/>
            <language>PHP</language>
            <body>$this->startDate = $startDate;&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uXJ2ElkwEeqFbcy13qxfSA" name="getUserID" specification="_uVUqEFkwEeqFbcy13qxfSA">
            <language>PHP</language>
            <body>return $this->userID;&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uXJ2E1kwEeqFbcy13qxfSA" name="setUserID" specification="_uWHUQVkwEeqFbcy13qxfSA">
            <ownedParameter xmi:id="_uXJ2FFkwEeqFbcy13qxfSA" name="userID"/>
            <language>PHP</language>
            <body>$this->userID = $userID;&#xD;
 </body>
          </ownedBehavior>
          <ownedOperation xmi:id="_uVRmwFkwEeqFbcy13qxfSA" name="getId" method="_uXIn8FkwEeqFbcy13qxfSA">
            <ownedComment xmi:id="_uXRx5FkwEeqFbcy13qxfSA">
              <body>*&#xD;
     * @return mixed</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_uVSN0VkwEeqFbcy13qxfSA" name="getDescription" method="_uXIn8VkwEeqFbcy13qxfSA">
            <ownedComment xmi:id="_uXRx5VkwEeqFbcy13qxfSA">
              <body>*&#xD;
     * @return mixed</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_uVS04VkwEeqFbcy13qxfSA" name="getStartDate" method="_uXJPAFkwEeqFbcy13qxfSA">
            <ownedComment xmi:id="_uXRx5lkwEeqFbcy13qxfSA">
              <body>*&#xD;
     * @return mixed</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_uVUqEFkwEeqFbcy13qxfSA" name="getUserID" method="_uXJ2ElkwEeqFbcy13qxfSA">
            <ownedComment xmi:id="_uXSY8lkwEeqFbcy13qxfSA">
              <body>*&#xD;
     * @return mixed</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_uWDC0FkwEeqFbcy13qxfSA" name="__construct" method="_uXIA4FkwEeqFbcy13qxfSA">
            <ownedParameter xmi:id="_uWDp4FkwEeqFbcy13qxfSA" name="id"/>
            <ownedParameter xmi:id="_uWDp4VkwEeqFbcy13qxfSA" name="name"/>
            <ownedParameter xmi:id="_uWDp4lkwEeqFbcy13qxfSA" name="position"/>
            <ownedParameter xmi:id="_uWDp41kwEeqFbcy13qxfSA" name="description"/>
            <ownedParameter xmi:id="_uWDp5FkwEeqFbcy13qxfSA" name="awards"/>
            <ownedParameter xmi:id="_uWEQ8FkwEeqFbcy13qxfSA" name="startDate"/>
            <ownedParameter xmi:id="_uWEQ8VkwEeqFbcy13qxfSA" name="endDate"/>
            <ownedParameter xmi:id="_uWEQ8lkwEeqFbcy13qxfSA" name="userID"/>
          </ownedOperation>
          <ownedOperation xmi:id="_uWE4AVkwEeqFbcy13qxfSA" name="setId" method="_uXJPAVkwEeqFbcy13qxfSA">
            <ownedComment xmi:id="_uXRx51kwEeqFbcy13qxfSA">
              <body>*&#xD;
     * @param mixed $id</body>
            </ownedComment>
            <ownedParameter xmi:id="_uWE4AlkwEeqFbcy13qxfSA" name="id"/>
          </ownedOperation>
          <ownedOperation xmi:id="_uWGGIFkwEeqFbcy13qxfSA" name="setDescription" method="_uXJPA1kwEeqFbcy13qxfSA">
            <ownedComment xmi:id="_uXSY8FkwEeqFbcy13qxfSA">
              <body>*&#xD;
     * @param mixed $description</body>
            </ownedComment>
            <ownedParameter xmi:id="_uWGGIVkwEeqFbcy13qxfSA" name="description"/>
          </ownedOperation>
          <ownedOperation xmi:id="_uWGtMFkwEeqFbcy13qxfSA" name="setStartDate" method="_uXJ2EFkwEeqFbcy13qxfSA">
            <ownedComment xmi:id="_uXSY8VkwEeqFbcy13qxfSA">
              <body>*&#xD;
     * @param mixed $startDate</body>
            </ownedComment>
            <ownedParameter xmi:id="_uWGtMVkwEeqFbcy13qxfSA" name="startDate"/>
          </ownedOperation>
          <ownedOperation xmi:id="_uWHUQVkwEeqFbcy13qxfSA" name="setUserID" method="_uXJ2E1kwEeqFbcy13qxfSA">
            <ownedComment xmi:id="_uXSY81kwEeqFbcy13qxfSA">
              <body>*&#xD;
     * @param mixed $userID</body>
            </ownedComment>
            <ownedParameter xmi:id="_uWHUQlkwEeqFbcy13qxfSA" name="userID"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_uVaJoFkwEeqFbcy13qxfSA" name="Skill">
          <ownedAttribute xmi:id="_uWrU8FkwEeqFbcy13qxfSA" name="id" visibility="private"/>
          <ownedAttribute xmi:id="_uWr8AFkwEeqFbcy13qxfSA" name="name"/>
          <ownedAttribute xmi:id="_uWr8AVkwEeqFbcy13qxfSA" name="userID"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uXKdIFkwEeqFbcy13qxfSA" name="__construct" specification="_uWKXkFkwEeqFbcy13qxfSA">
            <ownedParameter xmi:id="_uXKdIVkwEeqFbcy13qxfSA" name="id"/>
            <ownedParameter xmi:id="_uXKdIlkwEeqFbcy13qxfSA" name="name"/>
            <ownedParameter xmi:id="_uXKdI1kwEeqFbcy13qxfSA" name="userID"/>
            <language>PHP</language>
            <body>$this->id = $id;&#xD;
    $this->name = $name;&#xD;
    $this->userID = $userID;&#xD;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uXLEMFkwEeqFbcy13qxfSA" name="getId" specification="_uVb-0FkwEeqFbcy13qxfSA">
            <language>PHP</language>
            <body>return $this->id;&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uXLEMVkwEeqFbcy13qxfSA" name="setId" specification="_uWLlsFkwEeqFbcy13qxfSA">
            <ownedParameter xmi:id="_uXLEMlkwEeqFbcy13qxfSA" name="id"/>
            <language>PHP</language>
            <body>$this->id = $id;&#xD;
 </body>
          </ownedBehavior>
          <ownedOperation xmi:id="_uVb-0FkwEeqFbcy13qxfSA" name="getId" method="_uXLEMFkwEeqFbcy13qxfSA">
            <ownedComment xmi:id="_uXSY9FkwEeqFbcy13qxfSA">
              <body>*&#xD;
     * @return mixed</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_uWKXkFkwEeqFbcy13qxfSA" name="__construct" method="_uXKdIFkwEeqFbcy13qxfSA">
            <ownedParameter xmi:id="_uWK-oFkwEeqFbcy13qxfSA" name="id"/>
            <ownedParameter xmi:id="_uWK-oVkwEeqFbcy13qxfSA" name="name"/>
            <ownedParameter xmi:id="_uWK-olkwEeqFbcy13qxfSA" name="userID"/>
          </ownedOperation>
          <ownedOperation xmi:id="_uWLlsFkwEeqFbcy13qxfSA" name="setId" method="_uXLEMVkwEeqFbcy13qxfSA">
            <ownedComment xmi:id="_uXSY9VkwEeqFbcy13qxfSA">
              <body>*&#xD;
     * @param mixed $id</body>
            </ownedComment>
            <ownedParameter xmi:id="_uWLlsVkwEeqFbcy13qxfSA" name="id"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_uVfpMFkwEeqFbcy13qxfSA" name="User">
          <ownedAttribute xmi:id="_uWsjEFkwEeqFbcy13qxfSA" name="id"/>
          <ownedAttribute xmi:id="_uWtKIFkwEeqFbcy13qxfSA" name="firstName" visibility="private"/>
          <ownedAttribute xmi:id="_uWtxMFkwEeqFbcy13qxfSA" name="lastName"/>
          <ownedAttribute xmi:id="_uWtxMVkwEeqFbcy13qxfSA" name="email"/>
          <ownedAttribute xmi:id="_uWuYQFkwEeqFbcy13qxfSA" name="phone"/>
          <ownedAttribute xmi:id="_uWuYQVkwEeqFbcy13qxfSA" name="role" visibility="private"/>
          <ownedAttribute xmi:id="_uWu_UVkwEeqFbcy13qxfSA" name="credentials" visibility="private"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uXLrQFkwEeqFbcy13qxfSA" name="__construct" specification="_uWNa4FkwEeqFbcy13qxfSA">
            <ownedParameter xmi:id="_uXLrQVkwEeqFbcy13qxfSA" name="id"/>
            <ownedParameter xmi:id="_uXLrQlkwEeqFbcy13qxfSA" name="firstName"/>
            <ownedParameter xmi:id="_uXLrQ1kwEeqFbcy13qxfSA" name="lastName"/>
            <ownedParameter xmi:id="_uXLrRFkwEeqFbcy13qxfSA" name="username"/>
            <ownedParameter xmi:id="_uXLrRVkwEeqFbcy13qxfSA" name="password"/>
            <ownedParameter xmi:id="_uXLrRlkwEeqFbcy13qxfSA" name="email"/>
            <ownedParameter xmi:id="_uXLrR1kwEeqFbcy13qxfSA" name="phone"/>
            <ownedParameter xmi:id="_uXLrSFkwEeqFbcy13qxfSA" name="role"/>
            <language>PHP</language>
            <body>$this->id = $id;&#xD;
     $this->firstName = $firstName;&#xD;
     $this->lastName = $lastName;&#xD;
     $this->email = $email;&#xD;
     $this->phone = $phone; &#xD;
     $this->role = $role;&#xD;
     &#xD;
     //Encapsulating the User Login credentials into the user model&#xD;
     $this->credentials = new userCredentials($username,$password);&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uXMSUFkwEeqFbcy13qxfSA" name="getFirstName" specification="_uVisgFkwEeqFbcy13qxfSA">
            <language>PHP</language>
            <body>return $this->firstName;&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uXMSUVkwEeqFbcy13qxfSA" name="setFirstName" specification="_uWPQEVkwEeqFbcy13qxfSA">
            <ownedParameter xmi:id="_uXMSUlkwEeqFbcy13qxfSA" name="firstName"/>
            <language>PHP</language>
            <body>$this->firstName = $firstName;&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uXMSU1kwEeqFbcy13qxfSA" name="getUsername" specification="_uVj6oFkwEeqFbcy13qxfSA">
            <language>PHP</language>
            <body>return $this->credentials->getUsername();&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uXM5YFkwEeqFbcy13qxfSA" name="setUsername" specification="_uWQeMFkwEeqFbcy13qxfSA">
            <ownedParameter xmi:id="_uXM5YVkwEeqFbcy13qxfSA" name="username"/>
            <language>PHP</language>
            <body>$this->username = $username;&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uXM5YlkwEeqFbcy13qxfSA" name="getPassword" specification="_uVlIwFkwEeqFbcy13qxfSA">
            <language>PHP</language>
            <body>return $this->credentials->getPassword();&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uXM5Y1kwEeqFbcy13qxfSA" name="setPassword" specification="_uWRFQVkwEeqFbcy13qxfSA">
            <ownedParameter xmi:id="_uXM5ZFkwEeqFbcy13qxfSA" name="password"/>
            <language>PHP</language>
            <body>$this->password = $password;&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uXNgcFkwEeqFbcy13qxfSA" name="getRole" specification="_uVlv0FkwEeqFbcy13qxfSA">
            <language>PHP</language>
            <body>return $this->role;&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uXNgcVkwEeqFbcy13qxfSA" name="setRole" specification="_uWSTYFkwEeqFbcy13qxfSA">
            <ownedParameter xmi:id="_uXNgclkwEeqFbcy13qxfSA" name="role"/>
            <language>PHP</language>
            <body>$this->role = $role;&#xD;
 </body>
          </ownedBehavior>
          <ownedOperation xmi:id="_uVisgFkwEeqFbcy13qxfSA" name="getFirstName" method="_uXMSUFkwEeqFbcy13qxfSA">
            <ownedComment xmi:id="_uXTAAFkwEeqFbcy13qxfSA">
              <body>*&#xD;
     * @return mixed</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_uVj6oFkwEeqFbcy13qxfSA" name="getUsername" method="_uXMSU1kwEeqFbcy13qxfSA">
            <ownedComment xmi:id="_uXTAAlkwEeqFbcy13qxfSA">
              <body>*&#xD;
     * @return mixed</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_uVlIwFkwEeqFbcy13qxfSA" name="getPassword" method="_uXM5YlkwEeqFbcy13qxfSA">
            <ownedComment xmi:id="_uXTABFkwEeqFbcy13qxfSA">
              <body>*&#xD;
     * @return mixed</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_uVlv0FkwEeqFbcy13qxfSA" name="getRole" method="_uXNgcFkwEeqFbcy13qxfSA">
            <ownedComment xmi:id="_uXTnEVkwEeqFbcy13qxfSA">
              <body>*&#xD;
     * @return mixed</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_uWNa4FkwEeqFbcy13qxfSA" name="__construct" method="_uXLrQFkwEeqFbcy13qxfSA">
            <ownedParameter xmi:id="_uWOB8FkwEeqFbcy13qxfSA" name="id"/>
            <ownedParameter xmi:id="_uWOB8VkwEeqFbcy13qxfSA" name="firstName"/>
            <ownedParameter xmi:id="_uWOB8lkwEeqFbcy13qxfSA" name="lastName"/>
            <ownedParameter xmi:id="_uWOB81kwEeqFbcy13qxfSA" name="username"/>
            <ownedParameter xmi:id="_uWOpAFkwEeqFbcy13qxfSA" name="password"/>
            <ownedParameter xmi:id="_uWOpAVkwEeqFbcy13qxfSA" name="email"/>
            <ownedParameter xmi:id="_uWOpAlkwEeqFbcy13qxfSA" name="phone"/>
            <ownedParameter xmi:id="_uWOpA1kwEeqFbcy13qxfSA" name="role"/>
          </ownedOperation>
          <ownedOperation xmi:id="_uWPQEVkwEeqFbcy13qxfSA" name="setFirstName" method="_uXMSUVkwEeqFbcy13qxfSA">
            <ownedComment xmi:id="_uXTAAVkwEeqFbcy13qxfSA">
              <body>*&#xD;
     * @param mixed $firstName</body>
            </ownedComment>
            <ownedParameter xmi:id="_uWP3IFkwEeqFbcy13qxfSA" name="firstName"/>
          </ownedOperation>
          <ownedOperation xmi:id="_uWQeMFkwEeqFbcy13qxfSA" name="setUsername" method="_uXM5YFkwEeqFbcy13qxfSA">
            <ownedComment xmi:id="_uXTAA1kwEeqFbcy13qxfSA">
              <body>*&#xD;
     * @param mixed $username</body>
            </ownedComment>
            <ownedParameter xmi:id="_uWQeMVkwEeqFbcy13qxfSA" name="username"/>
          </ownedOperation>
          <ownedOperation xmi:id="_uWRFQVkwEeqFbcy13qxfSA" name="setPassword" method="_uXM5Y1kwEeqFbcy13qxfSA">
            <ownedComment xmi:id="_uXTnEFkwEeqFbcy13qxfSA">
              <body>*&#xD;
     * @param mixed $password</body>
            </ownedComment>
            <ownedParameter xmi:id="_uWRFQlkwEeqFbcy13qxfSA" name="password"/>
          </ownedOperation>
          <ownedOperation xmi:id="_uWSTYFkwEeqFbcy13qxfSA" name="setRole" method="_uXNgcVkwEeqFbcy13qxfSA">
            <ownedComment xmi:id="_uXTnElkwEeqFbcy13qxfSA">
              <body>*&#xD;
     * @param mixed $role</body>
            </ownedComment>
            <ownedParameter xmi:id="_uWSTYVkwEeqFbcy13qxfSA" name="role"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_uVqoUFkwEeqFbcy13qxfSA" name="userAttempt">
          <ownedAttribute xmi:id="_uWwNcFkwEeqFbcy13qxfSA" name="username" visibility="private"/>
          <ownedAttribute xmi:id="_uWw0gVkwEeqFbcy13qxfSA" name="password" visibility="private"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uXOHgFkwEeqFbcy13qxfSA" name="__construct" specification="_uWUIkFkwEeqFbcy13qxfSA">
            <ownedParameter xmi:id="_uXOHgVkwEeqFbcy13qxfSA" name="username"/>
            <ownedParameter xmi:id="_uXOHglkwEeqFbcy13qxfSA" name="password"/>
            <language>PHP</language>
            <body>$this->username = $username;&#xD;
     $this->password = $password;&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uXOukFkwEeqFbcy13qxfSA" name="getUsername" specification="_uVtEkFkwEeqFbcy13qxfSA">
            <language>PHP</language>
            <body>return $this->username;&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uXOukVkwEeqFbcy13qxfSA" name="getPassword" specification="_uVtroVkwEeqFbcy13qxfSA">
            <language>PHP</language>
            <body>return $this->password;&#xD;
 </body>
          </ownedBehavior>
          <ownedOperation xmi:id="_uVtEkFkwEeqFbcy13qxfSA" name="getUsername" method="_uXOukFkwEeqFbcy13qxfSA">
            <ownedComment xmi:id="_uXTnE1kwEeqFbcy13qxfSA">
              <body>*&#xD;
     * @return mixed</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_uVtroVkwEeqFbcy13qxfSA" name="getPassword" method="_uXOukVkwEeqFbcy13qxfSA">
            <ownedComment xmi:id="_uXTnFFkwEeqFbcy13qxfSA">
              <body>*&#xD;
     * @return mixed</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_uWUIkFkwEeqFbcy13qxfSA" name="__construct" method="_uXOHgFkwEeqFbcy13qxfSA">
            <ownedParameter xmi:id="_uWUIkVkwEeqFbcy13qxfSA" name="username"/>
            <ownedParameter xmi:id="_uWUIklkwEeqFbcy13qxfSA" name="password"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_uVu5wFkwEeqFbcy13qxfSA" name="userCredentials">
          <ownedAttribute xmi:id="_uWxbkVkwEeqFbcy13qxfSA" name="username" visibility="private"/>
          <ownedAttribute xmi:id="_uWyCoVkwEeqFbcy13qxfSA" name="password" visibility="private"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uXPVoFkwEeqFbcy13qxfSA" name="__construct" specification="_uWVWsFkwEeqFbcy13qxfSA">
            <ownedParameter xmi:id="_uXPVoVkwEeqFbcy13qxfSA" name="username"/>
            <ownedParameter xmi:id="_uXPVolkwEeqFbcy13qxfSA" name="password"/>
            <language>PHP</language>
            <body>$this->username = $username;&#xD;
     $this->password = $password;&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uXPVo1kwEeqFbcy13qxfSA" name="getUsername" specification="_uVwu8FkwEeqFbcy13qxfSA">
            <language>PHP</language>
            <body>return $this->username;&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uXPVpFkwEeqFbcy13qxfSA" name="getPassword" specification="_uVxWAVkwEeqFbcy13qxfSA">
            <language>PHP</language>
            <body>return $this->password;&#xD;
 </body>
          </ownedBehavior>
          <ownedOperation xmi:id="_uVwu8FkwEeqFbcy13qxfSA" name="getUsername" method="_uXPVo1kwEeqFbcy13qxfSA">
            <ownedComment xmi:id="_uXUOIFkwEeqFbcy13qxfSA">
              <body>*&#xD;
     * @return mixed</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_uVxWAVkwEeqFbcy13qxfSA" name="getPassword" method="_uXPVpFkwEeqFbcy13qxfSA">
            <ownedComment xmi:id="_uXUOIVkwEeqFbcy13qxfSA">
              <body>*&#xD;
     * @return mixed</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_uWVWsFkwEeqFbcy13qxfSA" name="__construct" method="_uXPVoFkwEeqFbcy13qxfSA">
            <ownedParameter xmi:id="_uWVWsVkwEeqFbcy13qxfSA" name="username"/>
            <ownedParameter xmi:id="_uWV9wFkwEeqFbcy13qxfSA" name="password"/>
          </ownedOperation>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_y-ra0FkwEeqFbcy13qxfSA" name="Services">
        <packagedElement xmi:type="uml:Package" xmi:id="_y-vFMFkwEeqFbcy13qxfSA" name="Business">
          <packagedElement xmi:type="uml:Class" xmi:id="_y_cP0FkwEeqFbcy13qxfSA" name="AdminBusinessService">
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zBeQIFkwEeqFbcy13qxfSA" name="populate" specification="_y_fTIFkwEeqFbcy13qxfSA">
              <language>PHP</language>
              <body>$db = new db_connector();&#xD;
     $conn = $db->getConnection();&#xD;
     &#xD;
     // Sending it to Data Service: &#xD;
     $adminData = new AdminDataService($conn);&#xD;
     $userData = $adminData->findAll();&#xD;
     &#xD;
     // Close the PDO connection&#xD;
     $conn = null;&#xD;
     &#xD;
     return $userData;&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zBe3MFkwEeqFbcy13qxfSA" name="populateJobs" specification="_y_f6MFkwEeqFbcy13qxfSA">
              <language>PHP</language>
              <body>$db = new db_connector();&#xD;
     $conn = $db->getConnection();&#xD;
     &#xD;
     // Sending it to Data Service:&#xD;
     $adminData = new JobDataService($conn);&#xD;
     $jobsData = $adminData->findAllJobs();&#xD;
     &#xD;
     // Close the PDO connection&#xD;
     $conn = null;&#xD;
     &#xD;
     return $jobsData;&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zBe3MVkwEeqFbcy13qxfSA" name="publishJob" specification="_zAYrAFkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zBe3MlkwEeqFbcy13qxfSA" name="job"/>
              <language>PHP</language>
              <body>$db = new db_connector();&#xD;
     $conn = $db->getConnection();&#xD;
     &#xD;
     // Sending job to Data Service:&#xD;
     $service = new JobDataService($conn);&#xD;
     $jobsData = $service->create($job);&#xD;
     &#xD;
     // Close the PDO connection&#xD;
     $conn = null;&#xD;
     &#xD;
     return $jobsData;&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zBfeQFkwEeqFbcy13qxfSA" name="modify" specification="_zA0I0FkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zBfeQVkwEeqFbcy13qxfSA" name="user" type="_zAyToFkwEeqFbcy13qxfSA"/>
              <language>PHP</language>
              <body>$db = new db_connector();&#xD;
     $conn = $db->getConnection();&#xD;
     &#xD;
     // Send user and conn to the Data Service to Update: &#xD;
     $adminData = new AdminDataService($conn);        &#xD;
     $userData = $adminData->update($user);&#xD;
     &#xD;
     $conn = null;&#xD;
     &#xD;
     return $userData;&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zBfeQlkwEeqFbcy13qxfSA" name="jobModify" specification="_zA3MIVkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zBfeQ1kwEeqFbcy13qxfSA" name="job" type="_zA1W8FkwEeqFbcy13qxfSA"/>
              <language>PHP</language>
              <body>$db = new db_connector();&#xD;
     $conn = $db->getConnection();&#xD;
     &#xD;
     // Call the Data Service to Update the Jobpost: &#xD;
     $adminData = new JobDataService($conn);        &#xD;
     $isJobData = $adminData->update($job);&#xD;
     &#xD;
     // Close the PDO Connection: &#xD;
     $conn = null;&#xD;
     &#xD;
     return $isJobData;&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zBfeRFkwEeqFbcy13qxfSA" name="suspend" specification="_zA4aQFkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zBfeRVkwEeqFbcy13qxfSA" name="user" type="_zAyToFkwEeqFbcy13qxfSA"/>
              <language>PHP</language>
              <body>$db = new db_connector();&#xD;
     $conn = $db->getConnection();&#xD;
     &#xD;
     // Send user and conn to the DataService to Update the role: &#xD;
     $service = new AdminDataService($conn);&#xD;
     $adminData = $service->update($user);&#xD;
     &#xD;
     $conn = null;&#xD;
     &#xD;
     return $adminData;&#xD;
     &#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zBfeRlkwEeqFbcy13qxfSA" name="remove" specification="_zA5BUVkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zBfeR1kwEeqFbcy13qxfSA" name="user" type="_zAyToFkwEeqFbcy13qxfSA"/>
              <language>PHP</language>
              <body>$db = new db_connector();&#xD;
     $conn = $db->getConnection();&#xD;
     &#xD;
     // Send user and conn to the DataService to remove a User: &#xD;
     $service = new AdminDataService($conn);&#xD;
     $adminData = $service->delete($user);&#xD;
     $conn = null;&#xD;
     &#xD;
     return $adminData;&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zBgFUFkwEeqFbcy13qxfSA" name="obliterateJob" specification="_zA5oYVkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zBgFUVkwEeqFbcy13qxfSA" name="job" type="_zA1W8FkwEeqFbcy13qxfSA"/>
              <language>PHP</language>
              <body>$db = new db_connector();&#xD;
     $conn = $db->getConnection();&#xD;
     &#xD;
     // Send the Job's ID mainly to the data service to delete it: &#xD;
     $service = new JobDataService($conn);&#xD;
     $adminData = $service->delete($job);&#xD;
     &#xD;
     // Close the PDO Connection: &#xD;
     $conn = null;&#xD;
     &#xD;
     return $adminData;&#xD;
 </body>
            </ownedBehavior>
            <ownedOperation xmi:id="_y_fTIFkwEeqFbcy13qxfSA" name="populate" method="_zBeQIFkwEeqFbcy13qxfSA">
              <ownedComment xmi:id="_zBooMFkwEeqFbcy13qxfSA">
                <body>*&#xD;
     * Populating the userdata into the datatable&#xD;
     * &#xD;
     * @return $userData</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_y_f6MFkwEeqFbcy13qxfSA" name="populateJobs" method="_zBe3MFkwEeqFbcy13qxfSA">
              <ownedComment xmi:id="_zBooMVkwEeqFbcy13qxfSA">
                <body>*&#xD;
     * Populating Jobs into the datatable&#xD;
     *&#xD;
     * @return $userData</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_zAYrAFkwEeqFbcy13qxfSA" name="publishJob" method="_zBe3MVkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zAYrAVkwEeqFbcy13qxfSA" name="job"/>
            </ownedOperation>
            <ownedOperation xmi:id="_zA0I0FkwEeqFbcy13qxfSA" name="modify" method="_zBfeQFkwEeqFbcy13qxfSA">
              <ownedComment xmi:id="_zBooMlkwEeqFbcy13qxfSA">
                <body>*&#xD;
     * Modify the User's Requested changes&#xD;
     * @param User $user&#xD;
     * @return boolean</body>
              </ownedComment>
              <ownedParameter xmi:id="_zA0I0VkwEeqFbcy13qxfSA" name="user" type="_zAyToFkwEeqFbcy13qxfSA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_zA3MIVkwEeqFbcy13qxfSA" name="jobModify" method="_zBfeQlkwEeqFbcy13qxfSA">
              <ownedComment xmi:id="_zBooM1kwEeqFbcy13qxfSA">
                <body>*&#xD;
     * Modify the Job's info: &#xD;
     * @param Job $job&#xD;
     * @return boolean</body>
              </ownedComment>
              <ownedParameter xmi:id="_zA3MIlkwEeqFbcy13qxfSA" name="job" type="_zA1W8FkwEeqFbcy13qxfSA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_zA4aQFkwEeqFbcy13qxfSA" name="suspend" method="_zBfeRFkwEeqFbcy13qxfSA">
              <ownedComment xmi:id="_zBooNFkwEeqFbcy13qxfSA">
                <body>*&#xD;
     * Suspend the User by updating the role:&#xD;
     * @param User $user</body>
              </ownedComment>
              <ownedParameter xmi:id="_zA4aQVkwEeqFbcy13qxfSA" name="user" type="_zAyToFkwEeqFbcy13qxfSA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_zA5BUVkwEeqFbcy13qxfSA" name="remove" method="_zBfeRlkwEeqFbcy13qxfSA">
              <ownedComment xmi:id="_zBooNVkwEeqFbcy13qxfSA">
                <body>*&#xD;
     * Remove/Delete the User from the Database&#xD;
     * @param User $user&#xD;
     * @return boolean value</body>
              </ownedComment>
              <ownedParameter xmi:id="_zA5BUlkwEeqFbcy13qxfSA" name="user" type="_zAyToFkwEeqFbcy13qxfSA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_zA5oYVkwEeqFbcy13qxfSA" name="obliterateJob" method="_zBgFUFkwEeqFbcy13qxfSA">
              <ownedComment xmi:id="_zBooNlkwEeqFbcy13qxfSA">
                <body>*&#xD;
     * Delete the selected Job&#xD;
     * @param Job $job&#xD;
     * @return boolean $adminData</body>
              </ownedComment>
              <ownedParameter xmi:id="_zA6PcFkwEeqFbcy13qxfSA" name="job" type="_zA1W8FkwEeqFbcy13qxfSA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_y_odEFkwEeqFbcy13qxfSA" name="PortfolioBusinessService">
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zBgFUlkwEeqFbcy13qxfSA" name="postJobExperience" specification="_zAagMFkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zBgFU1kwEeqFbcy13qxfSA" name="job"/>
              <language>PHP</language>
              <body>$db = new db_connector();&#xD;
     $conn = $db->getConnection();&#xD;
     $portfolioService = new PortfolioDataService($conn);&#xD;
     &#xD;
     $portfolioData = $portfolioService->createJob($job);&#xD;
     &#xD;
     $conn = null;&#xD;
     &#xD;
     return $portfolioData;&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zBgFVFkwEeqFbcy13qxfSA" name="postEducationExperience" specification="_zAbHQFkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zBgFVVkwEeqFbcy13qxfSA" name="ed"/>
              <language>PHP</language>
              <body>$db = new db_connector();&#xD;
     $conn = $db->getConnection();&#xD;
     $portfolioService = new PortfolioDataService($conn);&#xD;
     &#xD;
     $portfolioData = $portfolioService->createEducation($ed);&#xD;
     &#xD;
     $conn = null;&#xD;
     &#xD;
     return $portfolioData;&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zBgFVlkwEeqFbcy13qxfSA" name="postSkillExperience" specification="_zAbuUVkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zBgFV1kwEeqFbcy13qxfSA" name="skill"/>
              <language>PHP</language>
              <body>$db = new db_connector();&#xD;
     $conn = $db->getConnection();&#xD;
     $portfolioService = new PortfolioDataService($conn);&#xD;
     &#xD;
     $portfolioData = $portfolioService->createSkill($skill);&#xD;
     &#xD;
     $conn = null;&#xD;
     &#xD;
     return $portfolioData;&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zBgFWFkwEeqFbcy13qxfSA" name="retrieveUserJobs" specification="_zAcVYVkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zBgFWVkwEeqFbcy13qxfSA" name="userID"/>
              <language>PHP</language>
              <body>$db = new db_connector();&#xD;
     $conn = $db->getConnection();&#xD;
     $portfolioService = new PortfolioDataService($conn);&#xD;
     &#xD;
     $portfolioData = $portfolioService->findAllUserJobs($userID);&#xD;
     &#xD;
     $conn = null;&#xD;
     &#xD;
     return $portfolioData;&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zBgsYFkwEeqFbcy13qxfSA" name="retrieveUserSkills" specification="_zAc8cVkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zBgsYVkwEeqFbcy13qxfSA" name="userID"/>
              <language>PHP</language>
              <body>$db = new db_connector();&#xD;
     $conn = $db->getConnection();&#xD;
     $portfolioService = new PortfolioDataService($conn);&#xD;
     &#xD;
     $portfolioData = $portfolioService->findAllUserSkills($userID);&#xD;
     &#xD;
     $conn = null;&#xD;
     &#xD;
     return $portfolioData;&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zBgsYlkwEeqFbcy13qxfSA" name="retrieveUserEducation" specification="_zAc8dFkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zBgsY1kwEeqFbcy13qxfSA" name="userID"/>
              <language>PHP</language>
              <body>$db = new db_connector();&#xD;
     $conn = $db->getConnection();&#xD;
     $portfolioService = new PortfolioDataService($conn);&#xD;
     &#xD;
     $portfolioData = $portfolioService->findAllUserEducation($userID);&#xD;
     &#xD;
     $conn = null;&#xD;
     &#xD;
     return $portfolioData;&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zBgsZFkwEeqFbcy13qxfSA" name="removeUserJob" specification="_zAdjglkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zBgsZVkwEeqFbcy13qxfSA" name="id"/>
              <language>PHP</language>
              <body>$db = new db_connector();&#xD;
     $conn = $db->getConnection();&#xD;
     $portfolioService = new PortfolioDataService($conn);&#xD;
     &#xD;
     $portfolioData = $portfolioService->deleteJob($id);&#xD;
     &#xD;
     $conn = null;&#xD;
     &#xD;
     return $portfolioData;&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zBgsZlkwEeqFbcy13qxfSA" name="removeUserEducation" specification="_zAeKkVkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zBgsZ1kwEeqFbcy13qxfSA" name="id"/>
              <language>PHP</language>
              <body>$db = new db_connector();&#xD;
     $conn = $db->getConnection();&#xD;
     $portfolioService = new PortfolioDataService($conn);&#xD;
     &#xD;
     $portfolioData = $portfolioService->deleteEducation($id);&#xD;
     &#xD;
     $conn = null;&#xD;
     &#xD;
     return $portfolioData;&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zBhTcFkwEeqFbcy13qxfSA" name="removeUserSkill" specification="_zAexoVkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zBhTcVkwEeqFbcy13qxfSA" name="id"/>
              <language>PHP</language>
              <body>$db = new db_connector();&#xD;
     $conn = $db->getConnection();&#xD;
     $portfolioService = new PortfolioDataService($conn);&#xD;
     &#xD;
     $portfolioData = $portfolioService->deleteSkill($id);&#xD;
     &#xD;
     $conn = null;&#xD;
     &#xD;
     return $portfolioData;&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zBhTclkwEeqFbcy13qxfSA" name="modifyJobHistory" specification="_zA8rsVkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zBhTc1kwEeqFbcy13qxfSA" name="job" type="_zA7dkFkwEeqFbcy13qxfSA"/>
              <language>PHP</language>
              <body>$db = new db_connector();&#xD;
     $conn = $db->getConnection();&#xD;
     $portfolioService = new PortfolioDataService($conn);&#xD;
     &#xD;
     $portfolioData = $portfolioService->updateJobHistory($job);&#xD;
     &#xD;
     $conn = null;&#xD;
     &#xD;
     return $portfolioData;&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zBhTdFkwEeqFbcy13qxfSA" name="modifyEducationHistory" specification="_zA_vAFkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zBhTdVkwEeqFbcy13qxfSA" name="ed" type="_zA950FkwEeqFbcy13qxfSA"/>
              <language>PHP</language>
              <body>$db = new db_connector();&#xD;
     $conn = $db->getConnection();&#xD;
     $portfolioService = new PortfolioDataService($conn);&#xD;
     &#xD;
     $portfolioData = $portfolioService->updateEducationHistory($ed);&#xD;
     &#xD;
     $conn = null;&#xD;
     &#xD;
     return $portfolioData;&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zBh6gFkwEeqFbcy13qxfSA" name="modifySkillHistory" specification="_zBBkMVkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zBh6gVkwEeqFbcy13qxfSA" name="skill" type="_zBAWEVkwEeqFbcy13qxfSA"/>
              <language>PHP</language>
              <body>$db = new db_connector();&#xD;
     $conn = $db->getConnection();&#xD;
     $portfolioService = new PortfolioDataService($conn);&#xD;
     &#xD;
     $portfolioData = $portfolioService->updateSkillHistory($skill);&#xD;
     &#xD;
     $conn = null;&#xD;
     &#xD;
     return $portfolioData;&#xD;
 </body>
            </ownedBehavior>
            <ownedOperation xmi:id="_zAagMFkwEeqFbcy13qxfSA" name="postJobExperience" method="_zBgFUlkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zAagMVkwEeqFbcy13qxfSA" name="job"/>
            </ownedOperation>
            <ownedOperation xmi:id="_zAbHQFkwEeqFbcy13qxfSA" name="postEducationExperience" method="_zBgFVFkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zAbHQVkwEeqFbcy13qxfSA" name="ed"/>
            </ownedOperation>
            <ownedOperation xmi:id="_zAbuUVkwEeqFbcy13qxfSA" name="postSkillExperience" method="_zBgFVlkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zAbuUlkwEeqFbcy13qxfSA" name="skill"/>
            </ownedOperation>
            <ownedOperation xmi:id="_zAcVYVkwEeqFbcy13qxfSA" name="retrieveUserJobs" method="_zBgFWFkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zAcVYlkwEeqFbcy13qxfSA" name="userID"/>
            </ownedOperation>
            <ownedOperation xmi:id="_zAc8cVkwEeqFbcy13qxfSA" name="retrieveUserSkills" method="_zBgsYFkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zAc8clkwEeqFbcy13qxfSA" name="userID"/>
            </ownedOperation>
            <ownedOperation xmi:id="_zAc8dFkwEeqFbcy13qxfSA" name="retrieveUserEducation" method="_zBgsYlkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zAdjgFkwEeqFbcy13qxfSA" name="userID"/>
            </ownedOperation>
            <ownedOperation xmi:id="_zAdjglkwEeqFbcy13qxfSA" name="removeUserJob" method="_zBgsZFkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zAdjg1kwEeqFbcy13qxfSA" name="id"/>
            </ownedOperation>
            <ownedOperation xmi:id="_zAeKkVkwEeqFbcy13qxfSA" name="removeUserEducation" method="_zBgsZlkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zAeKklkwEeqFbcy13qxfSA" name="id"/>
            </ownedOperation>
            <ownedOperation xmi:id="_zAexoVkwEeqFbcy13qxfSA" name="removeUserSkill" method="_zBhTcFkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zAexolkwEeqFbcy13qxfSA" name="id"/>
            </ownedOperation>
            <ownedOperation xmi:id="_zA8rsVkwEeqFbcy13qxfSA" name="modifyJobHistory" method="_zBhTclkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zA8rslkwEeqFbcy13qxfSA" name="job" type="_zA7dkFkwEeqFbcy13qxfSA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_zA_vAFkwEeqFbcy13qxfSA" name="modifyEducationHistory" method="_zBhTdFkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zA_vAVkwEeqFbcy13qxfSA" name="ed" type="_zA950FkwEeqFbcy13qxfSA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_zBBkMVkwEeqFbcy13qxfSA" name="modifySkillHistory" method="_zBh6gFkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zBCLQFkwEeqFbcy13qxfSA" name="skill" type="_zBAWEVkwEeqFbcy13qxfSA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_y_t8oFkwEeqFbcy13qxfSA" name="SecurityService">
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zBh6glkwEeqFbcy13qxfSA" name="authenticate" specification="_zBEAcFkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zBh6g1kwEeqFbcy13qxfSA" name="userAttempt" type="_zBCyUFkwEeqFbcy13qxfSA"/>
              <language>PHP</language>
              <body>$db = new db_connector();&#xD;
     $conn = $db->getConnection();&#xD;
     $userData = new UserDataService($conn);&#xD;
     &#xD;
     $result = $userData->findbyUser($userAttempt);&#xD;
     &#xD;
     // Close the PDO connection&#xD;
     $conn = null;&#xD;
&#xD;
     if (($result))&#xD;
     {   &#xD;
         return $result;&#xD;
     }&#xD;
     else&#xD;
     {&#xD;
         return FALSE;&#xD;
     }&#xD;
 </body>
            </ownedBehavior>
            <ownedOperation xmi:id="_zBEAcFkwEeqFbcy13qxfSA" name="authenticate" method="_zBh6glkwEeqFbcy13qxfSA">
              <ownedComment xmi:id="_zBpPQFkwEeqFbcy13qxfSA">
                <body>*&#xD;
     * Authenticate function to authenticate entered login credentials. &#xD;
     * @param userCredentials $userAttempt&#xD;
     * @return boolean</body>
              </ownedComment>
              <ownedParameter xmi:id="_zBEAcVkwEeqFbcy13qxfSA" name="userAttempt" type="_zBCyUFkwEeqFbcy13qxfSA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_y_wY4FkwEeqFbcy13qxfSA" name="UserBusinessService">
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zBh6hFkwEeqFbcy13qxfSA" name="register" specification="_zBEngFkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zBh6hVkwEeqFbcy13qxfSA" name="user" type="_zAyToFkwEeqFbcy13qxfSA"/>
              <language>PHP</language>
              <body>$db = new db_connector();&#xD;
     $conn = $db->getConnection();&#xD;
     $userData = new UserDataService($conn);&#xD;
&#xD;
     $isRegistered = $userData->create($user);&#xD;
&#xD;
     $conn = null;&#xD;
&#xD;
     if($isRegistered)&#xD;
     {&#xD;
         return true;&#xD;
     }&#xD;
     return false;&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zBihkFkwEeqFbcy13qxfSA" name="modify" specification="_zBFOkVkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zBihkVkwEeqFbcy13qxfSA" name="user" type="_zAyToFkwEeqFbcy13qxfSA"/>
              <language>PHP</language>
              <body>$db = new db_connector();&#xD;
     $conn = $db->getConnection();&#xD;
     $userService = new UserDataService($conn);&#xD;
     &#xD;
     $userData = $userService->update($user);&#xD;
     &#xD;
     $conn = null;&#xD;
     &#xD;
     return $userData;&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zBihklkwEeqFbcy13qxfSA" name="profile" specification="_zBGcsFkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zBihk1kwEeqFbcy13qxfSA" name="user" type="_zAyToFkwEeqFbcy13qxfSA"/>
              <language>PHP</language>
              <body>$db = new db_connector();&#xD;
     $conn = $db->getConnection();&#xD;
&#xD;
     // Call the User Data Service to findById:&#xD;
     $service = new UserDataService($conn);&#xD;
     $result = $service->findById($user);&#xD;
&#xD;
     // if Result has some value, which it should, it should return&#xD;
     if($result)&#xD;
         return $result;&#xD;
     else&#xD;
         return false;&#xD;
 </body>
            </ownedBehavior>
            <ownedOperation xmi:id="_zBEngFkwEeqFbcy13qxfSA" name="register" method="_zBh6hFkwEeqFbcy13qxfSA">
              <ownedComment xmi:id="_zBpPQVkwEeqFbcy13qxfSA">
                <body>*&#xD;
     * register business service method: Creating a user in the database.&#xD;
     *&#xD;
     * @param User $user&#xD;
     * @return boolean</body>
              </ownedComment>
              <ownedParameter xmi:id="_zBEngVkwEeqFbcy13qxfSA" name="user" type="_zAyToFkwEeqFbcy13qxfSA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_zBFOkVkwEeqFbcy13qxfSA" name="modify" method="_zBihkFkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zBFOklkwEeqFbcy13qxfSA" name="user" type="_zAyToFkwEeqFbcy13qxfSA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_zBGcsFkwEeqFbcy13qxfSA" name="profile" method="_zBihklkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zBGcsVkwEeqFbcy13qxfSA" name="user" type="_zAyToFkwEeqFbcy13qxfSA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_zAyToFkwEeqFbcy13qxfSA" name="User"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_zA1W8FkwEeqFbcy13qxfSA" name="Job"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_zA7dkFkwEeqFbcy13qxfSA" name="JobHistory"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_zA950FkwEeqFbcy13qxfSA" name="Education"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_zBAWEVkwEeqFbcy13qxfSA" name="Skill"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_zBCyUFkwEeqFbcy13qxfSA" name="userCredentials"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_y-5dQFkwEeqFbcy13qxfSA" name="Data">
          <packagedElement xmi:type="uml:Class" xmi:id="_y_0qUFkwEeqFbcy13qxfSA" name="AdminDataService">
            <ownedAttribute xmi:id="_zBZ-sFkwEeqFbcy13qxfSA" name="db" visibility="private"/>
            <ownedAttribute xmi:id="_zBalwVkwEeqFbcy13qxfSA" name="conn" visibility="private"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zBihlFkwEeqFbcy13qxfSA" name="__construct" specification="_zAhN4FkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zBihlVkwEeqFbcy13qxfSA" name="conn"/>
              <language>PHP</language>
              <body>$this->conn = $conn;&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zBjIoFkwEeqFbcy13qxfSA" name="findAll" specification="_y_14cFkwEeqFbcy13qxfSA">
              <language>PHP</language>
              <body>try&#xD;
     {&#xD;
         // Find all the users except for the current userID.&#xD;
         $userID = Session::get('userID');&#xD;
         // Build the Query to find the User with the right ID:&#xD;
         $result = $this->conn->prepare(&quot;SELECT * FROM users WHERE ID != :userid&quot;);&#xD;
         // Bind the query variables with method variable: &#xD;
         $result->bindParam('userid', $userID);&#xD;
         // Execute the Query: &#xD;
         $result->execute();&#xD;
&#xD;
         return $result->fetchAll();&#xD;
     }&#xD;
     catch(PDOException $e)&#xD;
     {&#xD;
         Log::error(&quot;Exception: &quot;, array(&#xD;
             &quot;message&quot; => $e->getMessage()&#xD;
         ));&#xD;
         throw new DatabaseException(&quot;Database Exception: &quot; . $e->getMessage(), 0, $e);&#xD;
     }&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zBjIoVkwEeqFbcy13qxfSA" name="findByID" specification="_y_2fgVkwEeqFbcy13qxfSA">
              <language>PHP</language>
              <body>try&#xD;
     {&#xD;
         // Find all the users except for the current userID.&#xD;
         $userID = Session::get('userID');&#xD;
         // Build the Query to find the User's info by their ID:&#xD;
         $result = $this->conn->prepare(&quot;SELECT u.*,&#xD;
     		p.PID, p.P_ABOUT_USER, p.P_SKILLS, p.P_MESSAGE,&#xD;
             j.JOB_NAME, j.JOB_DESCRIPTION, j.JOB_YEARS, j.portfolio_ID,&#xD;
             e.ED_NAME, e.ED_DESCRIPTION, e.ED_YEARS, e.ED_START_YEAR, e.ED_END_YEAR, e.portfolio_ID&#xD;
             FROM&#xD;
             users as u&#xD;
             LEFT JOIN portfolio as p&#xD;
             ON u.ID = p.users_ID&#xD;
     		LEFT JOIN jobs as j&#xD;
             on p.PID = j.portfolio_ID&#xD;
             LEFT JOIN education as e&#xD;
             on p.PID = e.portfolio_ID&#xD;
             WHERE ID = :userid&quot;);&#xD;
         // Bind the query variables with method variable:&#xD;
         $result->bindParam('userid', $userID);&#xD;
         // Execute the Query: &#xD;
         $result->execute();&#xD;
         &#xD;
         // Return the result with all the User's info: &#xD;
         return $result->fetchAll();&#xD;
     }&#xD;
     catch(PDOException $e)&#xD;
     {&#xD;
         Log::error(&quot;Exception: &quot;, array(&#xD;
             &quot;message&quot; => $e->getMessage()&#xD;
         ));&#xD;
         throw new DatabaseException(&quot;Database Exception: &quot; . $e->getMessage(), 0, $e);&#xD;
     }&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zBjIolkwEeqFbcy13qxfSA" name="update" specification="_zBIR4VkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zBjIo1kwEeqFbcy13qxfSA" name="user" type="_zBHDwVkwEeqFbcy13qxfSA"/>
              <language>PHP</language>
              <body>try&#xD;
     {&#xD;
         // Store the User's info from the object param into variables: &#xD;
         $id = $user->getId();&#xD;
         $firstName = $user->getFirstName();&#xD;
         $lastName = $user->getLastName();&#xD;
         $userName = $user->getUsername();&#xD;
         $password = $user->getPassword();&#xD;
         $email = $user->getEmail();&#xD;
         $phone = $user->getPhone();&#xD;
         $role = $user->getRole();&#xD;
&#xD;
         // Build the Query to update the User's info:&#xD;
         $result = $this->conn->prepare(&quot;UPDATE users SET FIRST_NAME=:firstname, LAST_NAME=:lastname, USERNAME=:username, PASSWORD=:password, EMAIL=:email, PHONE=:phone, ROLE=:role WHERE ID=:id&quot;);&#xD;
         // Bind the query variables with method variable:&#xD;
         $result->bindParam(':id', $id, PDO::PARAM_INT);&#xD;
         $result->bindParam(':firstname', $firstName);&#xD;
         $result->bindParam(':lastname', $lastName);&#xD;
         $result->bindParam(':username', $userName);&#xD;
         $result->bindParam(':password', $password);&#xD;
         $result->bindParam(':email', $email);&#xD;
         $result->bindParam(':phone', $phone);&#xD;
         $result->bindParam(':role', $role);&#xD;
         // Execute the Query: &#xD;
         $result->execute();&#xD;
&#xD;
         // Check if there is result: &#xD;
         if($result)&#xD;
         {&#xD;
             return true;&#xD;
         }&#xD;
         else&#xD;
         {&#xD;
             return false;&#xD;
         }&#xD;
     }&#xD;
     catch(PDOException $e)&#xD;
     {&#xD;
         Log::error(&quot;Exception: &quot;, array(&#xD;
             &quot;message&quot; => $e->getMessage()&#xD;
         ));&#xD;
         throw new DatabaseException(&quot;Database Exception: &quot; . $e->getMessage(), 0, $e);&#xD;
     }&#xD;
     catch(DatabaseException $e)&#xD;
     {&#xD;
         Log::error(&quot;Exception: &quot;, array(&#xD;
             &quot;message&quot; => $e->getMessage()&#xD;
         ));&#xD;
         return false;&#xD;
     }&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zBjIpFkwEeqFbcy13qxfSA" name="delete" specification="_zBI48FkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zBjIpVkwEeqFbcy13qxfSA" name="user" type="_zBHDwVkwEeqFbcy13qxfSA"/>
              <language>PHP</language>
              <body>try&#xD;
     {&#xD;
         $id = $user->getId();&#xD;
         $result = $this->conn->prepare(&quot;DELETE FROM users WHERE ID =:id&quot;);&#xD;
         $result->bindParam(':id', $id, PDO::PARAM_INT);&#xD;
         $result->execute();&#xD;
&#xD;
         if($result)&#xD;
         {&#xD;
             return $id;&#xD;
         }&#xD;
         return false;&#xD;
     }&#xD;
     catch(PDOException $e)&#xD;
     {&#xD;
         Log::error(&quot;Exception: &quot;, array(&#xD;
             &quot;message&quot; => $e->getMessage()&#xD;
         ));&#xD;
         throw new DatabaseException(&quot;Database Exception: &quot; . $e->getMessage(), 0, $e);&#xD;
     }&#xD;
 </body>
            </ownedBehavior>
            <ownedOperation xmi:id="_y_14cFkwEeqFbcy13qxfSA" name="findAll" method="_zBjIoFkwEeqFbcy13qxfSA">
              <ownedComment xmi:id="_zBpPQlkwEeqFbcy13qxfSA">
                <body>*&#xD;
     * Get all users to populate the datatable&#xD;
     *&#xD;
     * @throws DatabaseException&#xD;
     * @return</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_y_2fgVkwEeqFbcy13qxfSA" name="findByID" method="_zBjIoVkwEeqFbcy13qxfSA"/>
            <ownedOperation xmi:id="_zAhN4FkwEeqFbcy13qxfSA" name="__construct" method="_zBihlFkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zAhN4VkwEeqFbcy13qxfSA" name="conn"/>
            </ownedOperation>
            <ownedOperation xmi:id="_zBIR4VkwEeqFbcy13qxfSA" name="update" method="_zBjIolkwEeqFbcy13qxfSA">
              <ownedComment xmi:id="_zBpPQ1kwEeqFbcy13qxfSA">
                <body>*&#xD;
     * This is used to suspend a user from the AdminDataService&#xD;
     * @param User $user&#xD;
     * @throws DatabaseException&#xD;
     * @return boolean</body>
              </ownedComment>
              <ownedParameter xmi:id="_zBIR4lkwEeqFbcy13qxfSA" name="user" type="_zBHDwVkwEeqFbcy13qxfSA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_zBI48FkwEeqFbcy13qxfSA" name="delete" method="_zBjIpFkwEeqFbcy13qxfSA">
              <ownedComment xmi:id="_zBpPRFkwEeqFbcy13qxfSA">
                <body>*&#xD;
     * Delete the User from the Database&#xD;
     * @param User $user&#xD;
     * @throws DatabaseException&#xD;
     * @return boolean</body>
              </ownedComment>
              <ownedParameter xmi:id="_zBI48VkwEeqFbcy13qxfSA" name="user" type="_zBHDwVkwEeqFbcy13qxfSA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_y_5i0FkwEeqFbcy13qxfSA" name="JobDataService">
            <ownedAttribute xmi:id="_zBbM0FkwEeqFbcy13qxfSA" name="db" visibility="private"/>
            <ownedAttribute xmi:id="_zBbM0lkwEeqFbcy13qxfSA" name="conn" visibility="private"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zBjvsFkwEeqFbcy13qxfSA" name="__construct" specification="_zAjDEFkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zBjvsVkwEeqFbcy13qxfSA" name="conn"/>
              <language>PHP</language>
              <body>$this->conn = $conn;&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zBjvslkwEeqFbcy13qxfSA" name="findAllJobs" specification="_y_7YAFkwEeqFbcy13qxfSA">
              <language>PHP</language>
              <body>try&#xD;
     {&#xD;
         // Find all jobs.&#xD;
         $result = $this->conn->prepare(&quot;SELECT * FROM job&quot;);&#xD;
         $result->execute();&#xD;
         &#xD;
         // Return an array of fetched results to the Business Service: &#xD;
         return $result->fetchAll();&#xD;
     }&#xD;
     catch(PDOException $e)&#xD;
     {&#xD;
         Log::error(&quot;Exception: &quot;, array(&#xD;
             &quot;message&quot; => $e->getMessage()&#xD;
         ));&#xD;
         throw new DatabaseException(&quot;Database Exception: &quot; . $e->getMessage(), 0, $e);&#xD;
     }&#xD;
     catch(Exception $exc)&#xD;
     {&#xD;
         throw $exc->getMessage();&#xD;
     }&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zBjvs1kwEeqFbcy13qxfSA" name="create" specification="_zAjqIVkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zBjvtFkwEeqFbcy13qxfSA" name="job"/>
              <language>PHP</language>
              <body>try&#xD;
     {&#xD;
         // Put all the data from $job into variables: &#xD;
         $id = $job->getId();&#xD;
         $name = $job->getName();&#xD;
         $description = $job->getDescription();&#xD;
         $company = $job->getCompany();&#xD;
         $requirements = $job->getRequirements();&#xD;
         $skills = $job->getSkills();&#xD;
         &#xD;
         // Build the Query to add a job into the database: &#xD;
         $result = $this->conn->prepare(&quot;INSERT INTO job (`ID`, `NAME`, `DESCRIPTION`, `COMPANY`, `REQUIREMENTS`, `SKILLS`) VALUES (:id, :name, :description, :company, :requirements, :skills)&quot;);&#xD;
         // Bind all the values by matching them with the variables created: &#xD;
         $result->bindParam(':id', $id);&#xD;
         $result->bindParam(':name', $name);&#xD;
         $result->bindParam(':description', $description);&#xD;
         $result->bindParam(':company', $company);&#xD;
         $result->bindParam(':requirements', $requirements);&#xD;
         $result->bindParam(':skills', $skills);&#xD;
         // Execute the query:&#xD;
         $result->execute();&#xD;
         &#xD;
         // Check if result was successful: &#xD;
         if($result->rowCount() == 1)&#xD;
         {&#xD;
             Log::info(&quot;Exit JobDataService.create() with true&quot;);&#xD;
             return true;&#xD;
         }&#xD;
         else&#xD;
         {&#xD;
             Log::info(&quot;Exit JobDataService.create() with false&quot;);&#xD;
             return false;&#xD;
         }&#xD;
     }&#xD;
     catch (PDOException $pdoExc)&#xD;
     {&#xD;
         Log::error(&quot;Exception: &quot;, array(&quot;message&quot; => $pdoExc->getMessage));&#xD;
         throw new DatabaseException(&quot;Database Exception: &quot; . $pdoExc->getMessage(), 0, $pdoExc);&#xD;
     }&#xD;
     catch(Exception $e)&#xD;
     {&#xD;
         // Throwing Exception with message: &#xD;
         throw $e->getMessage();&#xD;
     }&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zBkWwFkwEeqFbcy13qxfSA" name="update" specification="_zBKuIVkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zBkWwVkwEeqFbcy13qxfSA" name="job" type="_zBJgAFkwEeqFbcy13qxfSA"/>
              <language>PHP</language>
              <body>try&#xD;
     {&#xD;
         // Put all the data from $job into variables:&#xD;
         $id = $job->getId();&#xD;
         $name = $job->getName();&#xD;
         $description = $job->getDescription();&#xD;
         $company = $job->getCompany();&#xD;
         $requirements = $job->getRequirements();&#xD;
         $skills = $job->getSkills();&#xD;
         &#xD;
         // Build the Query to Update the Job's info into the database: &#xD;
         $result = $this->conn->prepare(&quot;UPDATE job SET NAME=:jobname, DESCRIPTION=:desc, COMPANY=:company, REQUIREMENTS=:requirements, SKILLS=:skills WHERE ID=:id&quot;);&#xD;
         // Bind all the query variables with the method variables:&#xD;
         $result->bindParam(':id', $id);&#xD;
         $result->bindParam(':jobname', $name);&#xD;
         $result->bindParam(':desc', $description);&#xD;
         $result->bindParam(':company', $company);&#xD;
         $result->bindParam(':requirements', $requirements);&#xD;
         $result->bindParam(':skills', $skills);&#xD;
         // Execute the Query: &#xD;
         $result->execute();&#xD;
         &#xD;
         // Check if the result was true: &#xD;
         if($result)&#xD;
         {&#xD;
             return true;&#xD;
         }&#xD;
         else&#xD;
         {&#xD;
             return false;&#xD;
         }&#xD;
     }&#xD;
     catch(PDOException $e)&#xD;
     {&#xD;
         Log::error(&quot;Exception: &quot;, array(&#xD;
             &quot;message&quot; => $e->getMessage()&#xD;
         ));&#xD;
         throw new DatabaseException(&quot;Database Exception: &quot; . $e->getMessage(), 0, $e);&#xD;
     }&#xD;
     catch(DatabaseException $e)&#xD;
     {&#xD;
         // Throwing Exception with message: &#xD;
         Log::error(&quot;Exception: &quot;, array(&#xD;
             &quot;message&quot; => $e->getMessage()&#xD;
         ));&#xD;
         return false;&#xD;
     }&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zBkWwlkwEeqFbcy13qxfSA" name="delete" specification="_zBL8QFkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zBkWw1kwEeqFbcy13qxfSA" name="job" type="_zBJgAFkwEeqFbcy13qxfSA"/>
              <language>PHP</language>
              <body>try&#xD;
     {&#xD;
         // Store the ID of the Job into a variable from the Job object: &#xD;
         $id = $job->getId();&#xD;
         // Build the Query to delete a job from the Database: &#xD;
         $result = $this->conn->prepare(&quot;DELETE FROM job WHERE ID =:id&quot;);&#xD;
         // Bind the query variables with the method variables: &#xD;
         $result->bindParam(':id', $id);&#xD;
         // Execute the Query: &#xD;
         $result->execute();&#xD;
         &#xD;
         // Check if result is true: &#xD;
         if($result)&#xD;
         {&#xD;
             return $id;&#xD;
         }&#xD;
         return false;&#xD;
     }&#xD;
     catch(PDOException $e)&#xD;
     {&#xD;
         Log::error(&quot;Exception: &quot;, array(&#xD;
             &quot;message&quot; => $e->getMessage()&#xD;
         ));&#xD;
         throw new DatabaseException(&quot;Database Exception: &quot; . $e->getMessage(), 0, $e);&#xD;
     }&#xD;
     catch (Exception $exc)&#xD;
     {&#xD;
         // Throwing Exception with message: &#xD;
         throw $exc->getMessage();&#xD;
     }&#xD;
 </body>
            </ownedBehavior>
            <ownedOperation xmi:id="_y_7YAFkwEeqFbcy13qxfSA" name="findAllJobs" method="_zBjvslkwEeqFbcy13qxfSA">
              <ownedComment xmi:id="_zBpPRVkwEeqFbcy13qxfSA">
                <body>*&#xD;
     * Get all Jobs to populate the datatable&#xD;
     *&#xD;
     * @throws DatabaseException&#xD;
     * @return</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_zAjDEFkwEeqFbcy13qxfSA" name="__construct" method="_zBjvsFkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zAjDEVkwEeqFbcy13qxfSA" name="conn"/>
            </ownedOperation>
            <ownedOperation xmi:id="_zAjqIVkwEeqFbcy13qxfSA" name="create" method="_zBjvs1kwEeqFbcy13qxfSA">
              <ownedComment xmi:id="_zBpPRlkwEeqFbcy13qxfSA">
                <body>*&#xD;
     * Add a new Job to the Database: &#xD;
     * @param $job&#xD;
     * @throws DatabaseException&#xD;
     * @return boolean</body>
              </ownedComment>
              <ownedParameter xmi:id="_zAjqIlkwEeqFbcy13qxfSA" name="job"/>
            </ownedOperation>
            <ownedOperation xmi:id="_zBKuIVkwEeqFbcy13qxfSA" name="update" method="_zBkWwFkwEeqFbcy13qxfSA">
              <ownedComment xmi:id="_zBpPR1kwEeqFbcy13qxfSA">
                <body>*&#xD;
     * Update the Job's info in the Job Edit Form.&#xD;
     * @param Job $job&#xD;
     * @throws DatabaseException&#xD;
     * @return boolean</body>
              </ownedComment>
              <ownedParameter xmi:id="_zBKuIlkwEeqFbcy13qxfSA" name="job" type="_zBJgAFkwEeqFbcy13qxfSA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_zBL8QFkwEeqFbcy13qxfSA" name="delete" method="_zBkWwlkwEeqFbcy13qxfSA">
              <ownedComment xmi:id="_zBp2UFkwEeqFbcy13qxfSA">
                <body>*&#xD;
     * Delete a Job from the Database: &#xD;
     * @param Job $job&#xD;
     * @throws DatabaseException&#xD;
     * @return \App\Model\$id|boolean</body>
              </ownedComment>
              <ownedParameter xmi:id="_zBL8QVkwEeqFbcy13qxfSA" name="job" type="_zBJgAFkwEeqFbcy13qxfSA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_y__CYFkwEeqFbcy13qxfSA" name="PortfolioDataService">
            <ownedAttribute xmi:id="_zBbz4VkwEeqFbcy13qxfSA" name="db" visibility="private"/>
            <ownedAttribute xmi:id="_zBbz41kwEeqFbcy13qxfSA" name="conn" visibility="private"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zBkWxFkwEeqFbcy13qxfSA" name="__construct" specification="_zAlfUFkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zBkWxVkwEeqFbcy13qxfSA" name="conn"/>
              <language>PHP</language>
              <body>$this->conn = $conn;&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zBk90FkwEeqFbcy13qxfSA" name="findAllUserJobs" specification="_zAmGYVkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zBk90VkwEeqFbcy13qxfSA" name="userID"/>
              <language>PHP</language>
              <body>try&#xD;
     {&#xD;
         // Find all the jobs for the user&#xD;
         $result = $this->conn->prepare(&quot;SELECT * FROM JOB_HISTORY WHERE users_ID = :userid&quot;);&#xD;
         $result->bindParam('userid', $userID);&#xD;
         $result->execute();&#xD;
         &#xD;
         return $result->fetchAll();&#xD;
     }&#xD;
     catch(PDOException $e)&#xD;
     {&#xD;
         Log::error(&quot;Exception: &quot;, array(&#xD;
             &quot;message&quot; => $e->getMessage()&#xD;
         ));&#xD;
         throw new DatabaseException(&quot;Database Exception: &quot; . $e->getMessage(), 0, $e);&#xD;
     }&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zBk90lkwEeqFbcy13qxfSA" name="findAllUserSkills" specification="_zAmtcVkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zBk901kwEeqFbcy13qxfSA" name="userID"/>
              <language>PHP</language>
              <body>try&#xD;
     {&#xD;
         // Find all the jobs for the user&#xD;
         $result = $this->conn->prepare(&quot;SELECT * FROM SKILL WHERE users_ID = :userid&quot;);&#xD;
         $result->bindParam('userid', $userID);&#xD;
         $result->execute();&#xD;
         &#xD;
         return $result->fetchAll();&#xD;
     }&#xD;
     catch(PDOException $e)&#xD;
     {&#xD;
         Log::error(&quot;Exception: &quot;, array(&#xD;
             &quot;message&quot; => $e->getMessage()&#xD;
         ));&#xD;
         throw new DatabaseException(&quot;Database Exception: &quot; . $e->getMessage(), 0, $e);&#xD;
     }&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zBk91FkwEeqFbcy13qxfSA" name="findAllUserEducation" specification="_zAnUgVkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zBk91VkwEeqFbcy13qxfSA" name="userID"/>
              <language>PHP</language>
              <body>try&#xD;
     {&#xD;
         // Find all the jobs for the user&#xD;
         $result = $this->conn->prepare(&quot;SELECT * FROM education WHERE users_ID = :userid&quot;);&#xD;
         $result->bindParam('userid', $userID);&#xD;
         $result->execute();&#xD;
         &#xD;
         return $result->fetchAll();&#xD;
     }&#xD;
     catch(PDOException $e)&#xD;
     {&#xD;
         Log::error(&quot;Exception: &quot;, array(&#xD;
             &quot;message&quot; => $e->getMessage()&#xD;
         ));&#xD;
         throw new DatabaseException(&quot;Database Exception: &quot; . $e->getMessage(), 0, $e);&#xD;
     }&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zBk91lkwEeqFbcy13qxfSA" name="createJob" specification="_zBOYgFkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zBk911kwEeqFbcy13qxfSA" name="job" type="_zBNKYFkwEeqFbcy13qxfSA"/>
              <language>PHP</language>
              <body>try&#xD;
     {&#xD;
         $id = $job->getId();&#xD;
         $jobName = $job->getName();&#xD;
         $jobPosition = $job->getPosition();&#xD;
         $jobDescription = $job->getDescription();&#xD;
         $jobAward = $job->getAwards();&#xD;
         $jobStartDate = $job->getStartDate();&#xD;
         $jobEndDate = $job->getEndDate();&#xD;
         $userID = $job->getUserID();&#xD;
         &#xD;
         // change this to :variable for bindparam&#xD;
         $result = $this->conn->prepare(&quot;INSERT INTO `JOB_HISTORY` (`ID`, `NAME`, `POSITION`, `DESCRIPTION`, `AWARDS`, `START_DATE`, `END_DATE`, `users_ID`) VALUES(:id, :name, :position, :description, :awards, :startdate, :enddate, :usersid)&quot;);&#xD;
         $result->bindParam(':id', $id);&#xD;
         $result->bindParam(':name', $jobName);&#xD;
         $result->bindParam(':position', $jobPosition);&#xD;
         $result->bindParam(':description', $jobDescription);&#xD;
         $result->bindParam(':awards', $jobAward);&#xD;
         $result->bindParam(':startdate', $jobStartDate);&#xD;
         $result->bindParam(':enddate', $jobEndDate);&#xD;
         $result->bindParam(':usersid', $userID);&#xD;
         $result->execute();&#xD;
         &#xD;
         if($result->rowCount() == 1)&#xD;
         {&#xD;
             Log::info(&quot;Exit PortfolioDataservice create with true&quot;);&#xD;
             return true;&#xD;
         }&#xD;
         else&#xD;
         {&#xD;
             Log::info(&quot;Exit PortfolioDataService.create() with false&quot;);&#xD;
             return false;&#xD;
         }&#xD;
     }&#xD;
     catch(PDOException $e)&#xD;
     {&#xD;
         Log::error(&quot;Exception: &quot;, array(&#xD;
             &quot;message&quot; => $e->getMessage()&#xD;
         ));&#xD;
         throw new DatabaseException(&quot;Database Exception: &quot; . $e->getMessage(), 0, $e);&#xD;
     }&#xD;
     catch(DatabaseException $e)&#xD;
     {&#xD;
         Log::error(&quot;Exception: &quot;, array(&#xD;
             &quot;message&quot; => $e->getMessage()&#xD;
         ));&#xD;
         return false;&#xD;
     }&#xD;
     /* finally{&#xD;
      return false;&#xD;
      } */&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zBk92FkwEeqFbcy13qxfSA" name="createEducation" specification="_zBPmoVkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zBk92VkwEeqFbcy13qxfSA" name="ed" type="_zBO_kFkwEeqFbcy13qxfSA"/>
              <language>PHP</language>
              <body>try&#xD;
     {&#xD;
         $id = $ed->getId();&#xD;
         $edName = $ed->getName();&#xD;
         $edYears = $ed->getYears();&#xD;
         $edMajor = $ed->getMajor();&#xD;
         $edMinor = $ed->getMinor();&#xD;
         $edStartYear = $ed->getStartyear();&#xD;
         $edEndYear = $ed->getEndyear();&#xD;
         $userID = $ed->getUserID();&#xD;
         &#xD;
         // change this to :variable for bindparam&#xD;
         $result = $this->conn->prepare(&quot;INSERT INTO `EDUCATION` (`ID`, `NAME`, `YEARS`, `MAJOR`, `MINOR`, `START_YEAR`, `END_YEAR`, `users_ID`) VALUES(:id, :name, :years, :major, :minor, :startyear, :endyear, :usersid)&quot;);&#xD;
         $result->bindParam(':id', $id);&#xD;
         $result->bindParam(':name', $edName);&#xD;
         $result->bindParam(':years', $edYears);&#xD;
         $result->bindParam(':major', $edMajor);&#xD;
         $result->bindParam(':minor', $edMinor);&#xD;
         $result->bindParam(':startyear', $edStartYear);&#xD;
         $result->bindParam(':endyear', $edEndYear);&#xD;
         $result->bindParam(':usersid', $userID);&#xD;
         $result->execute();&#xD;
         &#xD;
         if($result->rowCount() == 1)&#xD;
         {&#xD;
             Log::info(&quot;Exit PortfolioDataservice create ed with true&quot;);&#xD;
             return true;&#xD;
         }&#xD;
         else&#xD;
         {&#xD;
             Log::info(&quot;Exit PortfolioDataService.createEd() with false&quot;);&#xD;
             return false;&#xD;
         }&#xD;
     }&#xD;
     catch(PDOException $e)&#xD;
     {&#xD;
         Log::error(&quot;Exception: &quot;, array(&#xD;
             &quot;message&quot; => $e->getMessage()&#xD;
         ));&#xD;
         throw new DatabaseException(&quot;Database Exception: &quot; . $e->getMessage(), 0, $e);&#xD;
     }&#xD;
     catch(DatabaseException $e)&#xD;
     {&#xD;
         Log::error(&quot;Exception: &quot;, array(&#xD;
             &quot;message&quot; => $e->getMessage()&#xD;
         ));&#xD;
         return false;&#xD;
     }&#xD;
     /* finally{&#xD;
      return false;&#xD;
      } */&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zBlk4FkwEeqFbcy13qxfSA" name="createSkill" specification="_zBQ0wVkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zBlk4VkwEeqFbcy13qxfSA" name="skill" type="_zBQNsVkwEeqFbcy13qxfSA"/>
              <language>PHP</language>
              <body>try&#xD;
     {&#xD;
         $id = $skill->getId();&#xD;
         $skillName = $skill->getName();&#xD;
         $userID = $skill->getUserID();&#xD;
         &#xD;
         // change this to :variable for bindparam&#xD;
         $result = $this->conn->prepare(&quot;INSERT INTO `SKILL` (`ID`, `NAME`, `users_ID`) VALUES(:id, :name, :usersid)&quot;);&#xD;
         $result->bindParam(':id', $id);&#xD;
         $result->bindParam(':name', $skillName);&#xD;
         $result->bindParam(':usersid', $userID);&#xD;
         $result->execute();&#xD;
         &#xD;
         if($result->rowCount() == 1)&#xD;
         {&#xD;
             Log::info(&quot;Exit PortfolioDataservice create skill with true&quot;);&#xD;
             return true;&#xD;
         }&#xD;
         else&#xD;
         {&#xD;
             Log::info(&quot;Exit PortfolioDataService.createSkill) with false&quot;);&#xD;
             return false;&#xD;
         }&#xD;
     }&#xD;
     catch(PDOException $e)&#xD;
     {&#xD;
         Log::error(&quot;Exception: &quot;, array(&#xD;
             &quot;message&quot; => $e->getMessage()&#xD;
         ));&#xD;
         throw new DatabaseException(&quot;Database Exception: &quot; . $e->getMessage(), 0, $e);&#xD;
     }&#xD;
     catch(DatabaseException $e)&#xD;
     {&#xD;
         Log::error(&quot;Exception: &quot;, array(&#xD;
             &quot;message&quot; => $e->getMessage()&#xD;
         ));&#xD;
         return false;&#xD;
     }&#xD;
     /* finally{&#xD;
      return false;&#xD;
      } */&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zBlk4lkwEeqFbcy13qxfSA" name="deleteJob" specification="_zAn7kVkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zBlk41kwEeqFbcy13qxfSA" name="id"/>
              <language>PHP</language>
              <body>try&#xD;
     {&#xD;
         &#xD;
         $result = $this->conn->prepare(&quot;DELETE FROM job_history WHERE ID = :jobid&quot;);&#xD;
         $result->bindParam(':jobid', $id);&#xD;
         $result->execute();&#xD;
         &#xD;
         if($result)&#xD;
         {&#xD;
             return $id;&#xD;
         }&#xD;
         return false;&#xD;
     }&#xD;
     catch(PDOException $e)&#xD;
     {&#xD;
         Log::error(&quot;Exception: &quot;, array(&#xD;
             &quot;message&quot; => $e->getMessage()&#xD;
         ));&#xD;
         throw new DatabaseException(&quot;Database Exception: &quot; . $e->getMessage(), 0, $e);&#xD;
     }&#xD;
     catch(DatabaseException $e)&#xD;
     {&#xD;
         Log::error(&quot;Exception: &quot;, array(&#xD;
             &quot;message&quot; => $e->getMessage()&#xD;
         ));&#xD;
         return false;&#xD;
     }&#xD;
     /* finally{&#xD;
      return false;&#xD;
      } */&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zBlk5FkwEeqFbcy13qxfSA" name="deleteSkill" specification="_zApJsFkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zBlk5VkwEeqFbcy13qxfSA" name="id"/>
              <language>PHP</language>
              <body>try&#xD;
     {&#xD;
         &#xD;
         $result = $this->conn->prepare(&quot;DELETE FROM skill WHERE ID = :skillid&quot;);&#xD;
         $result->bindParam(':skillid', $id);&#xD;
         $result->execute();&#xD;
         &#xD;
         if($result)&#xD;
         {&#xD;
             return $id;&#xD;
         }&#xD;
         return false;&#xD;
     }&#xD;
     catch(PDOException $e)&#xD;
     {&#xD;
         Log::error(&quot;Exception: &quot;, array(&#xD;
             &quot;message&quot; => $e->getMessage()&#xD;
         ));&#xD;
         throw new DatabaseException(&quot;Database Exception: &quot; . $e->getMessage(), 0, $e);&#xD;
     }&#xD;
     catch(DatabaseException $e)&#xD;
     {&#xD;
         Log::error(&quot;Exception: &quot;, array(&#xD;
             &quot;message&quot; => $e->getMessage()&#xD;
         ));&#xD;
         return false;&#xD;
     }&#xD;
     /* finally{&#xD;
      return false;&#xD;
      } */&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zBlk5lkwEeqFbcy13qxfSA" name="deleteEducation" specification="_zApwwFkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zBlk51kwEeqFbcy13qxfSA" name="id"/>
              <language>PHP</language>
              <body>try&#xD;
     {&#xD;
         &#xD;
         $result = $this->conn->prepare(&quot;DELETE FROM education WHERE ID = :edid&quot;);&#xD;
         $result->bindParam(':edid', $id);&#xD;
         $result->execute();&#xD;
         &#xD;
         if($result)&#xD;
         {&#xD;
             return $id;&#xD;
         }&#xD;
         return false;&#xD;
     }&#xD;
     catch(PDOException $e)&#xD;
     {&#xD;
         Log::error(&quot;Exception: &quot;, array(&#xD;
             &quot;message&quot; => $e->getMessage()&#xD;
         ));&#xD;
         throw new DatabaseException(&quot;Database Exception: &quot; . $e->getMessage(), 0, $e);&#xD;
     }&#xD;
     catch(DatabaseException $e)&#xD;
     {&#xD;
         Log::error(&quot;Exception: &quot;, array(&#xD;
             &quot;message&quot; => $e->getMessage()&#xD;
         ));&#xD;
         return false;&#xD;
     }&#xD;
     /* finally{&#xD;
      return false;&#xD;
      } */&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zBlk6FkwEeqFbcy13qxfSA" name="updateJobHistory" specification="_zBRb0VkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zBlk6VkwEeqFbcy13qxfSA" name="job" type="_zBNKYFkwEeqFbcy13qxfSA"/>
              <language>PHP</language>
              <body>try&#xD;
     {&#xD;
         $id = $job->getId();&#xD;
         $name = $job->getName();&#xD;
         $position = $job->getPosition();&#xD;
         $description = $job->getDescription();&#xD;
         $awards = $job->getAwards();&#xD;
         $startDate = $job->getStartDate();&#xD;
         $endDate = $job->getEndDate();&#xD;
         &#xD;
         $result = $this->conn->prepare(&quot;UPDATE job_history SET NAME=:name, POSITION=:position, DESCRIPTION=:description, AWARDS=:awards, START_DATE=:startdate, END_DATE=:enddate WHERE ID=:id&quot;);&#xD;
         $result->bindParam(':id', $id);&#xD;
         $result->bindParam(':name', $name);&#xD;
         $result->bindParam(':position', $position);&#xD;
         $result->bindParam(':description', $description);&#xD;
         $result->bindParam(':awards', $awards);&#xD;
         $result->bindParam(':startdate', $startDate);&#xD;
         $result->bindParam(':enddate', $endDate);&#xD;
         $result->execute();&#xD;
         &#xD;
         if($result)&#xD;
         {&#xD;
             return true;&#xD;
         }&#xD;
         else&#xD;
         {&#xD;
             return false;&#xD;
         }&#xD;
     }&#xD;
     catch(PDOException $e)&#xD;
     {&#xD;
         Log::error(&quot;Exception: &quot;, array(&#xD;
             &quot;message&quot; => $e->getMessage()&#xD;
         ));&#xD;
         throw new DatabaseException(&quot;Database Exception: &quot; . $e->getMessage(), 0, $e);&#xD;
     }&#xD;
     catch(DatabaseException $e)&#xD;
     {&#xD;
         Log::error(&quot;Exception: &quot;, array(&#xD;
             &quot;message&quot; => $e->getMessage()&#xD;
         ));&#xD;
         return false;&#xD;
     }&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zBmL8FkwEeqFbcy13qxfSA" name="updateEducationHistory" specification="_zBSC4lkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zBmL8VkwEeqFbcy13qxfSA" name="ed" type="_zBO_kFkwEeqFbcy13qxfSA"/>
              <language>PHP</language>
              <body>try&#xD;
     {&#xD;
         $id = $ed->getId();&#xD;
         $name = $ed->getName();&#xD;
         $years = $ed->getYears();&#xD;
         $major = $ed->getMajor();&#xD;
         $minor = $ed->getMinor();&#xD;
         $startyear = $ed->getStartyear();&#xD;
         $endyear = $ed->getEndyear();&#xD;
         &#xD;
         $result = $this->conn->prepare(&quot;UPDATE education SET NAME=:name, YEARS=:years, MAJOR=:major, MINOR=:minor, START_YEAR=:startyear, END_YEAR=:endyear WHERE ID=:id&quot;);&#xD;
         $result->bindParam(':id', $id);&#xD;
         $result->bindParam(':name', $name);&#xD;
         $result->bindParam(':years', $years);&#xD;
         $result->bindParam(':major', $major);&#xD;
         $result->bindParam(':minor', $minor);&#xD;
         $result->bindParam(':startyear', $startyear);&#xD;
         $result->bindParam(':endyear', $endyear);&#xD;
         $result->execute();&#xD;
         &#xD;
         if($result)&#xD;
         {&#xD;
             return true;&#xD;
         }&#xD;
         else&#xD;
         {&#xD;
             return false;&#xD;
         }&#xD;
     }&#xD;
     catch(PDOException $e)&#xD;
     {&#xD;
         Log::error(&quot;Exception: &quot;, array(&#xD;
             &quot;message&quot; => $e->getMessage()&#xD;
         ));&#xD;
         throw new DatabaseException(&quot;Database Exception: &quot; . $e->getMessage(), 0, $e);&#xD;
     }&#xD;
     catch(DatabaseException $e)&#xD;
     {&#xD;
         Log::error(&quot;Exception: &quot;, array(&#xD;
             &quot;message&quot; => $e->getMessage()&#xD;
         ));&#xD;
         return false;&#xD;
     }&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zBmL8lkwEeqFbcy13qxfSA" name="updateSkillHistory" specification="_zBSp8VkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zBmL81kwEeqFbcy13qxfSA" name="skill" type="_zBQNsVkwEeqFbcy13qxfSA"/>
              <language>PHP</language>
              <body>try&#xD;
     {&#xD;
         $id = $skill->getId();&#xD;
         $name = $skill->getName();&#xD;
        &#xD;
         &#xD;
         $result = $this->conn->prepare(&quot;UPDATE skill SET NAME=:name WHERE ID=:id&quot;);&#xD;
         $result->bindParam(':id', $id);&#xD;
         $result->bindParam(':name', $name);&#xD;
         $result->execute();&#xD;
         &#xD;
         if($result)&#xD;
         {&#xD;
             return true;&#xD;
         }&#xD;
         else&#xD;
         {&#xD;
             return false;&#xD;
         }&#xD;
     }&#xD;
     catch(PDOException $e)&#xD;
     {&#xD;
         Log::error(&quot;Exception: &quot;, array(&#xD;
             &quot;message&quot; => $e->getMessage()&#xD;
         ));&#xD;
         throw new DatabaseException(&quot;Database Exception: &quot; . $e->getMessage(), 0, $e);&#xD;
     }&#xD;
     catch(DatabaseException $e)&#xD;
     {&#xD;
         Log::error(&quot;Exception: &quot;, array(&#xD;
             &quot;message&quot; => $e->getMessage()&#xD;
         ));&#xD;
         return false;&#xD;
     }&#xD;
 </body>
            </ownedBehavior>
            <ownedOperation xmi:id="_zAlfUFkwEeqFbcy13qxfSA" name="__construct" method="_zBkWxFkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zAlfUVkwEeqFbcy13qxfSA" name="conn"/>
            </ownedOperation>
            <ownedOperation xmi:id="_zAmGYVkwEeqFbcy13qxfSA" name="findAllUserJobs" method="_zBk90FkwEeqFbcy13qxfSA">
              <ownedComment xmi:id="_zBp2UVkwEeqFbcy13qxfSA">
                <body>*&#xD;
     * Find the Job history of a User.&#xD;
     * @param $userID&#xD;
     * @throws DatabaseException&#xD;
     * @return $result</body>
              </ownedComment>
              <ownedParameter xmi:id="_zAmGYlkwEeqFbcy13qxfSA" name="userID"/>
            </ownedOperation>
            <ownedOperation xmi:id="_zAmtcVkwEeqFbcy13qxfSA" name="findAllUserSkills" method="_zBk90lkwEeqFbcy13qxfSA">
              <ownedComment xmi:id="_zBp2UlkwEeqFbcy13qxfSA">
                <body>*&#xD;
     * Find all Skills of the User&#xD;
     * @param $userID&#xD;
     * @throws DatabaseException&#xD;
     * @return $result</body>
              </ownedComment>
              <ownedParameter xmi:id="_zAmtclkwEeqFbcy13qxfSA" name="userID"/>
            </ownedOperation>
            <ownedOperation xmi:id="_zAnUgVkwEeqFbcy13qxfSA" name="findAllUserEducation" method="_zBk91FkwEeqFbcy13qxfSA">
              <ownedComment xmi:id="_zBp2U1kwEeqFbcy13qxfSA">
                <body>*&#xD;
     * Find all Education history from the User&#xD;
     * @param $userID&#xD;
     * @throws DatabaseException&#xD;
     * @return $result->fetchall()</body>
              </ownedComment>
              <ownedParameter xmi:id="_zAnUglkwEeqFbcy13qxfSA" name="userID"/>
            </ownedOperation>
            <ownedOperation xmi:id="_zAn7kVkwEeqFbcy13qxfSA" name="deleteJob" method="_zBlk4lkwEeqFbcy13qxfSA">
              <ownedComment xmi:id="_zBp2VVkwEeqFbcy13qxfSA">
                <body>------------------------------- DELETE Methods ------------------------------</body>
              </ownedComment>
              <ownedParameter xmi:id="_zAoioFkwEeqFbcy13qxfSA" name="id"/>
            </ownedOperation>
            <ownedOperation xmi:id="_zApJsFkwEeqFbcy13qxfSA" name="deleteSkill" method="_zBlk5FkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zApJsVkwEeqFbcy13qxfSA" name="id"/>
            </ownedOperation>
            <ownedOperation xmi:id="_zApwwFkwEeqFbcy13qxfSA" name="deleteEducation" method="_zBlk5lkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zApwwVkwEeqFbcy13qxfSA" name="id"/>
            </ownedOperation>
            <ownedOperation xmi:id="_zBOYgFkwEeqFbcy13qxfSA" name="createJob" method="_zBk91lkwEeqFbcy13qxfSA">
              <ownedComment xmi:id="_zBp2VFkwEeqFbcy13qxfSA">
                <body>------------------------------- CREATE Methods ------------------------------</body>
              </ownedComment>
              <ownedParameter xmi:id="_zBOYgVkwEeqFbcy13qxfSA" name="job" type="_zBNKYFkwEeqFbcy13qxfSA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_zBPmoVkwEeqFbcy13qxfSA" name="createEducation" method="_zBk92FkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zBPmolkwEeqFbcy13qxfSA" name="ed" type="_zBO_kFkwEeqFbcy13qxfSA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_zBQ0wVkwEeqFbcy13qxfSA" name="createSkill" method="_zBlk4FkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zBQ0wlkwEeqFbcy13qxfSA" name="skill" type="_zBQNsVkwEeqFbcy13qxfSA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_zBRb0VkwEeqFbcy13qxfSA" name="updateJobHistory" method="_zBlk6FkwEeqFbcy13qxfSA">
              <ownedComment xmi:id="_zBp2VlkwEeqFbcy13qxfSA">
                <body>------------------------------- UPDATE Methods ------------------------------</body>
              </ownedComment>
              <ownedParameter xmi:id="_zBSC4FkwEeqFbcy13qxfSA" name="job" type="_zBNKYFkwEeqFbcy13qxfSA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_zBSC4lkwEeqFbcy13qxfSA" name="updateEducationHistory" method="_zBmL8FkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zBSC41kwEeqFbcy13qxfSA" name="ed" type="_zBO_kFkwEeqFbcy13qxfSA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_zBSp8VkwEeqFbcy13qxfSA" name="updateSkillHistory" method="_zBmL8lkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zBSp8lkwEeqFbcy13qxfSA" name="skill" type="_zBQNsVkwEeqFbcy13qxfSA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_zAHlQFkwEeqFbcy13qxfSA" name="UserDataService">
            <ownedAttribute xmi:id="_zBca8VkwEeqFbcy13qxfSA" name="db" visibility="private"/>
            <ownedAttribute xmi:id="_zBca81kwEeqFbcy13qxfSA" name="conn" visibility="private"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zBmL9FkwEeqFbcy13qxfSA" name="__construct" specification="_zArl8FkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zBmL9VkwEeqFbcy13qxfSA" name="conn"/>
              <language>PHP</language>
              <body>$this->conn = $conn;&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zBmzAFkwEeqFbcy13qxfSA" name="findbyId" specification="_zBTRAFkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zBmzAVkwEeqFbcy13qxfSA" name="user" type="_zBHDwVkwEeqFbcy13qxfSA"/>
              <language>PHP</language>
              <body>try&#xD;
     {&#xD;
         // Get UserId:&#xD;
         $userId = $user->getId();&#xD;
&#xD;
         $result = $this->conn->prepare('SELECT ID, FIRST_NAME, LAST_NAME, USERNAME, PASSWORD, EMAIL, PHONE, ROLE FROM `users` WHERE ID = :userId');&#xD;
         $result->bindParam(':userId', $userId);&#xD;
         $result->execute();&#xD;
&#xD;
         // Check if Result has any result:&#xD;
         if($result->rowCount() == 1)&#xD;
         {&#xD;
             Log::info(&quot;Exit UserDataService.findById() with true&quot;);&#xD;
             return $result->fetch(PDO::FETCH_OBJ);&#xD;
         }&#xD;
         else&#xD;
         {&#xD;
             Log::info(&quot;Exit UserDataService.findById() with false&quot;);&#xD;
             return false;&#xD;
         }&#xD;
     }&#xD;
     catch(PDOException $e)&#xD;
     {&#xD;
         Log::error(&quot;Exception: &quot;, array(&#xD;
             &quot;message&quot; => $e->getMessage()&#xD;
         ));&#xD;
         throw new DatabaseException(&quot;Database Exception: &quot; . $e->getMessage(), 0, $e);&#xD;
     }&#xD;
     catch(DatabaseException $e)&#xD;
     {&#xD;
         Log::error(&quot;Exception: &quot;, array(&#xD;
             &quot;message&quot; => $e->getMessage()&#xD;
         ));&#xD;
         return false;&#xD;
     }&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zBmzAlkwEeqFbcy13qxfSA" name="findbyUser" specification="_zBUfIVkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zBmzA1kwEeqFbcy13qxfSA" name="userAttempt" type="_zBT4EFkwEeqFbcy13qxfSA"/>
              <language>PHP</language>
              <body>try&#xD;
     {&#xD;
         $username = $userAttempt->getUsername();&#xD;
         $password = $userAttempt->getPassword();&#xD;
&#xD;
         $result = $this->conn->prepare('SELECT ID, FIRST_NAME, LAST_NAME, USERNAME, PASSWORD, EMAIL, PHONE, ROLE FROM `users` WHERE USERNAME = :username AND PASSWORD = :password');&#xD;
         $result->bindParam(':username', $username);&#xD;
         $result->bindParam(':password', $password);&#xD;
         $result->execute();&#xD;
&#xD;
         if($result->rowCount() == 1)&#xD;
         {&#xD;
             Log::info(&quot;Exit UserDataService.findByUser() with true&quot;);&#xD;
             return $result->fetch(PDO::FETCH_OBJ);&#xD;
         }&#xD;
         else&#xD;
         {&#xD;
             Log::info(&quot;Exit UserDataService.findByUser() with false&quot;);&#xD;
             return false;&#xD;
         }&#xD;
     }&#xD;
     catch(DatabaseException $e)&#xD;
     {&#xD;
         Log::error(&quot;Exception: &quot;, array(&#xD;
             &quot;message&quot; => $e->getMessage()&#xD;
         ));&#xD;
         return false;&#xD;
     }&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zBmzBFkwEeqFbcy13qxfSA" name="create" specification="_zBVGMFkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zBmzBVkwEeqFbcy13qxfSA" name="user" type="_zBHDwVkwEeqFbcy13qxfSA"/>
              <language>PHP</language>
              <body>try&#xD;
     {&#xD;
         $id = $user->getId();&#xD;
         $firstName = $user->getFirstName();&#xD;
         $lastName = $user->getLastName();&#xD;
         $username = $user->getUsername();&#xD;
         $password = $user->getPassword();&#xD;
         $email = $user->getEmail();&#xD;
         $phone = $user->getPhone();&#xD;
         $role = $user->getRole();&#xD;
&#xD;
         // change this to :variable for bindparam&#xD;
         $result = $this->conn->prepare(&quot;INSERT INTO `USERS` (`ID`, `FIRST_NAME`, `LAST_NAME`, `USERNAME`, `PASSWORD`, `EMAIL`, `PHONE`, `ROLE`) VALUES(:id, :firstname, :lastname, :username, :password, :email, :phone, :role)&quot;);&#xD;
         $result->bindParam(':id', $id);&#xD;
         $result->bindParam(':firstname', $firstName);&#xD;
         $result->bindParam(':lastname', $lastName);&#xD;
         $result->bindParam(':username', $username);&#xD;
         $result->bindParam(':password', $password);&#xD;
         $result->bindParam(':email', $email);&#xD;
         $result->bindParam(':phone', $phone);&#xD;
         $result->bindParam(':role', $role);&#xD;
         $result->execute();&#xD;
&#xD;
         if($result->rowCount() == 1)&#xD;
         {&#xD;
             Log::info(&quot;Exit UserDataService.findByUser() with true&quot;);&#xD;
             return true;&#xD;
         }&#xD;
         else&#xD;
         {&#xD;
             Log::info(&quot;Exit UserDataService.findByUser() with false&quot;);&#xD;
             return false;&#xD;
         }&#xD;
     }&#xD;
     catch(PDOException $e)&#xD;
     {&#xD;
         Log::error(&quot;Exception: &quot;, array(&#xD;
             &quot;message&quot; => $e->getMessage()&#xD;
         ));&#xD;
         throw new DatabaseException(&quot;Database Exception: &quot; . $e->getMessage(), 0, $e);&#xD;
     }&#xD;
     catch(DatabaseException $e)&#xD;
     {&#xD;
         Log::error(&quot;Exception: &quot;, array(&#xD;
             &quot;message&quot; => $e->getMessage()&#xD;
         ));&#xD;
         return false;&#xD;
     }&#xD;
     /* finally{&#xD;
         return false;&#xD;
     } */&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zBnaEFkwEeqFbcy13qxfSA" name="update" specification="_zBVGM1kwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zBnaEVkwEeqFbcy13qxfSA" name="user" type="_zBHDwVkwEeqFbcy13qxfSA"/>
              <language>PHP</language>
              <body>try&#xD;
     {&#xD;
         $id = $user->getId();&#xD;
         $firstName = $user->getFirstName();&#xD;
         $lastName = $user->getLastName();&#xD;
         $userName = $user->getUsername();&#xD;
         $password = $user->getPassword();&#xD;
         $email = $user->getEmail();&#xD;
         $phone = $user->getPhone();&#xD;
         $role = $user->getRole();&#xD;
&#xD;
         $result = $this->conn->prepare(&quot;UPDATE users SET FIRST_NAME=:firstname, LAST_NAME=:lastname, USERNAME=:username, PASSWORD=:password, EMAIL=:email, PHONE=:phone, ROLE=:role WHERE ID=:id&quot;);&#xD;
         $result->bindParam(':id', $id);&#xD;
         $result->bindParam(':firstname', $firstName);&#xD;
         $result->bindParam(':lastname', $lastName);&#xD;
         $result->bindParam(':username', $userName);&#xD;
         $result->bindParam(':password', $password);&#xD;
         $result->bindParam(':email', $email);&#xD;
         $result->bindParam(':phone', $phone);&#xD;
         $result->bindParam(':role', $role);&#xD;
         $result->execute();&#xD;
&#xD;
         if($result)&#xD;
         {&#xD;
             return $result;&#xD;
         }&#xD;
         else&#xD;
         {&#xD;
             return false;&#xD;
         }&#xD;
     }&#xD;
     catch(PDOException $e)&#xD;
     {&#xD;
         Log::error(&quot;Exception: &quot;, array(&#xD;
             &quot;message&quot; => $e->getMessage()&#xD;
         ));&#xD;
         throw new DatabaseException(&quot;Database Exception: &quot; . $e->getMessage(), 0, $e);&#xD;
     }&#xD;
     catch(DatabaseException $e)&#xD;
     {&#xD;
         Log::error(&quot;Exception: &quot;, array(&#xD;
             &quot;message&quot; => $e->getMessage()&#xD;
         ));&#xD;
         return false;&#xD;
     }&#xD;
     /*&#xD;
      * MUST GET BACK HERE TO SHOW WHAT THE ERROR IS TO THE USER ON UPDATING/MAKING CHANGES&#xD;
      * TO A USERNAME OR EMAIL THAT ARE UNIQUE.&#xD;
      */&#xD;
     finally&#xD;
     {&#xD;
         return false;&#xD;
     }&#xD;
 </body>
            </ownedBehavior>
            <ownedOperation xmi:id="_zArl8FkwEeqFbcy13qxfSA" name="__construct" method="_zBmL9FkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zAsNAFkwEeqFbcy13qxfSA" name="conn"/>
            </ownedOperation>
            <ownedOperation xmi:id="_zBTRAFkwEeqFbcy13qxfSA" name="findbyId" method="_zBmzAFkwEeqFbcy13qxfSA">
              <ownedComment xmi:id="_zBp2V1kwEeqFbcy13qxfSA">
                <body>*&#xD;
     * findByID data service method to find the data in the database.&#xD;
     *&#xD;
     * @param userCredentials $userAttempt&#xD;
     * @return $result from the executed SQL Statement.</body>
              </ownedComment>
              <ownedParameter xmi:id="_zBTRAVkwEeqFbcy13qxfSA" name="user" type="_zBHDwVkwEeqFbcy13qxfSA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_zBUfIVkwEeqFbcy13qxfSA" name="findbyUser" method="_zBmzAlkwEeqFbcy13qxfSA">
              <ownedComment xmi:id="_zBqdYFkwEeqFbcy13qxfSA">
                <body>*&#xD;
     * findByID data service method to find the data in the database.&#xD;
     *&#xD;
     * @param userCredentials $userAttempt&#xD;
     * @return $result from the executed SQL Statement.</body>
              </ownedComment>
              <ownedParameter xmi:id="_zBUfIlkwEeqFbcy13qxfSA" name="userAttempt" type="_zBT4EFkwEeqFbcy13qxfSA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_zBVGMFkwEeqFbcy13qxfSA" name="create" method="_zBmzBFkwEeqFbcy13qxfSA">
              <ownedComment xmi:id="_zBqdYVkwEeqFbcy13qxfSA">
                <body>*&#xD;
     * create data service method: Creating a new user in the database.&#xD;
     *&#xD;
     * @param Request $request&#xD;
     * @return boolean</body>
              </ownedComment>
              <ownedParameter xmi:id="_zBVGMVkwEeqFbcy13qxfSA" name="user" type="_zBHDwVkwEeqFbcy13qxfSA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_zBVGM1kwEeqFbcy13qxfSA" name="update" method="_zBnaEFkwEeqFbcy13qxfSA">
              <ownedComment xmi:id="_zBqdYlkwEeqFbcy13qxfSA">
                <body>*&#xD;
     * Update User's Fields&#xD;
     * &#xD;
     * @param User $user&#xD;
     * @throws DatabaseException&#xD;
     * @return boolean</body>
              </ownedComment>
              <ownedParameter xmi:id="_zBVGNFkwEeqFbcy13qxfSA" name="user" type="_zBHDwVkwEeqFbcy13qxfSA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_zBHDwVkwEeqFbcy13qxfSA" name="User"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_zBJgAFkwEeqFbcy13qxfSA" name="Job"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_zBNKYFkwEeqFbcy13qxfSA" name="JobHistory"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_zBO_kFkwEeqFbcy13qxfSA" name="Education"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_zBQNsVkwEeqFbcy13qxfSA" name="Skill"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_zBT4EFkwEeqFbcy13qxfSA" name="userCredentials"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_y_IGwFkwEeqFbcy13qxfSA" name="Utility">
          <packagedElement xmi:type="uml:Class" xmi:id="_zAL2sFkwEeqFbcy13qxfSA" name="DatabaseException">
            <generalization xmi:id="_zBXicFkwEeqFbcy13qxfSA" general="_zBWUUFkwEeqFbcy13qxfSA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zBnaElkwEeqFbcy13qxfSA" name="__construct" specification="_zBXicVkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_zBnaE1kwEeqFbcy13qxfSA" name="message"/>
              <ownedParameter xmi:id="_zBnaFFkwEeqFbcy13qxfSA" name="code">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_zBnaFVkwEeqFbcy13qxfSA" value="0"/>
              </ownedParameter>
              <ownedParameter xmi:id="_zBnaFlkwEeqFbcy13qxfSA" name="previous" type="_zBWUUFkwEeqFbcy13qxfSA">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_zBnaF1kwEeqFbcy13qxfSA" value="null"/>
              </ownedParameter>
              <language>PHP</language>
              <body>parent::__construct($message, $code, $previous);&#xD;
 </body>
            </ownedBehavior>
            <ownedOperation xmi:id="_zBXicVkwEeqFbcy13qxfSA" name="__construct" method="_zBnaElkwEeqFbcy13qxfSA">
              <ownedComment xmi:id="_zBqdY1kwEeqFbcy13qxfSA">
                <body>*&#xD;
     * &#xD;
     * @param $message&#xD;
     * @param number $code&#xD;
     * @param Exception $previous</body>
              </ownedComment>
              <ownedParameter xmi:id="_zBYJgFkwEeqFbcy13qxfSA" name="message"/>
              <ownedParameter xmi:id="_zBYJgVkwEeqFbcy13qxfSA" name="code">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_zBYJhFkwEeqFbcy13qxfSA" value="0"/>
              </ownedParameter>
              <ownedParameter xmi:id="_zBYJglkwEeqFbcy13qxfSA" name="previous" type="_zBWUUFkwEeqFbcy13qxfSA">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_zBYwkFkwEeqFbcy13qxfSA" value="null"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_zANr4FkwEeqFbcy13qxfSA" name="db_connector">
            <ownedAttribute xmi:id="_zBdpEFkwEeqFbcy13qxfSA" name="db" visibility="private"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zBoBIFkwEeqFbcy13qxfSA" name="getConnection" specification="_zAO6AFkwEeqFbcy13qxfSA">
              <language>PHP</language>
              <body>try {&#xD;
         $servername = config(&quot;database.connections.mysql.host&quot;);&#xD;
         $port = config(&quot;database.connections.mysql.port&quot;);&#xD;
         $username = config(&quot;database.connections.mysql.username&quot;);&#xD;
         $password = config(&quot;database.connections.mysql.password&quot;);&#xD;
         $dbname = config(&quot;database.connections.mysql.database&quot;);&#xD;
&#xD;
         $db = new PDO(&quot;mysql:host=$servername;port=$port;dbname=$dbname&quot;, $username, $password);&#xD;
         $db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);&#xD;
&#xD;
         return $db;&#xD;
     } catch (PDOException $e) {&#xD;
         Log::error(&quot;Exception: &quot;, array(&#xD;
             &quot;message&quot; => $e->getMessage()&#xD;
         ));&#xD;
         throw new DatabaseException(&quot;Database Exception:&quot; . $e->getMessage(), 0, $e);&#xD;
     }&#xD;
&#xD;
 </body>
            </ownedBehavior>
            <ownedOperation xmi:id="_zAO6AFkwEeqFbcy13qxfSA" name="getConnection" method="_zBoBIFkwEeqFbcy13qxfSA">
              <ownedComment xmi:id="_zBqdZFkwEeqFbcy13qxfSA">
                <body>*&#xD;
     * getConnection method connecting to the database.&#xD;
     *&#xD;
     * @return $connection after executing the mysqli_connect.</body>
              </ownedComment>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_zBWUUFkwEeqFbcy13qxfSA" name="Exception"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_8DBJIFkwEeqFbcy13qxfSA" name="Http">
        <packagedElement xmi:type="uml:Package" xmi:id="_8DDlYFkwEeqFbcy13qxfSA" name="Controllers">
          <packagedElement xmi:type="uml:Class" xmi:id="_8DYVgFkwEeqFbcy13qxfSA" name="AdminController">
            <generalization xmi:id="_8D1BcVkwEeqFbcy13qxfSA" general="_8D0aYFkwEeqFbcy13qxfSA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8EODAFkwEeqFbcy13qxfSA" name="onUsersPull" specification="_8D2PkVkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_8EODAVkwEeqFbcy13qxfSA" name="request" type="_8D1ogFkwEeqFbcy13qxfSA"/>
              <language>PHP</language>
              <body>try&#xD;
     {&#xD;
         // Check if the user is Admin; then only move on to the Business Service&#xD;
         // If not, send the user to a privilege view page.&#xD;
         if (Session::get('role') == &quot;admin&quot;)&#xD;
         {&#xD;
             $adminBusiness = new AdminBusinessService();&#xD;
             $userData = $adminBusiness->populate();&#xD;
         }&#xD;
         else&#xD;
         {&#xD;
             return view('error.privilege');&#xD;
         }&#xD;
&#xD;
         // if&#xD;
         if ($userData)&#xD;
         {&#xD;
             $message = &quot;Login Success&quot;;&#xD;
         }&#xD;
         else&#xD;
         {&#xD;
             $message = &quot;Login Failure&quot;;&#xD;
         }&#xD;
&#xD;
         return view('admin.displayUsers')->with('users', $userData);&#xD;
     }&#xD;
     catch (Exception $e)&#xD;
     {&#xD;
         return view('error.commonError');&#xD;
     }&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8EODAlkwEeqFbcy13qxfSA" name="onEdit" specification="_8D22oFkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_8EODA1kwEeqFbcy13qxfSA" name="request" type="_8D1ogFkwEeqFbcy13qxfSA"/>
              <language>PHP</language>
              <body>try&#xD;
     {&#xD;
         $id = $request->input('id');&#xD;
         $firstName = $request->input('firstname');&#xD;
         $lastName = $request->input('lastname');&#xD;
         $username = $request->input('username');&#xD;
         $password = $request->input('password');&#xD;
         $email = $request->input('email');&#xD;
         $phone = $request->input('phone');&#xD;
         $role = $request->input('role');&#xD;
&#xD;
         // Create a User Object:&#xD;
         $user = new User($id, $firstName, $lastName, $username, $password, $email, $phone, $role);&#xD;
&#xD;
         // Get the role from Session:&#xD;
         if (Session::get('role') == &quot;admin&quot;)&#xD;
         {&#xD;
             // Call to BusinessService&#xD;
             $adminBusiness = new AdminBusinessService();&#xD;
             $userPull = $adminBusiness->modify($user);&#xD;
         }&#xD;
         else&#xD;
         {&#xD;
             return view('error.privilege');&#xD;
         }&#xD;
         // $adminBusiness = new AdminBusinessService();&#xD;
         // $userPull = $adminBusiness->modify($user);&#xD;
&#xD;
         $userData = $adminBusiness->populate();&#xD;
&#xD;
         if ($userPull)&#xD;
         {&#xD;
             return view('admin.displayUsers')->with('users', $userData);&#xD;
         }&#xD;
         else&#xD;
         {&#xD;
             return view('error.privilege');&#xD;
         }&#xD;
     }&#xD;
     catch (Exception $e)&#xD;
     {&#xD;
         return view('error.commonError');&#xD;
     }&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8EODBFkwEeqFbcy13qxfSA" name="onRemoval" specification="_8D3dsFkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_8EODBVkwEeqFbcy13qxfSA" name="request" type="_8D1ogFkwEeqFbcy13qxfSA"/>
              <language>PHP</language>
              <body>try&#xD;
     {&#xD;
         $id = $request->input('id');&#xD;
         $firstName = $request->input('firstname');&#xD;
         $lastName = $request->input('lastname');&#xD;
         $username = $request->input('username');&#xD;
         $password = $request->input('password');&#xD;
         $email = $request->input('email');&#xD;
         $phone = $request->input('phone');&#xD;
         $role = $request->input('role');&#xD;
&#xD;
         // Create a User Object:&#xD;
         $user = new User($id, $firstName, $lastName, $username, $password, $email, $phone, $role);&#xD;
&#xD;
         $adminBusiness = new AdminBusinessService();&#xD;
         $userRemove = $adminBusiness->remove($user);&#xD;
         $userData = $adminBusiness->populate();&#xD;
&#xD;
         if ($userRemove)&#xD;
         {&#xD;
             return view('admin.displayUsers')->with('users', $userData);&#xD;
         }&#xD;
         else&#xD;
         {&#xD;
             return view('error.privilege');&#xD;
         }&#xD;
     }&#xD;
     catch (Exception $e)&#xD;
     {&#xD;
         return view('error.commonError');&#xD;
     }&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8EODBlkwEeqFbcy13qxfSA" name="onSuspension" specification="_8D4EwFkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_8EODB1kwEeqFbcy13qxfSA" name="request" type="_8D1ogFkwEeqFbcy13qxfSA"/>
              <language>PHP</language>
              <body>try&#xD;
     {&#xD;
         if (Session::get('role') == &quot;admin&quot;)&#xD;
         {&#xD;
             $id = $request->input('id');&#xD;
             $firstName = $request->input('firstname');&#xD;
             $lastName = $request->input('lastname');&#xD;
             $username = $request->input('username');&#xD;
             $password = $request->input('password');&#xD;
             $email = $request->input('email');&#xD;
             $phone = $request->input('phone');&#xD;
             $role = $request->input('role');&#xD;
&#xD;
             // Create a User Object:&#xD;
             $user = new User($id, $firstName, $lastName, $username, $password, $email, $phone, $role);&#xD;
&#xD;
             // Calling the Business service&#xD;
             $adminBusiness = new AdminBusinessService();&#xD;
&#xD;
             $role = $user->getRole();&#xD;
             if ($role == &quot;suspended&quot;)&#xD;
             {&#xD;
                 $user->setRole($role = &quot;user&quot;);&#xD;
             }&#xD;
             else&#xD;
             {&#xD;
                 $user->setRole($role = &quot;suspended&quot;);&#xD;
             }&#xD;
         }&#xD;
&#xD;
         // Suspend the User&#xD;
         $userSuspend = $adminBusiness->suspend($user);&#xD;
         $userData = $adminBusiness->populate();&#xD;
&#xD;
         if ($userSuspend)&#xD;
         {&#xD;
             return view('admin.displayUsers')->with('users', $userData);&#xD;
         }&#xD;
         else&#xD;
         {&#xD;
             return view('error.privilege');&#xD;
         }&#xD;
     }&#xD;
     catch (Exception $e)&#xD;
     {&#xD;
         return view('error.commonError');&#xD;
     }&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8EOqEFkwEeqFbcy13qxfSA" name="onJobAddition" specification="_8D4Ew1kwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_8EOqEVkwEeqFbcy13qxfSA" name="request" type="_8D1ogFkwEeqFbcy13qxfSA"/>
              <language>PHP</language>
              <body>$this->validateJobForm($request);&#xD;
&#xD;
     try&#xD;
     {            &#xD;
         // Store all the Requested info into Variables:&#xD;
         $jobId = $request->input('id');&#xD;
         $jobName = $request->input('jobname');&#xD;
         $jobDesc = $request->input('description');&#xD;
         $jobComp = $request->input('company');&#xD;
         $jobRequire = $request->input('requirements');&#xD;
         $jobSkills = $request->input('skills');&#xD;
&#xD;
         // Create Job Object:&#xD;
         $job = new Job($jobId, $jobName, $jobDesc, $jobComp, $jobRequire, $jobSkills);&#xD;
&#xD;
         // Send it to Business Service to Add the Job:&#xD;
         $service = new AdminBusinessService();&#xD;
         $result = $service->publishJob($job);&#xD;
         $jobsData = $service->populateJobs();&#xD;
&#xD;
         if ($result)&#xD;
         {&#xD;
             return view('job.jobs')->with('jobs', $jobsData);&#xD;
         }&#xD;
         else&#xD;
             return view('common.error');&#xD;
     }&#xD;
     catch (ValidationException $el)&#xD;
     {&#xD;
         throw $el;&#xD;
     }&#xD;
     catch (Exception $e)&#xD;
     {&#xD;
         // Throwing Exception with message:&#xD;
         throw $e->getMessage();&#xD;
     }&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8EOqElkwEeqFbcy13qxfSA" name="onViewJobList" specification="_8DbY0FkwEeqFbcy13qxfSA">
              <language>PHP</language>
              <body>try&#xD;
     {&#xD;
         // Call a business service and populate with jobs within a table:&#xD;
         $service = new AdminBusinessService();&#xD;
         $jobsData = $service->populateJobs();&#xD;
&#xD;
         return view('job.jobs')->with('jobs', $jobsData);&#xD;
     }&#xD;
     catch (Exception $e)&#xD;
     {&#xD;
         // Throwing Exception with message:&#xD;
         throw $e->getMessage();&#xD;
     }&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8EOqE1kwEeqFbcy13qxfSA" name="onViewEditJob" specification="_8D4r0lkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_8EOqFFkwEeqFbcy13qxfSA" name="request" type="_8D1ogFkwEeqFbcy13qxfSA"/>
              <language>PHP</language>
              <body>try&#xD;
     {&#xD;
         // Store the information from hidden values into a Job object:&#xD;
         $jobId = $request->input('id');&#xD;
         $jobName = $request->input('jobname');&#xD;
         $jobDesc = $request->input('description');&#xD;
         $jobComp = $request->input('company');&#xD;
         $jobRequire = $request->input('requirements');&#xD;
         $jobSkills = $request->input('skills');&#xD;
&#xD;
         // Create a Job Object:&#xD;
         $job = new Job($jobId, $jobName, $jobDesc, $jobComp, $jobRequire, $jobSkills);&#xD;
&#xD;
         return view('job.editJobForm')->with('job', $job);&#xD;
     }&#xD;
     catch (Exception $e)&#xD;
     {&#xD;
         // Throwing Exception with message:&#xD;
         throw $e->getMessage();&#xD;
     }&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8EOqFVkwEeqFbcy13qxfSA" name="onEditJobPost" specification="_8D5S4VkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_8EOqFlkwEeqFbcy13qxfSA" name="request" type="_8D1ogFkwEeqFbcy13qxfSA"/>
              <language>PHP</language>
              <body>try&#xD;
     {&#xD;
         // Store the information from hidden values into a Job object:&#xD;
         $jobId = $request->input('jobid');&#xD;
         $jobName = $request->input('jobname');&#xD;
         $jobDesc = $request->input('description');&#xD;
         $jobComp = $request->input('company');&#xD;
         $jobRequire = $request->input('requirements');&#xD;
         $jobSkills = $request->input('skills');&#xD;
&#xD;
         // Create a Job Object:&#xD;
         $job = new Job($jobId, $jobName, $jobDesc, $jobComp, $jobRequire, $jobSkills);&#xD;
&#xD;
         // Send it to Business Service to Edit the Job:&#xD;
         $service = new AdminBusinessService();&#xD;
         $result = $service->jobModify($job);&#xD;
&#xD;
         $jobsData = $service->populateJobs();&#xD;
&#xD;
         // Check if Result is true:&#xD;
         if ($result)&#xD;
         {&#xD;
             return view('job.jobs')->with('jobs', $jobsData);&#xD;
         }&#xD;
         else&#xD;
         {&#xD;
             $message = &quot;Please check the information again.&quot;;&#xD;
             return view('job.jobs')->with('message', $message);&#xD;
         }&#xD;
     }&#xD;
     catch (Exception $e)&#xD;
     {&#xD;
         // Throwing Exception with message:&#xD;
         throw $e->getMessage();&#xD;
     }&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8EOqF1kwEeqFbcy13qxfSA" name="onJobDeletion" specification="_8D558lkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_8EOqGFkwEeqFbcy13qxfSA" name="request" type="_8D1ogFkwEeqFbcy13qxfSA"/>
              <language>PHP</language>
              <body>try&#xD;
     {&#xD;
         // Store the information from hidden values into a Job object:&#xD;
         $jobId = $request->input('id');&#xD;
         $jobName = $request->input('job');&#xD;
         $jobDesc = $request->input('description');&#xD;
         $jobComp = $request->input('company');&#xD;
         $jobRequire = $request->input('requirements');&#xD;
         $jobSkills = $request->input('skills');&#xD;
&#xD;
         // Create a Job Object:&#xD;
         $job = new Job($jobId, $jobName, $jobDesc, $jobComp, $jobRequire, $jobSkills);&#xD;
&#xD;
         // Send it to Business Service to Edit the Job:&#xD;
         $service = new AdminBusinessService();&#xD;
         $result = $service->obliterateJob($job);&#xD;
&#xD;
         $jobsData = $service->populateJobs();&#xD;
&#xD;
         // Check if Result is true:&#xD;
         if ($result)&#xD;
         {&#xD;
             return view('job.jobs')->with('jobs', $jobsData);&#xD;
         }&#xD;
         else&#xD;
         {&#xD;
             $message = &quot;Please check the information again.&quot;;&#xD;
             return view('job.jobs')->with('message', $message);&#xD;
         }&#xD;
     }&#xD;
     catch (Exception $e)&#xD;
     {&#xD;
         // Throwing Exception with message:&#xD;
         throw $e->getMessage();&#xD;
     }&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8EPRIFkwEeqFbcy13qxfSA" name="validateJobForm" specification="_8D6hAVkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_8EPRIVkwEeqFbcy13qxfSA" name="request" type="_8D1ogFkwEeqFbcy13qxfSA"/>
              <language>PHP</language>
              <body>$rules = [&#xD;
         'jobname' => 'Required | Alpha | Max: 20',&#xD;
         'description' => 'Required | Size: 1000',&#xD;
         'company' => 'Required | Alpha | Between: 4, 20',&#xD;
         'requirements' => 'Required | Alpha | Max: 50',&#xD;
         'skills' => 'Required | Alpha | Between: 3, 50' &#xD;
     ];&#xD;
&#xD;
     // Run Validation Rules:&#xD;
     $this->validate($request, $rules);&#xD;
 </body>
            </ownedBehavior>
            <ownedOperation xmi:id="_8DbY0FkwEeqFbcy13qxfSA" name="onViewJobList" method="_8EOqElkwEeqFbcy13qxfSA">
              <ownedComment xmi:id="_8ETik1kwEeqFbcy13qxfSA">
                <body>*&#xD;
     * View the list of Jobs from the database&#xD;
     *&#xD;
     * @return \Illuminate\View\View|\Illuminate\Contracts\View\Factory</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_8D2PkVkwEeqFbcy13qxfSA" name="onUsersPull" method="_8EODAFkwEeqFbcy13qxfSA">
              <ownedComment xmi:id="_8ES7gFkwEeqFbcy13qxfSA">
                <body>*&#xD;
     * onUsersPull's purpose is for the Admin to view the datatable of Users.&#xD;
     *&#xD;
     * @param Request $request&#xD;
     * @return \Illuminate\View\View|\Illuminate\Contracts\View\Factory</body>
              </ownedComment>
              <ownedParameter xmi:id="_8D2PklkwEeqFbcy13qxfSA" name="request" type="_8D1ogFkwEeqFbcy13qxfSA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_8D22oFkwEeqFbcy13qxfSA" name="onEdit" method="_8EODAlkwEeqFbcy13qxfSA">
              <ownedComment xmi:id="_8ES7gVkwEeqFbcy13qxfSA">
                <body>*&#xD;
     * TO BE IMPLEMENTED | IS NOT USED FOR NOW&#xD;
     *&#xD;
     * @param Request $request</body>
              </ownedComment>
              <ownedParameter xmi:id="_8D22oVkwEeqFbcy13qxfSA" name="request" type="_8D1ogFkwEeqFbcy13qxfSA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_8D3dsFkwEeqFbcy13qxfSA" name="onRemoval" method="_8EODBFkwEeqFbcy13qxfSA">
              <ownedComment xmi:id="_8ETikFkwEeqFbcy13qxfSA">
                <body>*&#xD;
     * Delete the User from the Table.&#xD;
     *&#xD;
     * @param Request $request&#xD;
     * @return \Illuminate\View\View|\Illuminate\Contracts\View\Factory</body>
              </ownedComment>
              <ownedParameter xmi:id="_8D3dsVkwEeqFbcy13qxfSA" name="request" type="_8D1ogFkwEeqFbcy13qxfSA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_8D4EwFkwEeqFbcy13qxfSA" name="onSuspension" method="_8EODBlkwEeqFbcy13qxfSA">
              <ownedComment xmi:id="_8ETikVkwEeqFbcy13qxfSA">
                <body>*&#xD;
     * Suspend a user&#xD;
     *&#xD;
     * @param Request $request&#xD;
     * @return \Illuminate\View\View|\Illuminate\Contracts\View\Factory</body>
              </ownedComment>
              <ownedParameter xmi:id="_8D4EwVkwEeqFbcy13qxfSA" name="request" type="_8D1ogFkwEeqFbcy13qxfSA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_8D4Ew1kwEeqFbcy13qxfSA" name="onJobAddition" method="_8EOqEFkwEeqFbcy13qxfSA">
              <ownedComment xmi:id="_8ETiklkwEeqFbcy13qxfSA">
                <body>*&#xD;
     * Add a Job after the Admin clicks on the &quot;Add a Job&quot; from Jobs page.&#xD;
     *&#xD;
     * @param Request $request&#xD;
     * @return \Illuminate\View\View|\Illuminate\Contracts\View\Factory</body>
              </ownedComment>
              <ownedParameter xmi:id="_8D4r0FkwEeqFbcy13qxfSA" name="request" type="_8D1ogFkwEeqFbcy13qxfSA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_8D4r0lkwEeqFbcy13qxfSA" name="onViewEditJob" method="_8EOqE1kwEeqFbcy13qxfSA">
              <ownedComment xmi:id="_8ETilFkwEeqFbcy13qxfSA">
                <body>*&#xD;
     * Open up the EditJobForm page after clicking on &quot;Edit&quot; from Jobs page.&#xD;
     * Note: This does NOT Edit the Job yet. It only takes the admin to the&#xD;
     * EditJobForm.&#xD;
     *&#xD;
     * @param Request $request&#xD;
     * @return \Illuminate\View\View|\Illuminate\Contracts\View\Factory</body>
              </ownedComment>
              <ownedParameter xmi:id="_8D4r01kwEeqFbcy13qxfSA" name="request" type="_8D1ogFkwEeqFbcy13qxfSA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_8D5S4VkwEeqFbcy13qxfSA" name="onEditJobPost" method="_8EOqFVkwEeqFbcy13qxfSA">
              <ownedComment xmi:id="_8ETilVkwEeqFbcy13qxfSA">
                <body>*&#xD;
     *&#xD;
     * @param Request $request&#xD;
     * @return \Illuminate\View\View|\Illuminate\Contracts\View\Factory</body>
              </ownedComment>
              <ownedParameter xmi:id="_8D558FkwEeqFbcy13qxfSA" name="request" type="_8D1ogFkwEeqFbcy13qxfSA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_8D558lkwEeqFbcy13qxfSA" name="onJobDeletion" method="_8EOqF1kwEeqFbcy13qxfSA">
              <ownedComment xmi:id="_8ETillkwEeqFbcy13qxfSA">
                <body>*&#xD;
     * Deleting Job after Admin clicks on &quot;Delete&quot;&#xD;
     *&#xD;
     * @param Request $request&#xD;
     * @return \Illuminate\View\View|\Illuminate\Contracts\View\Factory</body>
              </ownedComment>
              <ownedParameter xmi:id="_8D5581kwEeqFbcy13qxfSA" name="request" type="_8D1ogFkwEeqFbcy13qxfSA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_8D6hAVkwEeqFbcy13qxfSA" name="validateJobForm" visibility="private" method="_8EPRIFkwEeqFbcy13qxfSA">
              <ownedComment xmi:id="_8ETil1kwEeqFbcy13qxfSA">
                <body>*&#xD;
     * Private Method to store the Rules of Job Forms' Validation:&#xD;
     *&#xD;
     * @param Request $request</body>
              </ownedComment>
              <ownedParameter xmi:id="_8D6hAlkwEeqFbcy13qxfSA" name="request" type="_8D1ogFkwEeqFbcy13qxfSA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_8Dg4YFkwEeqFbcy13qxfSA" name="PortfolioController">
            <generalization xmi:id="_8D7vIFkwEeqFbcy13qxfSA" general="_8D0aYFkwEeqFbcy13qxfSA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8EPRIlkwEeqFbcy13qxfSA" name="onAddWorkExperience" specification="_8D8WMFkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_8EPRI1kwEeqFbcy13qxfSA" name="request" type="_8D1ogFkwEeqFbcy13qxfSA"/>
              <language>PHP</language>
              <body>$this->validateJobHistoryForm($request);&#xD;
     &#xD;
     try&#xD;
     {&#xD;
         // Store the Request info into variables:&#xD;
         $id = &quot;&quot;;&#xD;
         $jobName = $request->input('jobname');&#xD;
         $jobPosition = $request->input('jobposition');&#xD;
         $jobDescription = $request->input('jobdescription');&#xD;
         $jobAward = $request->input('jobaward');&#xD;
         $jobStartDate = $request->input('jobstartdate');&#xD;
         $jobEndDate = $request->input('jobenddate');&#xD;
         $userID = $request->input('userid');&#xD;
         &#xD;
         // Create a Job History Object and populate the data&#xD;
         $job = new JobHistory($id, $jobName, $jobPosition, $jobDescription, $jobAward, $jobStartDate, $jobEndDate, $userID);&#xD;
         &#xD;
         // Call the Business Service to add Job History: &#xD;
         $portfolioBusiness = new PortfolioBusinessService();&#xD;
         $portfolioStatus = $portfolioBusiness->postJobExperience($job);&#xD;
         &#xD;
         // Store into jobs all the Job History of a User&#xD;
         $jobs = $portfolioBusiness->retrieveUserJobs($userID);&#xD;
         &#xD;
         // Store into skills all the skill history of the user&#xD;
         $skills = $portfolioBusiness->retrieveUserSkills($userID);&#xD;
         &#xD;
         $education = $portfolioBusiness->retrieveUserEducation($userID);&#xD;
         &#xD;
         return view('portfolio.portfolio')->with('jobs', $jobs)->with('skills', $skills)->with('education', $education);&#xD;
     }&#xD;
     catch (ValidationException $valExc)&#xD;
     {&#xD;
         throw $valExc;&#xD;
     }&#xD;
     catch(Exception $e)&#xD;
     {&#xD;
         return view('error.commonError');&#xD;
     }&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8EPRJFkwEeqFbcy13qxfSA" name="onAddSkill" specification="_8D89QFkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_8EPRJVkwEeqFbcy13qxfSA" name="request" type="_8D1ogFkwEeqFbcy13qxfSA"/>
              <language>PHP</language>
              <body>$this->validateSkillForm($request);&#xD;
     &#xD;
     try&#xD;
     {&#xD;
         $id = &quot;&quot;;&#xD;
         $skillName = $request->input('skillname');&#xD;
         $userID = $request->input('userid');&#xD;
         &#xD;
         //Create a skill object to be added&#xD;
         $skill = new Skill($id, $skillName, $userID);&#xD;
         &#xD;
         $portfolioBusiness = new PortfolioBusinessService();&#xD;
         $portfolioStatus = $portfolioBusiness->postSkillExperience($skill);&#xD;
         &#xD;
         $jobs = $portfolioBusiness->retrieveUserJobs($userID);&#xD;
         &#xD;
         $skills = $portfolioBusiness->retrieveUserSkills($userID);&#xD;
         &#xD;
         $education = $portfolioBusiness->retrieveUserEducation($userID);&#xD;
         &#xD;
         if($portfolioStatus)&#xD;
         {&#xD;
             return view('portfolio.portfolio')->with('jobs', $jobs)->with('skills', $skills)->with('education', $education);&#xD;
         }&#xD;
         else{&#xD;
             return view('error.error');&#xD;
         }&#xD;
     }&#xD;
     catch(Exception $e)&#xD;
     {&#xD;
         return view('error.commonError');&#xD;
     }&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8EPRJlkwEeqFbcy13qxfSA" name="onAddEducation" specification="_8D-LYFkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_8EPRJ1kwEeqFbcy13qxfSA" name="request" type="_8D1ogFkwEeqFbcy13qxfSA"/>
              <language>PHP</language>
              <body>$this->validateEducationForm($request);&#xD;
     &#xD;
     try&#xD;
     {&#xD;
         $id = &quot;&quot;;&#xD;
         $edName = $request->input('edname');&#xD;
         $edYears = $request->input('edyears');&#xD;
         $edMajor = $request->input('edmajor');&#xD;
         $edMinor = $request->input('edminor');&#xD;
         $edStartYear = $request->input('edstartyear');&#xD;
         $edEndYear = $request->input('edendyear');&#xD;
         $userID = $request->input('userid');&#xD;
         &#xD;
         //Create an education object to be added&#xD;
         $ed = new Education($id, $edName, $edYears, $edMajor, $edMinor, $edStartYear, $edEndYear, $userID);&#xD;
         &#xD;
         $portfolioBusiness = new PortfolioBusinessService();&#xD;
         $portfolioStatus = $portfolioBusiness->postEducationExperience($ed);&#xD;
         &#xD;
         $jobs = $portfolioBusiness->retrieveUserJobs($userID);&#xD;
         &#xD;
         $skills = $portfolioBusiness->retrieveUserSkills($userID);&#xD;
         &#xD;
         $education = $portfolioBusiness->retrieveUserEducation($userID);&#xD;
         &#xD;
         if($portfolioStatus)&#xD;
         {&#xD;
             return view('portfolio.portfolio')->with('jobs', $jobs)->with('skills', $skills)->with('education', $education);&#xD;
         }&#xD;
         else{&#xD;
             return view('error.error');&#xD;
         }&#xD;
     }&#xD;
     catch(Exception $e)&#xD;
     {&#xD;
         return view('error.commonError');&#xD;
     }&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8EP4MFkwEeqFbcy13qxfSA" name="onJobRemoval" specification="_8D-LY1kwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_8EP4MVkwEeqFbcy13qxfSA" name="request" type="_8D1ogFkwEeqFbcy13qxfSA"/>
              <language>PHP</language>
              <body>$userID = Session::get(&quot;userID&quot;);&#xD;
         $id = $request->input('jobid');&#xD;
         &#xD;
         $portfolioBusiness = new PortfolioBusinessService();&#xD;
         &#xD;
         $portfolioStatus = $portfolioBusiness->removeUserJob($id);&#xD;
         &#xD;
         $jobs = $portfolioBusiness->retrieveUserJobs($userID);&#xD;
         &#xD;
         $skills = $portfolioBusiness->retrieveUserSkills($userID);&#xD;
         &#xD;
         $education = $portfolioBusiness->retrieveUserEducation($userID);&#xD;
         &#xD;
         return view('portfolio.portfolio')->with('jobs', $jobs)->with('skills', $skills)->with('education', $education);&#xD;
         &#xD;
//         }&#xD;
//         catch(Exception $e)&#xD;
//         {&#xD;
//             return view('error.commonError');&#xD;
//         }&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8EP4MlkwEeqFbcy13qxfSA" name="onEducationRemoval" specification="_8D-ycVkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_8EP4M1kwEeqFbcy13qxfSA" name="request" type="_8D1ogFkwEeqFbcy13qxfSA"/>
              <language>PHP</language>
              <body>$userID = Session::get(&quot;userID&quot;);&#xD;
     $id = $request->input('edid');&#xD;
     &#xD;
     $portfolioBusiness = new PortfolioBusinessService();&#xD;
     &#xD;
     $portfolioStatus = $portfolioBusiness->removeUserEducation($id);&#xD;
     &#xD;
     $jobs = $portfolioBusiness->retrieveUserJobs($userID);&#xD;
     &#xD;
     $skills = $portfolioBusiness->retrieveUserSkills($userID);&#xD;
     &#xD;
     $education = $portfolioBusiness->retrieveUserEducation($userID);&#xD;
     &#xD;
     return view('portfolio.portfolio')->with('jobs', $jobs)->with('skills', $skills)->with('education', $education);&#xD;
     &#xD;
     //         }&#xD;
     //         catch(Exception $e)&#xD;
     //         {&#xD;
     //             return view('error.commonError');&#xD;
     //         }&#xD;
     </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8EP4NFkwEeqFbcy13qxfSA" name="onSkillRemoval" specification="_8D_ZgVkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_8EP4NVkwEeqFbcy13qxfSA" name="request" type="_8D1ogFkwEeqFbcy13qxfSA"/>
              <language>PHP</language>
              <body>$userID = Session::get(&quot;userID&quot;);&#xD;
             $id = $request->input('skillid');&#xD;
             &#xD;
             $portfolioBusiness = new PortfolioBusinessService();&#xD;
             &#xD;
             $portfolioStatus = $portfolioBusiness->removeUserSkill($id);&#xD;
             &#xD;
             $jobs = $portfolioBusiness->retrieveUserJobs($userID);&#xD;
             &#xD;
             $skills = $portfolioBusiness->retrieveUserSkills($userID);&#xD;
             &#xD;
             $education = $portfolioBusiness->retrieveUserEducation($userID);&#xD;
             &#xD;
             return view('portfolio.portfolio')->with('jobs', $jobs)->with('skills', $skills)->with('education', $education);&#xD;
             &#xD;
//                 }&#xD;
//                 catch(Exception $e)&#xD;
//                 {&#xD;
//                     return view('error.commonError');&#xD;
//                 }&#xD;
         </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8EP4NlkwEeqFbcy13qxfSA" name="onPersonalPortfolioRetrieval" specification="_8EAAkVkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_8EP4N1kwEeqFbcy13qxfSA" name="request" type="_8D1ogFkwEeqFbcy13qxfSA"/>
              <language>PHP</language>
              <body>try&#xD;
     {&#xD;
         $userID = Session::get('userID');&#xD;
         &#xD;
         $portfolioBusiness = new PortfolioBusinessService();&#xD;
         &#xD;
         $jobs = $portfolioBusiness->retrieveUserJobs($userID);&#xD;
         &#xD;
         $skills = $portfolioBusiness->retrieveUserSkills($userID);&#xD;
         &#xD;
         $education = $portfolioBusiness->retrieveUserEducation($userID);&#xD;
         &#xD;
         return view('portfolio.portfolio')->with('jobs', $jobs)->with('skills', $skills)->with('education', $education);&#xD;
&#xD;
     }&#xD;
     catch(Exception $e)&#xD;
     {&#xD;
         return view('error.commonError');&#xD;
     }&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8EP4OFkwEeqFbcy13qxfSA" name="onRouteJobEdit" specification="_8EAnoFkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_8EP4OVkwEeqFbcy13qxfSA" name="request" type="_8D1ogFkwEeqFbcy13qxfSA"/>
              <language>PHP</language>
              <body>try&#xD;
     {&#xD;
         $id = $request->input('jobid');&#xD;
         $name = $request->input('jobname');&#xD;
         $position = $request->input('jobposition');&#xD;
         $description = $request->input('jobdescription');&#xD;
         $awards = $request->input('jobawards');&#xD;
         $startDate = $request->input('jobstartdate');&#xD;
         $endDate = $request->input('jobenddate');&#xD;
         $userID = Session::get('userID');&#xD;
         &#xD;
         $job = new JobHistory($id, $name, $position, $description, $awards, $startDate, $endDate, $userID);&#xD;
        &#xD;
         &#xD;
         return view('portfolio.editJobHistory')->with('job', $job);&#xD;
         &#xD;
     }&#xD;
     catch(Exception $e)&#xD;
     {&#xD;
         return view('error.commonError');&#xD;
     }&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8EQfQFkwEeqFbcy13qxfSA" name="onRouteEducationEdit" specification="_8EBOsFkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_8EQfQVkwEeqFbcy13qxfSA" name="request" type="_8D1ogFkwEeqFbcy13qxfSA"/>
              <language>PHP</language>
              <body>$id = $request->input('edid');&#xD;
         $name = $request->input('edname');&#xD;
         $years = $request->input('edyears');&#xD;
         $major = $request->input('edmajor');&#xD;
         $minor = $request->input('edminor');&#xD;
         $startYear = $request->input('edstartyear');&#xD;
         $endYear = $request->input('edendyear');&#xD;
         $userID = Session::get('userID');&#xD;
         &#xD;
         $ed = new Education($id, $name, $years, $major, $minor, $startYear, $endYear,  $userID);&#xD;
         &#xD;
         return view('portfolio.editEducation')->with('ed', $ed);&#xD;
         &#xD;
//         }&#xD;
//         catch(Exception $e)&#xD;
//         {&#xD;
//             return view('error.commonError');&#xD;
//         }&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8EQfQlkwEeqFbcy13qxfSA" name="onRouteSkillEdit" specification="_8EB1wFkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_8EQfQ1kwEeqFbcy13qxfSA" name="request" type="_8D1ogFkwEeqFbcy13qxfSA"/>
              <language>PHP</language>
              <body>try&#xD;
     {&#xD;
         $id = $request->input('skillid');&#xD;
         $skillName = $request->input('skillname');&#xD;
         $userID = $request->input('userid');&#xD;
         &#xD;
         //Create a skill object to be added&#xD;
         $skill = new Skill($id, $skillName, $userID);&#xD;
         &#xD;
         return view('portfolio.editSkill')->with('skill', $skill);&#xD;
     }&#xD;
     catch(Exception $e)&#xD;
     {&#xD;
         return view('error.commonError');&#xD;
     }&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8EQfRFkwEeqFbcy13qxfSA" name="onJobEdit" specification="_8ECc0FkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_8EQfRVkwEeqFbcy13qxfSA" name="request" type="_8D1ogFkwEeqFbcy13qxfSA"/>
              <language>PHP</language>
              <body>$this->validateJobHistoryForm($request);&#xD;
     &#xD;
     try&#xD;
     {&#xD;
         $id = $request->input('jobid');&#xD;
         $name = $request->input('jobname');&#xD;
         $position = $request->input('jobposition');&#xD;
         $description = $request->input('jobdescription');&#xD;
         $awards = $request->input('jobawards');&#xD;
         $startDate = $request->input('jobstartdate');&#xD;
         $endDate = $request->input('jobenddate');&#xD;
         $userID = Session::get('userID');&#xD;
         &#xD;
         $job = new JobHistory($id, $name, $position, $description, $awards, $startDate, $endDate, $userID);&#xD;
         &#xD;
         $portfolioBusiness = new PortfolioBusinessService();&#xD;
         &#xD;
         $portfolioStatus = $portfolioBusiness->modifyJobHistory($job);&#xD;
         &#xD;
         $jobs = $portfolioBusiness->retrieveUserJobs($userID);&#xD;
         &#xD;
         $skills = $portfolioBusiness->retrieveUserSkills($userID);&#xD;
         &#xD;
         $education = $portfolioBusiness->retrieveUserEducation($userID);&#xD;
         &#xD;
         if($portfolioStatus)&#xD;
         return view('portfolio.portfolio')->with('jobs', $jobs)->with('skills', $skills)->with('education', $education);&#xD;
         &#xD;
     }&#xD;
     catch(Exception $e)&#xD;
     {&#xD;
         return view('error.commonError');&#xD;
     }&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8EQfRlkwEeqFbcy13qxfSA" name="onEducationEdit" specification="_8EDD4FkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_8EQfR1kwEeqFbcy13qxfSA" name="request" type="_8D1ogFkwEeqFbcy13qxfSA"/>
              <language>PHP</language>
              <body>$this->validateEducationForm($request);&#xD;
     &#xD;
     try&#xD;
     {&#xD;
         $id = $request->input('edid');&#xD;
         $name = $request->input('edname');&#xD;
         $years = $request->input('edyears');&#xD;
         $major = $request->input('edmajor');&#xD;
         $minor = $request->input('edminor');&#xD;
         $startYear = $request->input('edstartyear');&#xD;
         $endYear = $request->input('edendyear');&#xD;
         $userID = Session::get('userID');&#xD;
         &#xD;
         $ed = new Education($id, $name, $years, $major, $minor, $startYear, $endYear,  $userID);&#xD;
         &#xD;
         $portfolioBusiness = new PortfolioBusinessService();&#xD;
         &#xD;
         $portfolioStatus = $portfolioBusiness->modifyEducationHistory($ed);&#xD;
         &#xD;
         $jobs = $portfolioBusiness->retrieveUserJobs($userID);&#xD;
         &#xD;
         $skills = $portfolioBusiness->retrieveUserSkills($userID);&#xD;
         &#xD;
         $education = $portfolioBusiness->retrieveUserEducation($userID);&#xD;
         &#xD;
         if($portfolioStatus)&#xD;
             return view('portfolio.portfolio')->with('jobs', $jobs)->with('skills', $skills)->with('education', $education);&#xD;
             &#xD;
     }&#xD;
     catch(Exception $e)&#xD;
     {&#xD;
         return view('error.commonError');&#xD;
     }&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8EQfSFkwEeqFbcy13qxfSA" name="onSkillEdit" specification="_8EDq8FkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_8EQfSVkwEeqFbcy13qxfSA" name="request" type="_8D1ogFkwEeqFbcy13qxfSA"/>
              <language>PHP</language>
              <body>$this->validateSkillForm($request);&#xD;
     &#xD;
     try&#xD;
     {&#xD;
         $id = $request->input('skillid');&#xD;
         $name = $request->input('skillname');&#xD;
         $userID = Session::get('userID');&#xD;
         &#xD;
         $skill = new Skill($id, $name, $userID);&#xD;
         &#xD;
         $portfolioBusiness = new PortfolioBusinessService();&#xD;
         &#xD;
         $portfolioStatus = $portfolioBusiness->modifySkillHistory($skill);&#xD;
         &#xD;
         $jobs = $portfolioBusiness->retrieveUserJobs($userID);&#xD;
         &#xD;
         $skills = $portfolioBusiness->retrieveUserSkills($userID);&#xD;
         &#xD;
         $education = $portfolioBusiness->retrieveUserEducation($userID);&#xD;
         &#xD;
         if($portfolioStatus)&#xD;
             return view('portfolio.portfolio')->with('jobs', $jobs)->with('skills', $skills)->with('education', $education);&#xD;
             &#xD;
     }&#xD;
     catch(Exception $e)&#xD;
     {&#xD;
         return view('error.commonError');&#xD;
     }&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8ERGUFkwEeqFbcy13qxfSA" name="validateJobHistoryForm" specification="_8EESAVkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_8ERGUVkwEeqFbcy13qxfSA" name="request" type="_8D1ogFkwEeqFbcy13qxfSA"/>
              <language>PHP</language>
              <body>$rules = [&#xD;
         'jobname' => 'Required | Max: 40 | Alpha',&#xD;
         'jobposition' => 'Required | Between: 4, 50',&#xD;
         'jobdescription' => 'Required | Max: 1000',&#xD;
         'jobaward' => 'Required | Between: 4, 50',&#xD;
         'jobstartdate' => 'Required | Date',&#xD;
         'jobenddate' => 'Required | Date'&#xD;
     ];&#xD;
     &#xD;
     // Run Validation Rules:&#xD;
     $this->validate($request, $rules);&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8ERGUlkwEeqFbcy13qxfSA" name="validateEducationForm" specification="_8EE5EFkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_8ERGU1kwEeqFbcy13qxfSA" name="request" type="_8D1ogFkwEeqFbcy13qxfSA"/>
              <language>PHP</language>
              <body>$rules = [&#xD;
         'edname' => 'Required | Between: 4, 50 | Alpha',&#xD;
         'edyears' => 'Required | Numeric | Between: 1, 80',&#xD;
         'edmajor' => 'Required | Between: 4, 50',&#xD;
         'edminor' => 'Required | Between: 4, 50',&#xD;
         'edstartyear' => 'Required | Digits: 4',&#xD;
         'edendyear' => 'Required | Digits: 4'&#xD;
     ];&#xD;
     &#xD;
     // Run Validation Rules:&#xD;
     $this->validate($request, $rules);&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8ERGVFkwEeqFbcy13qxfSA" name="validateSkillForm" specification="_8EFgIFkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_8ERGVVkwEeqFbcy13qxfSA" name="request" type="_8D1ogFkwEeqFbcy13qxfSA"/>
              <language>PHP</language>
              <body>$rules = [&#xD;
         'skillname' => 'Required | Alpha | Between: 4, 150'&#xD;
     ];&#xD;
     &#xD;
     // Run Validation Rules:&#xD;
     $this->validate($request, $rules);&#xD;
 </body>
            </ownedBehavior>
            <ownedOperation xmi:id="_8D8WMFkwEeqFbcy13qxfSA" name="onAddWorkExperience" method="_8EPRIlkwEeqFbcy13qxfSA">
              <ownedComment xmi:id="_8ETimFkwEeqFbcy13qxfSA">
                <body>*&#xD;
     * Add Job History to a User's portfolio: &#xD;
     * @param Request $request&#xD;
     * @throws ValidationException&#xD;
     * @return \Illuminate\View\View|\Illuminate\Contracts\View\Factory</body>
              </ownedComment>
              <ownedParameter xmi:id="_8D8WMVkwEeqFbcy13qxfSA" name="request" type="_8D1ogFkwEeqFbcy13qxfSA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_8D89QFkwEeqFbcy13qxfSA" name="onAddSkill" method="_8EPRJFkwEeqFbcy13qxfSA">
              <ownedComment xmi:id="_8ETimVkwEeqFbcy13qxfSA">
                <body>*&#xD;
     * Add Skills to the Portfolio&#xD;
     * @param Request $request&#xD;
     * @return \Illuminate\View\View|\Illuminate\Contracts\View\Factory</body>
              </ownedComment>
              <ownedParameter xmi:id="_8D89QVkwEeqFbcy13qxfSA" name="request" type="_8D1ogFkwEeqFbcy13qxfSA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_8D-LYFkwEeqFbcy13qxfSA" name="onAddEducation" method="_8EPRJlkwEeqFbcy13qxfSA">
              <ownedComment xmi:id="_8ETimlkwEeqFbcy13qxfSA">
                <body>*&#xD;
     * Add Education History to the Portfolio&#xD;
     * @param Request $request&#xD;
     * @return \Illuminate\View\View|\Illuminate\Contracts\View\Factory</body>
              </ownedComment>
              <ownedParameter xmi:id="_8D-LYVkwEeqFbcy13qxfSA" name="request" type="_8D1ogFkwEeqFbcy13qxfSA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_8D-LY1kwEeqFbcy13qxfSA" name="onJobRemoval" method="_8EP4MFkwEeqFbcy13qxfSA">
              <ownedComment xmi:id="_8ETim1kwEeqFbcy13qxfSA">
                <body>*&#xD;
     * Delete a Job History from the Portfolio&#xD;
     * @param Request $request&#xD;
     * @return \Illuminate\View\View|\Illuminate\Contracts\View\Factory</body>
              </ownedComment>
              <ownedParameter xmi:id="_8D-ycFkwEeqFbcy13qxfSA" name="request" type="_8D1ogFkwEeqFbcy13qxfSA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_8D-ycVkwEeqFbcy13qxfSA" name="onEducationRemoval" method="_8EP4MlkwEeqFbcy13qxfSA">
              <ownedComment xmi:id="_8ETinFkwEeqFbcy13qxfSA">
                <body>*&#xD;
     * Delete Education History on the Portfolio&#xD;
     * &#xD;
     * @param Request $request&#xD;
     * @return \Illuminate\View\View|\Illuminate\Contracts\View\Factory</body>
              </ownedComment>
              <ownedParameter xmi:id="_8D-yclkwEeqFbcy13qxfSA" name="request" type="_8D1ogFkwEeqFbcy13qxfSA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_8D_ZgVkwEeqFbcy13qxfSA" name="onSkillRemoval" method="_8EP4NFkwEeqFbcy13qxfSA">
              <ownedComment xmi:id="_8ETinVkwEeqFbcy13qxfSA">
                <body>*&#xD;
         * Delete skill on History on the Portfolio&#xD;
         * @param Request $request&#xD;
         * @return \Illuminate\View\View|\Illuminate\Contracts\View\Factory</body>
              </ownedComment>
              <ownedParameter xmi:id="_8D_ZglkwEeqFbcy13qxfSA" name="request" type="_8D1ogFkwEeqFbcy13qxfSA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_8EAAkVkwEeqFbcy13qxfSA" name="onPersonalPortfolioRetrieval" method="_8EP4NlkwEeqFbcy13qxfSA">
              <ownedComment xmi:id="_8EUJoFkwEeqFbcy13qxfSA">
                <body>*&#xD;
     * Display the Portfolio page&#xD;
     * @param Request $request&#xD;
     * @return \Illuminate\View\View|\Illuminate\Contracts\View\Factory</body>
              </ownedComment>
              <ownedParameter xmi:id="_8EAAklkwEeqFbcy13qxfSA" name="request" type="_8D1ogFkwEeqFbcy13qxfSA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_8EAnoFkwEeqFbcy13qxfSA" name="onRouteJobEdit" method="_8EP4OFkwEeqFbcy13qxfSA">
              <ownedComment xmi:id="_8EUJoVkwEeqFbcy13qxfSA">
                <body>*&#xD;
     * Display the EditJobHistory Form by passing the Job's info to the Form. &#xD;
     * @param Request $request&#xD;
     * @return \Illuminate\View\View|\Illuminate\Contracts\View\Factory</body>
              </ownedComment>
              <ownedParameter xmi:id="_8EAnoVkwEeqFbcy13qxfSA" name="request" type="_8D1ogFkwEeqFbcy13qxfSA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_8EBOsFkwEeqFbcy13qxfSA" name="onRouteEducationEdit" method="_8EQfQFkwEeqFbcy13qxfSA">
              <ownedComment xmi:id="_8EUJolkwEeqFbcy13qxfSA">
                <body>*&#xD;
     * Display the EditEducationForm by passing in user's Education's info into the form&#xD;
     * @param Request $request&#xD;
     * @return \Illuminate\View\View|\Illuminate\Contracts\View\Factory</body>
              </ownedComment>
              <ownedParameter xmi:id="_8EBOsVkwEeqFbcy13qxfSA" name="request" type="_8D1ogFkwEeqFbcy13qxfSA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_8EB1wFkwEeqFbcy13qxfSA" name="onRouteSkillEdit" method="_8EQfQlkwEeqFbcy13qxfSA">
              <ownedComment xmi:id="_8EUJo1kwEeqFbcy13qxfSA">
                <body>*&#xD;
     * Display the EditSkillForm by passing in the user's Skill info into the form. &#xD;
     * @param Request $request&#xD;
     * @return \Illuminate\View\View|\Illuminate\Contracts\View\Factory</body>
              </ownedComment>
              <ownedParameter xmi:id="_8EB1wVkwEeqFbcy13qxfSA" name="request" type="_8D1ogFkwEeqFbcy13qxfSA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_8ECc0FkwEeqFbcy13qxfSA" name="onJobEdit" method="_8EQfRFkwEeqFbcy13qxfSA">
              <ownedComment xmi:id="_8EUJpFkwEeqFbcy13qxfSA">
                <body>*&#xD;
     * Edit the JobHistory info after clicking in &quot;Edit&quot; button in the EditJobHistory form.&#xD;
     * @param Request $request&#xD;
     * @return \Illuminate\View\View|\Illuminate\Contracts\View\Factory</body>
              </ownedComment>
              <ownedParameter xmi:id="_8ECc0VkwEeqFbcy13qxfSA" name="request" type="_8D1ogFkwEeqFbcy13qxfSA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_8EDD4FkwEeqFbcy13qxfSA" name="onEducationEdit" method="_8EQfRlkwEeqFbcy13qxfSA">
              <ownedComment xmi:id="_8EUJpVkwEeqFbcy13qxfSA">
                <body>*&#xD;
     * Edit the EducationHistory after clicking on the &quot;Edit&quot; in the Edit form&#xD;
     * @param Request $request&#xD;
     * @return \Illuminate\View\View|\Illuminate\Contracts\View\Factory</body>
              </ownedComment>
              <ownedParameter xmi:id="_8EDD4VkwEeqFbcy13qxfSA" name="request" type="_8D1ogFkwEeqFbcy13qxfSA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_8EDq8FkwEeqFbcy13qxfSA" name="onSkillEdit" method="_8EQfSFkwEeqFbcy13qxfSA">
              <ownedComment xmi:id="_8EUJplkwEeqFbcy13qxfSA">
                <body>*&#xD;
     * Edit the SkillHistory after clicking on the &quot;Edit&quot; in the Edit form&#xD;
     * @param Request $request&#xD;
     * @return \Illuminate\View\View|\Illuminate\Contracts\View\Factory</body>
              </ownedComment>
              <ownedParameter xmi:id="_8EDq8VkwEeqFbcy13qxfSA" name="request" type="_8D1ogFkwEeqFbcy13qxfSA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_8EESAVkwEeqFbcy13qxfSA" name="validateJobHistoryForm" visibility="private" method="_8ERGUFkwEeqFbcy13qxfSA">
              <ownedComment xmi:id="_8EUJp1kwEeqFbcy13qxfSA">
                <body>*&#xD;
     * Validation Rules for JobHistory Forms: &#xD;
     * @param Request $request</body>
              </ownedComment>
              <ownedParameter xmi:id="_8EESAlkwEeqFbcy13qxfSA" name="request" type="_8D1ogFkwEeqFbcy13qxfSA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_8EE5EFkwEeqFbcy13qxfSA" name="validateEducationForm" visibility="private" method="_8ERGUlkwEeqFbcy13qxfSA">
              <ownedComment xmi:id="_8EUJqFkwEeqFbcy13qxfSA">
                <body>*&#xD;
     * Validate function for EducationForms&#xD;
     * &#xD;
     * @param Request $request</body>
              </ownedComment>
              <ownedParameter xmi:id="_8EE5EVkwEeqFbcy13qxfSA" name="request" type="_8D1ogFkwEeqFbcy13qxfSA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_8EFgIFkwEeqFbcy13qxfSA" name="validateSkillForm" visibility="private" method="_8ERGVFkwEeqFbcy13qxfSA">
              <ownedComment xmi:id="_8EUJqVkwEeqFbcy13qxfSA">
                <body>*&#xD;
     * Validate functions for Skill forms.&#xD;
     * &#xD;
     * @param Request $request</body>
              </ownedComment>
              <ownedParameter xmi:id="_8EFgIVkwEeqFbcy13qxfSA" name="request" type="_8D1ogFkwEeqFbcy13qxfSA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_8DqCUFkwEeqFbcy13qxfSA" name="UserController">
            <ownedComment xmi:id="_8EUJqlkwEeqFbcy13qxfSA">
              <body>*&#xD;
 *&#xD;
@author mrabi, agingdanger&#xD;
User controller will handle all authenticate method</body>
            </ownedComment>
            <generalization xmi:id="_8EGuQFkwEeqFbcy13qxfSA" general="_8D0aYFkwEeqFbcy13qxfSA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8ERtYFkwEeqFbcy13qxfSA" name="onLogin" specification="_8EGuQVkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_8ERtYVkwEeqFbcy13qxfSA" name="request" type="_8D1ogFkwEeqFbcy13qxfSA"/>
              <language>PHP</language>
              <body>$this->validateLoginForm($request);&#xD;
     &#xD;
     try&#xD;
     {&#xD;
         // Calling Business Services -&#xD;
         $userAttempt = new userCredentials($request->input('username'), $request->input('password'));&#xD;
&#xD;
         $service = new SecurityService();&#xD;
         $userData = $service->authenticate($userAttempt);&#xD;
&#xD;
         if(! $userData)&#xD;
             return view('login.loginStatus')->with('message', &quot;Login Failure&quot;);&#xD;
&#xD;
         // translate query array into object&#xD;
         $userData = get_object_vars($userData);&#xD;
&#xD;
         if($userData['ROLE'] == &quot;suspended&quot;)&#xD;
         {   &#xD;
             return view('error.suspended');&#xD;
         }&#xD;
&#xD;
         // Creating sessions here to get the user's ID &amp; Role.&#xD;
         Session::put('userID', $userData['ID']);&#xD;
         Session::put('role', $userData['ROLE']);&#xD;
&#xD;
         return view('home.home')->with('user', $userData);&#xD;
     }&#xD;
     catch(ValidationException $el)&#xD;
     {&#xD;
         throw $el;&#xD;
     }&#xD;
     catch(Exception $e)&#xD;
     {&#xD;
         // Return the Error Page: &#xD;
         return view('error.commonError');&#xD;
     }&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8ERtYlkwEeqFbcy13qxfSA" name="onRegister" specification="_8EH8YFkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_8ERtY1kwEeqFbcy13qxfSA" name="request" type="_8D1ogFkwEeqFbcy13qxfSA"/>
              <language>PHP</language>
              <body>$this->validateRegistrationForm($request);&#xD;
     &#xD;
     try&#xD;
     {&#xD;
         // Get the request data into variables&#xD;
         $id = &quot;&quot;;&#xD;
         $firstName = $request->input('firstname');&#xD;
         $lastName = $request->input('lastname');&#xD;
         $username = $request->input('username');&#xD;
         $password = $request->input('password');&#xD;
         $email = $request->input('email');&#xD;
         $phone = $request->input('phone');&#xD;
         $role = $request->input('role');&#xD;
&#xD;
         // Create a User object and populate it with the requested data.&#xD;
         $user = new User($id, $firstName, $lastName, $username, $password, $email, $phone, $role);&#xD;
&#xD;
         // Call the Business Service to register&#xD;
         $userBusiness = new UserBusinessService();&#xD;
         $isRegisterAttempt = $userBusiness->register($user);&#xD;
&#xD;
         // if Registration process is true.&#xD;
         if($isRegisterAttempt)&#xD;
         {&#xD;
             Session::put('role', $request->input('role'));&#xD;
             return view('registration.registerstatus')->with('message', $message = &quot;Registered Successfully!&quot;);&#xD;
         }&#xD;
         return view('registration.registerstatus')->with('message', $message = &quot;Did not register. Try again.&quot;);&#xD;
     }&#xD;
     catch(Exception $e)&#xD;
     {&#xD;
         return view('error.commonError');&#xD;
     }&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8ERtZFkwEeqFbcy13qxfSA" name="onEdit" specification="_8EIjcFkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_8ERtZVkwEeqFbcy13qxfSA" name="request" type="_8D1ogFkwEeqFbcy13qxfSA"/>
              <language>PHP</language>
              <body>try&#xD;
     {&#xD;
         /*&#xD;
          * Check if it's the Admin and if it is the User editing his own profile&#xD;
          */&#xD;
         if(Session::get('role') == &quot;admin&quot; || Session::get('userID') == $request->input('id'))&#xD;
         {&#xD;
             $id = $request->input('id');&#xD;
             $firstName = $request->input('firstname');&#xD;
             $lastName = $request->input('lastname');&#xD;
             $username = $request->input('username');&#xD;
             $password = $request->input('password');&#xD;
             $email = $request->input('email');&#xD;
             $phone = $request->input('phone');&#xD;
             $role = $request->input('role');&#xD;
&#xD;
             // Create a User Object and populate the data&#xD;
             $user = new User($id, $firstName, $lastName, $username, $password, $email, $phone, $role);&#xD;
&#xD;
             // Call the Business Service to modify the changes&#xD;
             $userBusiness = new UserBusinessService();&#xD;
             $userData = $userBusiness->modify($user);&#xD;
&#xD;
             // Use the Profile Business method to view the new Profile changes. &#xD;
             $userData = $userBusiness->profile($user);&#xD;
&#xD;
             // translate query array into object&#xD;
             $userData = get_object_vars($userData);&#xD;
&#xD;
             // Check if there is UserData brought from the Business Service.&#xD;
             if($userData)&#xD;
             {&#xD;
                 return view('users.profile')->with('user', $userData);&#xD;
             }&#xD;
             return view('error.commonError');&#xD;
         }&#xD;
         // This else is if a non-Admin or another user tries to edit other's accounts.&#xD;
         else&#xD;
         {&#xD;
             return view('error.privilege');&#xD;
         }&#xD;
     }&#xD;
     catch(Exception $e)&#xD;
     {&#xD;
         // Redirect to the Common Error Page:&#xD;
         return view('error.commonError');&#xD;
     }&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8ERtZlkwEeqFbcy13qxfSA" name="onNavigate" specification="_8EJKgFkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_8ERtZ1kwEeqFbcy13qxfSA" name="request" type="_8D1ogFkwEeqFbcy13qxfSA"/>
              <language>PHP</language>
              <body>try&#xD;
     {&#xD;
         $id = $request->input('id');&#xD;
         $firstName = $request->input('firstname');&#xD;
         $lastName = $request->input('lastname');&#xD;
         $username = $request->input('username');&#xD;
         $password = $request->input('password');&#xD;
         $email = $request->input('email');&#xD;
         $phone = $request->input('phone');&#xD;
         $role = $request->input('role');&#xD;
&#xD;
         // Create a User Object and populate the data&#xD;
         $user = new User($id, $firstName, $lastName, $username, $password, $email, $phone, $role);&#xD;
&#xD;
         return view('home.account')->with('user', $user);&#xD;
     }&#xD;
     catch(Exception $e)&#xD;
     {&#xD;
         return view('error.commonError');&#xD;
     }&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8ESUcFkwEeqFbcy13qxfSA" name="onProfile" specification="_8EJxkVkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_8ESUcVkwEeqFbcy13qxfSA" name="request" type="_8D1ogFkwEeqFbcy13qxfSA"/>
              <language>PHP</language>
              <body>try&#xD;
     {&#xD;
         // Create a User object&#xD;
         $user = new User(Session::get('userID'), &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;);&#xD;
&#xD;
         // Call the User Business Service to access the profile:&#xD;
         $userBusiness = new UserBusinessService();&#xD;
         $userData = $userBusiness->profile($user);&#xD;
&#xD;
         // // translate query array into object&#xD;
         if($userData)&#xD;
             $userData = get_object_vars($userData);&#xD;
&#xD;
         // if there is a result, then return the profile View&#xD;
         if($userData)&#xD;
         {&#xD;
             return view('users.profile')->with('user', $userData);&#xD;
         }&#xD;
         else&#xD;
         {&#xD;
             return view('error.commonError');&#xD;
         }&#xD;
     }&#xD;
     catch(Exception $e)&#xD;
     {&#xD;
         return view('error.commonError');&#xD;
     }&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8ESUclkwEeqFbcy13qxfSA" name="validateLoginForm" specification="_8EKYoVkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_8ESUc1kwEeqFbcy13qxfSA" name="request" type="_8D1ogFkwEeqFbcy13qxfSA"/>
              <language>PHP</language>
              <body>$rules = [&#xD;
         'username' => 'Required | Max: 20 | Alpha',&#xD;
         'password' => 'Required | Between: 4, 15'&#xD;
     ];&#xD;
     &#xD;
     // Run Validation Rules:&#xD;
     $this->validate($request, $rules);&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8ESUdFkwEeqFbcy13qxfSA" name="validateRegistrationForm" specification="_8EK_sVkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_8ESUdVkwEeqFbcy13qxfSA" name="request" type="_8D1ogFkwEeqFbcy13qxfSA"/>
              <language>PHP</language>
              <body>$rules = [&#xD;
         'username' => 'Required | Max: 20 | Alpha',&#xD;
         'password' => 'Required | Between: 4, 15',&#xD;
         'firstname' => 'Required | Between: 4, 10 | Alpha',&#xD;
         'lastname' => 'Required | Between: 4, 10 | Alpha',&#xD;
         'email' => 'Required | Between: 3, 20 | E-Mail',&#xD;
         'phone' => 'Required | Digits: 10',&#xD;
         'role' => 'Required | Max: 5 | Alpha'&#xD;
     ];&#xD;
     &#xD;
     // Run Validation Rules:&#xD;
     $this->validate($request, $rules);&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8ESUdlkwEeqFbcy13qxfSA" name="validateEditForm" specification="_8EMN0FkwEeqFbcy13qxfSA">
              <ownedParameter xmi:id="_8ESUd1kwEeqFbcy13qxfSA" name="request" type="_8D1ogFkwEeqFbcy13qxfSA"/>
              <language>PHP</language>
              <body>$rules = [&#xD;
         'password' => 'Required | Between: 4, 15',&#xD;
         'firstname' => 'Required | Between: 4, 10 | Alpha',&#xD;
         'lastname' => 'Required | Between: 4, 10 | Alpha',&#xD;
         'phone' => 'Required | Digits: 10'&#xD;
     ];&#xD;
     &#xD;
     // Run Validation Rules:&#xD;
     $this->validate($request, $rules);&#xD;
 </body>
            </ownedBehavior>
            <ownedOperation xmi:id="_8EGuQVkwEeqFbcy13qxfSA" name="onLogin" method="_8ERtYFkwEeqFbcy13qxfSA">
              <ownedComment xmi:id="_8EUJq1kwEeqFbcy13qxfSA">
                <body>*&#xD;
     * Creating a login Controller method:&#xD;
     *&#xD;
     * @param Request $request&#xD;
     * @return \Illuminate\View\View|\Illuminate\Contracts\View\Factory</body>
              </ownedComment>
              <ownedParameter xmi:id="_8EGuQlkwEeqFbcy13qxfSA" name="request" type="_8D1ogFkwEeqFbcy13qxfSA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_8EH8YFkwEeqFbcy13qxfSA" name="onRegister" method="_8ERtYlkwEeqFbcy13qxfSA">
              <ownedComment xmi:id="_8EUwsFkwEeqFbcy13qxfSA">
                <body>*&#xD;
     * onRegister Controller method that is used for registration.&#xD;
     *&#xD;
     * @param Request $request&#xD;
     * @return view('registerstatus') with a message.</body>
              </ownedComment>
              <ownedParameter xmi:id="_8EH8YVkwEeqFbcy13qxfSA" name="request" type="_8D1ogFkwEeqFbcy13qxfSA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_8EIjcFkwEeqFbcy13qxfSA" name="onEdit" method="_8ERtZFkwEeqFbcy13qxfSA">
              <ownedComment xmi:id="_8EUwsVkwEeqFbcy13qxfSA">
                <body>*&#xD;
     * Edit method to be able to make changes to the current User profile data.&#xD;
     * &#xD;
     * @param Request $request&#xD;
     * @return \Illuminate\View\View|\Illuminate\Contracts\View\Factory</body>
              </ownedComment>
              <ownedParameter xmi:id="_8EIjcVkwEeqFbcy13qxfSA" name="request" type="_8D1ogFkwEeqFbcy13qxfSA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_8EJKgFkwEeqFbcy13qxfSA" name="onNavigate" method="_8ERtZlkwEeqFbcy13qxfSA">
              <ownedComment xmi:id="_8EUwslkwEeqFbcy13qxfSA">
                <body>*&#xD;
     * Navigate to user profile page from displayUsers page&#xD;
     * @param Request $request&#xD;
     * @return \Illuminate\View\View|\Illuminate\Contracts\View\Factory</body>
              </ownedComment>
              <ownedParameter xmi:id="_8EJKgVkwEeqFbcy13qxfSA" name="request" type="_8D1ogFkwEeqFbcy13qxfSA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_8EJxkVkwEeqFbcy13qxfSA" name="onProfile" method="_8ESUcFkwEeqFbcy13qxfSA">
              <ownedComment xmi:id="_8EUws1kwEeqFbcy13qxfSA">
                <body>*&#xD;
     * Generate the Profile from Navbar based on the Session ID of the User.&#xD;
     *&#xD;
     * @param Request $request</body>
              </ownedComment>
              <ownedParameter xmi:id="_8EJxklkwEeqFbcy13qxfSA" name="request" type="_8D1ogFkwEeqFbcy13qxfSA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_8EKYoVkwEeqFbcy13qxfSA" name="validateLoginForm" visibility="private" method="_8ESUclkwEeqFbcy13qxfSA">
              <ownedComment xmi:id="_8EUwtFkwEeqFbcy13qxfSA">
                <body>*&#xD;
     * Validation function that can be reused&#xD;
     * @param Request $request</body>
              </ownedComment>
              <ownedParameter xmi:id="_8EKYolkwEeqFbcy13qxfSA" name="request" type="_8D1ogFkwEeqFbcy13qxfSA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_8EK_sVkwEeqFbcy13qxfSA" name="validateRegistrationForm" visibility="private" method="_8ESUdFkwEeqFbcy13qxfSA">
              <ownedComment xmi:id="_8EUwtVkwEeqFbcy13qxfSA">
                <body>*&#xD;
     * Validation function that can be reused&#xD;
     * @param Request $request</body>
              </ownedComment>
              <ownedParameter xmi:id="_8EK_slkwEeqFbcy13qxfSA" name="request" type="_8D1ogFkwEeqFbcy13qxfSA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_8EMN0FkwEeqFbcy13qxfSA" name="validateEditForm" visibility="private" method="_8ESUdlkwEeqFbcy13qxfSA">
              <ownedComment xmi:id="_8EUwtlkwEeqFbcy13qxfSA">
                <body>*&#xD;
     * Validation function that can be reused&#xD;
     * @param Request $request</body>
              </ownedComment>
              <ownedParameter xmi:id="_8EMN0VkwEeqFbcy13qxfSA" name="request" type="_8D1ogFkwEeqFbcy13qxfSA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_8D0aYFkwEeqFbcy13qxfSA" name="Controller"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_8D1ogFkwEeqFbcy13qxfSA" name="Request"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <profileApplication xmi:id="_uTKt8FkwEeqFbcy13qxfSA">
      <eAnnotations xmi:id="_uTSpwFkwEeqFbcy13qxfSA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
    <profileApplication xmi:id="_uU7BcFkwEeqFbcy13qxfSA">
      <eAnnotations xmi:id="_uU7BcVkwEeqFbcy13qxfSA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://PHP_PROFILES/PHP.profile.uml#PHPProfile-Annotation-PHPProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://PHP_PROFILES/PHP.profile.uml#PHPProfile"/>
    </profileApplication>
    <profileApplication xmi:id="_uU9dsFkwEeqFbcy13qxfSA">
      <eAnnotations xmi:id="_uU-EwFkwEeqFbcy13qxfSA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://ZEND_PROFILES/Zend.profile.uml#ZENDStyle-Annotation-ZENDStyle"/>
      </eAnnotations>
      <appliedProfile href="pathmap://ZEND_PROFILES/Zend.profile.uml#ZENDStyle"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_uTXiQFkwEeqFbcy13qxfSA" base_Package="_gxTEYFkwEeqFbcy13qxfSA">
    <languageName>PHP</languageName>
  </UMLLabProfile:TargetLanguage>
  <PHPProfile:CustomFileName xmi:id="_uU7ogFkwEeqFbcy13qxfSA" base_Classifier="_uUyekFkwEeqFbcy13qxfSA" fileName="app/Model/Education"/>
  <ZENDStyle:ZendStyledElement xmi:id="_uU-r0FkwEeqFbcy13qxfSA" base_Element="_uU-EwVkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_uU_58FkwEeqFbcy13qxfSA" base_Element="_uU-r0VkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_uVAhAFkwEeqFbcy13qxfSA" base_Element="_uU_58VkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_uVBvIFkwEeqFbcy13qxfSA" base_Element="_uVBIEFkwEeqFbcy13qxfSA"/>
  <PHPProfile:CustomFileName xmi:id="_uVHOsFkwEeqFbcy13qxfSA" base_Classifier="_uVGnoFkwEeqFbcy13qxfSA" fileName="app/Model/Job"/>
  <ZENDStyle:ZendStyledElement xmi:id="_uVJD4FkwEeqFbcy13qxfSA" base_Element="_uVIc0FkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_uVJq8FkwEeqFbcy13qxfSA" base_Element="_uVJD4VkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_uVKSAFkwEeqFbcy13qxfSA" base_Element="_uVJq8VkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_uVK5EFkwEeqFbcy13qxfSA" base_Element="_uVKSAVkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_uVMHMFkwEeqFbcy13qxfSA" base_Element="_uVLgIFkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_uVMuQFkwEeqFbcy13qxfSA" base_Element="_uVMHMVkwEeqFbcy13qxfSA"/>
  <PHPProfile:CustomFileName xmi:id="_uVQYoFkwEeqFbcy13qxfSA" base_Classifier="_uVPKgFkwEeqFbcy13qxfSA" fileName="app/Model/JobHistory"/>
  <ZENDStyle:ZendStyledElement xmi:id="_uVSN0FkwEeqFbcy13qxfSA" base_Element="_uVRmwFkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_uVS04FkwEeqFbcy13qxfSA" base_Element="_uVSN0VkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_uVTb8FkwEeqFbcy13qxfSA" base_Element="_uVS04VkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_uVV4MFkwEeqFbcy13qxfSA" base_Element="_uVUqEFkwEeqFbcy13qxfSA"/>
  <PHPProfile:CustomFileName xmi:id="_uVbXwFkwEeqFbcy13qxfSA" base_Classifier="_uVaJoFkwEeqFbcy13qxfSA" fileName="app/Model/Skill"/>
  <ZENDStyle:ZendStyledElement xmi:id="_uVdM8FkwEeqFbcy13qxfSA" base_Element="_uVb-0FkwEeqFbcy13qxfSA"/>
  <PHPProfile:CustomFileName xmi:id="_uVg3UFkwEeqFbcy13qxfSA" base_Classifier="_uVfpMFkwEeqFbcy13qxfSA" fileName="app/Model/User"/>
  <ZENDStyle:ZendStyledElement xmi:id="_uVjTkFkwEeqFbcy13qxfSA" base_Element="_uVisgFkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_uVkhsFkwEeqFbcy13qxfSA" base_Element="_uVj6oFkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_uVmW4FkwEeqFbcy13qxfSA" base_Element="_uVlv0FkwEeqFbcy13qxfSA"/>
  <PHPProfile:CustomFileName xmi:id="_uVsdgFkwEeqFbcy13qxfSA" base_Classifier="_uVqoUFkwEeqFbcy13qxfSA" fileName="app/Model/userAttempt"/>
  <ZENDStyle:ZendStyledElement xmi:id="_uVtroFkwEeqFbcy13qxfSA" base_Element="_uVtEkFkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_uVuSsFkwEeqFbcy13qxfSA" base_Element="_uVtroVkwEeqFbcy13qxfSA"/>
  <PHPProfile:CustomFileName xmi:id="_uVwH4FkwEeqFbcy13qxfSA" base_Classifier="_uVu5wFkwEeqFbcy13qxfSA" fileName="app/Model/userCredentials"/>
  <ZENDStyle:ZendStyledElement xmi:id="_uVxWAFkwEeqFbcy13qxfSA" base_Element="_uVwu8FkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_uVx9EFkwEeqFbcy13qxfSA" base_Element="_uVxWAVkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_uV544FkwEeqFbcy13qxfSA" base_Element="_uV4DsFkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_uV7HAVkwEeqFbcy13qxfSA" base_Element="_uV6f8FkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_uV8VIFkwEeqFbcy13qxfSA" base_Element="_uV7uEFkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_uV9jQFkwEeqFbcy13qxfSA" base_Element="_uV88MFkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_uV-xYFkwEeqFbcy13qxfSA" base_Element="_uV-KUFkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_uWB0sFkwEeqFbcy13qxfSA" base_Element="_uV__gFkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_uWE4AFkwEeqFbcy13qxfSA" base_Element="_uWDC0FkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_uWFfEFkwEeqFbcy13qxfSA" base_Element="_uWE4AVkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_uWGGIlkwEeqFbcy13qxfSA" base_Element="_uWGGIFkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_uWHUQFkwEeqFbcy13qxfSA" base_Element="_uWGtMFkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_uWIiYFkwEeqFbcy13qxfSA" base_Element="_uWHUQVkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_uWK-o1kwEeqFbcy13qxfSA" base_Element="_uWKXkFkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_uWMMwFkwEeqFbcy13qxfSA" base_Element="_uWLlsFkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_uWPQEFkwEeqFbcy13qxfSA" base_Element="_uWNa4FkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_uWP3IVkwEeqFbcy13qxfSA" base_Element="_uWPQEVkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_uWRFQFkwEeqFbcy13qxfSA" base_Element="_uWQeMFkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_uWRsUFkwEeqFbcy13qxfSA" base_Element="_uWRFQVkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_uWS6cFkwEeqFbcy13qxfSA" base_Element="_uWSTYFkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_uWUvoFkwEeqFbcy13qxfSA" base_Element="_uWUIkFkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_uWV9wVkwEeqFbcy13qxfSA" base_Element="_uWVWsFkwEeqFbcy13qxfSA"/>
  <UMLLabProfile:Simple xmi:id="_uWdSgFkwEeqFbcy13qxfSA" base_Element="_uWcEYFkwEeqFbcy13qxfSA"/>
  <UMLLabProfile:Simple xmi:id="_uWegoVkwEeqFbcy13qxfSA" base_Element="_uWegoFkwEeqFbcy13qxfSA"/>
  <UMLLabProfile:Simple xmi:id="_uWfuwFkwEeqFbcy13qxfSA" base_Element="_uWfHsVkwEeqFbcy13qxfSA"/>
  <UMLLabProfile:Simple xmi:id="_uWg84FkwEeqFbcy13qxfSA" base_Element="_uWgV0VkwEeqFbcy13qxfSA"/>
  <UMLLabProfile:Simple xmi:id="_uWiyEFkwEeqFbcy13qxfSA" base_Element="_uWiLAFkwEeqFbcy13qxfSA"/>
  <UMLLabProfile:Simple xmi:id="_uWjZIFkwEeqFbcy13qxfSA" base_Element="_uWiyEVkwEeqFbcy13qxfSA"/>
  <UMLLabProfile:Simple xmi:id="_uWkAMFkwEeqFbcy13qxfSA" base_Element="_uWjZIVkwEeqFbcy13qxfSA"/>
  <UMLLabProfile:Simple xmi:id="_uWknQFkwEeqFbcy13qxfSA" base_Element="_uWkAMVkwEeqFbcy13qxfSA"/>
  <UMLLabProfile:Simple xmi:id="_uWlOUFkwEeqFbcy13qxfSA" base_Element="_uWknQVkwEeqFbcy13qxfSA"/>
  <UMLLabProfile:Simple xmi:id="_uWl1YFkwEeqFbcy13qxfSA" base_Element="_uWlOUVkwEeqFbcy13qxfSA"/>
  <UMLLabProfile:Simple xmi:id="_uWnDgFkwEeqFbcy13qxfSA" base_Element="_uWmccFkwEeqFbcy13qxfSA"/>
  <UMLLabProfile:Simple xmi:id="_uWoRoFkwEeqFbcy13qxfSA" base_Element="_uWnqkVkwEeqFbcy13qxfSA"/>
  <UMLLabProfile:Simple xmi:id="_uWpfwFkwEeqFbcy13qxfSA" base_Element="_uWo4sFkwEeqFbcy13qxfSA"/>
  <UMLLabProfile:Simple xmi:id="_uWqG0FkwEeqFbcy13qxfSA" base_Element="_uWpfwlkwEeqFbcy13qxfSA"/>
  <UMLLabProfile:Simple xmi:id="_uWrU8VkwEeqFbcy13qxfSA" base_Element="_uWrU8FkwEeqFbcy13qxfSA"/>
  <UMLLabProfile:Simple xmi:id="_uWtKIVkwEeqFbcy13qxfSA" base_Element="_uWtKIFkwEeqFbcy13qxfSA"/>
  <UMLLabProfile:Simple xmi:id="_uWu_UFkwEeqFbcy13qxfSA" base_Element="_uWuYQVkwEeqFbcy13qxfSA"/>
  <UMLLabProfile:Simple xmi:id="_uWvmYFkwEeqFbcy13qxfSA" base_Element="_uWu_UVkwEeqFbcy13qxfSA"/>
  <UMLLabProfile:Simple xmi:id="_uWw0gFkwEeqFbcy13qxfSA" base_Element="_uWwNcFkwEeqFbcy13qxfSA"/>
  <UMLLabProfile:Simple xmi:id="_uWxbkFkwEeqFbcy13qxfSA" base_Element="_uWw0gVkwEeqFbcy13qxfSA"/>
  <UMLLabProfile:Simple xmi:id="_uWyCoFkwEeqFbcy13qxfSA" base_Element="_uWxbkVkwEeqFbcy13qxfSA"/>
  <UMLLabProfile:Simple xmi:id="_uWypsFkwEeqFbcy13qxfSA" base_Element="_uWyCoVkwEeqFbcy13qxfSA"/>
  <PHPProfile:CustomFileName xmi:id="_y_eFAFkwEeqFbcy13qxfSA" base_Classifier="_y_cP0FkwEeqFbcy13qxfSA" fileName="app/Services/Business/AdminBusinessService"/>
  <ZENDStyle:ZendStyledElement xmi:id="_y_ghQFkwEeqFbcy13qxfSA" base_Element="_y_f6MFkwEeqFbcy13qxfSA"/>
  <PHPProfile:CustomFileName xmi:id="_y_prMFkwEeqFbcy13qxfSA" base_Classifier="_y_odEFkwEeqFbcy13qxfSA" fileName="app/Services/Business/PortfolioBusinessService"/>
  <PHPProfile:CustomFileName xmi:id="_y_vKwFkwEeqFbcy13qxfSA" base_Classifier="_y_t8oFkwEeqFbcy13qxfSA" fileName="app/Services/Business/SecurityService"/>
  <PHPProfile:CustomFileName xmi:id="_y_xnAFkwEeqFbcy13qxfSA" base_Classifier="_y_wY4FkwEeqFbcy13qxfSA" fileName="app/Services/Business/UserBusinessService"/>
  <PHPProfile:CustomFileName xmi:id="_y_1RYFkwEeqFbcy13qxfSA" base_Classifier="_y_0qUFkwEeqFbcy13qxfSA" fileName="app/Services/Data/AdminDataService"/>
  <ZENDStyle:ZendStyledElement xmi:id="_y_2fgFkwEeqFbcy13qxfSA" base_Element="_y_14cFkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_y_3GkFkwEeqFbcy13qxfSA" base_Element="_y_2fgVkwEeqFbcy13qxfSA"/>
  <PHPProfile:CustomFileName xmi:id="_y_6w8FkwEeqFbcy13qxfSA" base_Classifier="_y_5i0FkwEeqFbcy13qxfSA" fileName="app/Services/Data/JobDataService"/>
  <ZENDStyle:ZendStyledElement xmi:id="_y_7_EFkwEeqFbcy13qxfSA" base_Element="_y_7YAFkwEeqFbcy13qxfSA"/>
  <PHPProfile:CustomFileName xmi:id="_zAAQgFkwEeqFbcy13qxfSA" base_Classifier="_y__CYFkwEeqFbcy13qxfSA" fileName="app/Services/Data/PortfolioDataService"/>
  <PHPProfile:CustomFileName xmi:id="_zAIzYFkwEeqFbcy13qxfSA" base_Classifier="_zAHlQFkwEeqFbcy13qxfSA" fileName="app/Services/Data/UserDataService"/>
  <PHPProfile:CustomFileName xmi:id="_zAMdwFkwEeqFbcy13qxfSA" base_Classifier="_zAL2sFkwEeqFbcy13qxfSA" fileName="app/Services/Utility/DatabaseException"/>
  <PHPProfile:CustomFileName xmi:id="_zAOS8FkwEeqFbcy13qxfSA" base_Classifier="_zANr4FkwEeqFbcy13qxfSA" fileName="app/Services/Utility/db_connector"/>
  <ZENDStyle:ZendStyledElement xmi:id="_zAO6AVkwEeqFbcy13qxfSA" base_Element="_zAO6AFkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_zAZSEFkwEeqFbcy13qxfSA" base_Element="_zAYrAFkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_zAagMlkwEeqFbcy13qxfSA" base_Element="_zAagMFkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_zAbuUFkwEeqFbcy13qxfSA" base_Element="_zAbHQFkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_zAcVYFkwEeqFbcy13qxfSA" base_Element="_zAbuUVkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_zAc8cFkwEeqFbcy13qxfSA" base_Element="_zAcVYVkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_zAc8c1kwEeqFbcy13qxfSA" base_Element="_zAc8cVkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_zAdjgVkwEeqFbcy13qxfSA" base_Element="_zAc8dFkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_zAeKkFkwEeqFbcy13qxfSA" base_Element="_zAdjglkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_zAexoFkwEeqFbcy13qxfSA" base_Element="_zAeKkVkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_zAexo1kwEeqFbcy13qxfSA" base_Element="_zAexoVkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_zAh08FkwEeqFbcy13qxfSA" base_Element="_zAhN4FkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_zAjqIFkwEeqFbcy13qxfSA" base_Element="_zAjDEFkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_zAkRMFkwEeqFbcy13qxfSA" base_Element="_zAjqIVkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_zAmGYFkwEeqFbcy13qxfSA" base_Element="_zAlfUFkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_zAmtcFkwEeqFbcy13qxfSA" base_Element="_zAmGYVkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_zAnUgFkwEeqFbcy13qxfSA" base_Element="_zAmtcVkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_zAn7kFkwEeqFbcy13qxfSA" base_Element="_zAnUgVkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_zAoioVkwEeqFbcy13qxfSA" base_Element="_zAn7kVkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_zApJslkwEeqFbcy13qxfSA" base_Element="_zApJsFkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_zAsNAVkwEeqFbcy13qxfSA" base_Element="_zArl8FkwEeqFbcy13qxfSA"/>
  <UMLLabProfile:Reference xmi:id="_zAzhwFkwEeqFbcy13qxfSA" base_Element="_zAyToFkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_zA0v4FkwEeqFbcy13qxfSA" base_Element="_zA0I0FkwEeqFbcy13qxfSA"/>
  <UMLLabProfile:Reference xmi:id="_zA3MIFkwEeqFbcy13qxfSA" base_Element="_zA1W8FkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_zA3zMFkwEeqFbcy13qxfSA" base_Element="_zA3MIVkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_zA5BUFkwEeqFbcy13qxfSA" base_Element="_zA4aQFkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_zA5oYFkwEeqFbcy13qxfSA" base_Element="_zA5BUVkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_zA6PcVkwEeqFbcy13qxfSA" base_Element="_zA5oYVkwEeqFbcy13qxfSA"/>
  <UMLLabProfile:Reference xmi:id="_zA8rsFkwEeqFbcy13qxfSA" base_Element="_zA7dkFkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_zA9SwFkwEeqFbcy13qxfSA" base_Element="_zA8rsVkwEeqFbcy13qxfSA"/>
  <UMLLabProfile:Reference xmi:id="_zA_H8FkwEeqFbcy13qxfSA" base_Element="_zA950FkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_zBAWEFkwEeqFbcy13qxfSA" base_Element="_zA_vAFkwEeqFbcy13qxfSA"/>
  <UMLLabProfile:Reference xmi:id="_zBBkMFkwEeqFbcy13qxfSA" base_Element="_zBAWEVkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_zBCLQVkwEeqFbcy13qxfSA" base_Element="_zBBkMVkwEeqFbcy13qxfSA"/>
  <UMLLabProfile:Reference xmi:id="_zBDZYFkwEeqFbcy13qxfSA" base_Element="_zBCyUFkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_zBEAclkwEeqFbcy13qxfSA" base_Element="_zBEAcFkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_zBFOkFkwEeqFbcy13qxfSA" base_Element="_zBEngFkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_zBF1oFkwEeqFbcy13qxfSA" base_Element="_zBFOkVkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_zBHDwFkwEeqFbcy13qxfSA" base_Element="_zBGcsFkwEeqFbcy13qxfSA"/>
  <UMLLabProfile:Reference xmi:id="_zBIR4FkwEeqFbcy13qxfSA" base_Element="_zBHDwVkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_zBI48lkwEeqFbcy13qxfSA" base_Element="_zBI48FkwEeqFbcy13qxfSA"/>
  <UMLLabProfile:Reference xmi:id="_zBKuIFkwEeqFbcy13qxfSA" base_Element="_zBJgAFkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_zBLVMFkwEeqFbcy13qxfSA" base_Element="_zBKuIVkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_zBL8QlkwEeqFbcy13qxfSA" base_Element="_zBL8QFkwEeqFbcy13qxfSA"/>
  <UMLLabProfile:Reference xmi:id="_zBNxcFkwEeqFbcy13qxfSA" base_Element="_zBNKYFkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_zBOYglkwEeqFbcy13qxfSA" base_Element="_zBOYgFkwEeqFbcy13qxfSA"/>
  <UMLLabProfile:Reference xmi:id="_zBPmoFkwEeqFbcy13qxfSA" base_Element="_zBO_kFkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_zBQNsFkwEeqFbcy13qxfSA" base_Element="_zBPmoVkwEeqFbcy13qxfSA"/>
  <UMLLabProfile:Reference xmi:id="_zBQ0wFkwEeqFbcy13qxfSA" base_Element="_zBQNsVkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_zBRb0FkwEeqFbcy13qxfSA" base_Element="_zBQ0wVkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_zBSC4VkwEeqFbcy13qxfSA" base_Element="_zBRb0VkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_zBSp8FkwEeqFbcy13qxfSA" base_Element="_zBSC4lkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_zBSp81kwEeqFbcy13qxfSA" base_Element="_zBSp8VkwEeqFbcy13qxfSA"/>
  <UMLLabProfile:Reference xmi:id="_zBUfIFkwEeqFbcy13qxfSA" base_Element="_zBT4EFkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_zBUfI1kwEeqFbcy13qxfSA" base_Element="_zBUfIVkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_zBVGMlkwEeqFbcy13qxfSA" base_Element="_zBVGMFkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_zBVtQFkwEeqFbcy13qxfSA" base_Element="_zBVGM1kwEeqFbcy13qxfSA"/>
  <UMLLabProfile:Reference xmi:id="_zBW7YFkwEeqFbcy13qxfSA" base_Element="_zBWUUFkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_zBYJg1kwEeqFbcy13qxfSA" base_Element="_zBXicVkwEeqFbcy13qxfSA"/>
  <UMLLabProfile:Simple xmi:id="_zBalwFkwEeqFbcy13qxfSA" base_Element="_zBZ-sFkwEeqFbcy13qxfSA"/>
  <UMLLabProfile:Simple xmi:id="_zBalwlkwEeqFbcy13qxfSA" base_Element="_zBalwVkwEeqFbcy13qxfSA"/>
  <UMLLabProfile:Simple xmi:id="_zBbM0VkwEeqFbcy13qxfSA" base_Element="_zBbM0FkwEeqFbcy13qxfSA"/>
  <UMLLabProfile:Simple xmi:id="_zBbz4FkwEeqFbcy13qxfSA" base_Element="_zBbM0lkwEeqFbcy13qxfSA"/>
  <UMLLabProfile:Simple xmi:id="_zBbz4lkwEeqFbcy13qxfSA" base_Element="_zBbz4VkwEeqFbcy13qxfSA"/>
  <UMLLabProfile:Simple xmi:id="_zBca8FkwEeqFbcy13qxfSA" base_Element="_zBbz41kwEeqFbcy13qxfSA"/>
  <UMLLabProfile:Simple xmi:id="_zBca8lkwEeqFbcy13qxfSA" base_Element="_zBca8VkwEeqFbcy13qxfSA"/>
  <UMLLabProfile:Simple xmi:id="_zBdCAFkwEeqFbcy13qxfSA" base_Element="_zBca81kwEeqFbcy13qxfSA"/>
  <UMLLabProfile:Simple xmi:id="_zBdpEVkwEeqFbcy13qxfSA" base_Element="_zBdpEFkwEeqFbcy13qxfSA"/>
  <PHPProfile:CustomFileName xmi:id="_8DY8kFkwEeqFbcy13qxfSA" base_Classifier="_8DYVgFkwEeqFbcy13qxfSA" fileName="app/Http/Controllers/AdminController"/>
  <ZENDStyle:ZendStyledElement xmi:id="_8Db_4FkwEeqFbcy13qxfSA" base_Element="_8DbY0FkwEeqFbcy13qxfSA"/>
  <PHPProfile:CustomFileName xmi:id="_8DiGgFkwEeqFbcy13qxfSA" base_Classifier="_8Dg4YFkwEeqFbcy13qxfSA" fileName="app/Http/Controllers/PortfolioController"/>
  <PHPProfile:CustomFileName xmi:id="_8DrQcFkwEeqFbcy13qxfSA" base_Classifier="_8DqCUFkwEeqFbcy13qxfSA" fileName="app/Http/Controllers/UserController"/>
  <UMLLabProfile:Reference xmi:id="_8D1BcFkwEeqFbcy13qxfSA" base_Element="_8D0aYFkwEeqFbcy13qxfSA"/>
  <UMLLabProfile:Reference xmi:id="_8D2PkFkwEeqFbcy13qxfSA" base_Element="_8D1ogFkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_8D22olkwEeqFbcy13qxfSA" base_Element="_8D22oFkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_8D3dslkwEeqFbcy13qxfSA" base_Element="_8D3dsFkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_8D4EwlkwEeqFbcy13qxfSA" base_Element="_8D4EwFkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_8D4r0VkwEeqFbcy13qxfSA" base_Element="_8D4Ew1kwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_8D5S4FkwEeqFbcy13qxfSA" base_Element="_8D4r0lkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_8D558VkwEeqFbcy13qxfSA" base_Element="_8D5S4VkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_8D6hAFkwEeqFbcy13qxfSA" base_Element="_8D558lkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_8D7IEFkwEeqFbcy13qxfSA" base_Element="_8D6hAVkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_8D89QlkwEeqFbcy13qxfSA" base_Element="_8D89QFkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_8D-LYlkwEeqFbcy13qxfSA" base_Element="_8D-LYFkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_8D_ZgFkwEeqFbcy13qxfSA" base_Element="_8D-ycVkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_8EAAkFkwEeqFbcy13qxfSA" base_Element="_8D_ZgVkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_8EAAk1kwEeqFbcy13qxfSA" base_Element="_8EAAkVkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_8EAnolkwEeqFbcy13qxfSA" base_Element="_8EAnoFkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_8EBOslkwEeqFbcy13qxfSA" base_Element="_8EBOsFkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_8EB1wlkwEeqFbcy13qxfSA" base_Element="_8EB1wFkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_8ECc0lkwEeqFbcy13qxfSA" base_Element="_8ECc0FkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_8EDD4lkwEeqFbcy13qxfSA" base_Element="_8EDD4FkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_8EESAFkwEeqFbcy13qxfSA" base_Element="_8EDq8FkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_8EE5ElkwEeqFbcy13qxfSA" base_Element="_8EE5EFkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_8EGHMFkwEeqFbcy13qxfSA" base_Element="_8EFgIFkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_8EHVUFkwEeqFbcy13qxfSA" base_Element="_8EGuQVkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_8EH8YlkwEeqFbcy13qxfSA" base_Element="_8EH8YFkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_8EIjclkwEeqFbcy13qxfSA" base_Element="_8EIjcFkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_8EJxkFkwEeqFbcy13qxfSA" base_Element="_8EJKgFkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_8EKYoFkwEeqFbcy13qxfSA" base_Element="_8EJxkVkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_8EK_sFkwEeqFbcy13qxfSA" base_Element="_8EKYoVkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_8ELmwFkwEeqFbcy13qxfSA" base_Element="_8EK_sVkwEeqFbcy13qxfSA"/>
  <ZENDStyle:ZendStyledElement xmi:id="_8EMN0lkwEeqFbcy13qxfSA" base_Element="_8EMN0FkwEeqFbcy13qxfSA"/>
</xmi:XMI>
