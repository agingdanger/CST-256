<?php

namespace App\Services\Utility;

use Illuminate\Support\Facades\Log;

class MyLogger4 implements ILoggerService
{
    private static $logger = null;
    
    static function getLogger()
    {
        if (self::$logger == null)
        {
            self::$logger = new Logger('playlaravel');
            self::$logger->pushHandler(new LogglyHandler('b79d48aa-0105-4d8b-a5ee-4b9069ee0000/tag/cst323_logfile_heroku_upload_php', Logger::DEBUG));
        }
        return self::$logger;
    }
    
    // 932853ca-d111-48b1-a9ff-3bd82a217a14
    
    public function debug($message, $data=array())
    {
        Log::debug($message . (count($data) != 0 ?' with data of ' . print_r($data, true) : ""));
    }
    
    public function info($message, $data=array())
    {
        Log::info($message . (count($data) != 0 ?' with data of ' . print_r($data, true) : ""));
    }
    
    public function warning($message, $data=array())
    {
        Log::warning($message . (count($data) != 0 ?' with data of ' . print_r($data, true) : ""));
    }
    
    public function error($message, $data=array())
    {
        Log::error($message . (count($data) != 0 ?' with data of ' . print_r($data, true) : ""));
    }
}